<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Sub-Pixel Photometry: /home/kpenev/projects/git/AstroWISP/doc_src/Core/ParseCSV.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "ams.js"],
    jax: ["input/TeX","output/SVG"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@3/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Sub-Pixel Photometry
   </div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.svg"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('ParseCSV_8h.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ParseCSV.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Declarations of functions for parsing strings of comma separated values to lists.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;../Core/SharedLibraryExportMacros.h&quot;</code><br />
<code>#include &quot;<a class="el" href="PhotColumns_8h_source.xhtml">PhotColumns.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="Core_2Typedefs_8h_source.xhtml">Typedefs.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="Error_8h_source.xhtml">Error.h</a>&quot;</code><br />
<code>#include &lt;list&gt;</code><br />
<code>#include &lt;string&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for ParseCSV.h:</div>
<div class="dyncontent">
<div class="center"><img src="ParseCSV_8h__incl.png" border="0" usemap="#a_2home_2kpenev_2projects_2git_2AstroWISP_2doc__src_2Core_2ParseCSV_8h" alt=""/></div>
<map name="a_2home_2kpenev_2projects_2git_2AstroWISP_2doc__src_2Core_2ParseCSV_8h" id="a_2home_2kpenev_2projects_2git_2AstroWISP_2doc__src_2Core_2ParseCSV_8h">
<area shape="rect" title="Declarations of functions for parsing strings of comma separated values to lists." alt="" coords="405,5,590,69"/>
<area shape="rect" href="SharedLibraryExportMacros_8h_source.xhtml" title=" " alt="" coords="295,272,515,319"/>
<area shape="rect" href="PhotColumns_8h.xhtml" title="Defines constants to denote the various columns that can be input or output by the various tools and ..." alt="" coords="74,195,206,224"/>
<area shape="rect" title=" " alt="" coords="5,281,67,310"/>
<area shape="rect" href="Core_2Typedefs_8h.xhtml" title="Some useful typedef statements." alt="" coords="310,117,410,147"/>
<area shape="rect" title=" " alt="" coords="575,195,617,224"/>
<area shape="rect" href="Error_8h.xhtml" title="The hierarchy of exceptions for this project." alt="" coords="719,117,790,147"/>
<area shape="rect" title=" " alt="" coords="107,281,173,310"/>
<area shape="rect" title=" " alt="" coords="205,281,270,310"/>
<area shape="rect" title=" " alt="" coords="282,195,361,224"/>
<area shape="rect" title=" " alt="" coords="436,195,551,224"/>
<area shape="rect" title=" " alt="" coords="743,195,822,224"/>
<area shape="rect" title=" " alt="" coords="847,195,929,224"/>
</map>
</div>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><img src="ParseCSV_8h__dep__incl.png" border="0" usemap="#a_2home_2kpenev_2projects_2git_2AstroWISP_2doc__src_2Core_2ParseCSV_8hdep" alt=""/></div>
<map name="a_2home_2kpenev_2projects_2git_2AstroWISP_2doc__src_2Core_2ParseCSV_8hdep" id="a_2home_2kpenev_2projects_2git_2AstroWISP_2doc__src_2Core_2ParseCSV_8hdep">
<area shape="rect" title="Declarations of functions for parsing strings of comma separated values to lists." alt="" coords="597,5,782,69"/>
<area shape="rect" href="Background_2CommandLineUtil_8h.xhtml" title="Declarations of utilities for command line parsing backgrund information." alt="" coords="193,117,452,181"/>
<area shape="rect" href="Core_2CommandLineUtil_8h.xhtml" title="Declarations of utilities for command line parsing common to all tools." alt="" coords="477,117,683,181"/>
<area shape="rect" href="ParseCSV_8cpp.xhtml" title="The definitions of the function in ParseCSV.h." alt="" coords="917,117,1102,181"/>
<area shape="rect" href="Grid_8h.xhtml" title="Some useful typedef statements." alt="" coords="707,117,893,181"/>
<area shape="rect" href="FitPSF_2Config_8h.xhtml" title="Declares the command line parser for the FitPSF tool." alt="" coords="493,453,678,517"/>
<area shape="rect" href="SubPixPhot_2Config_8h.xhtml" title="Defines a class containing the configuration with which to run subpixphot." alt="" coords="359,229,545,293"/>
<area shape="rect" href="FitPSF_2CInterface_8cpp.xhtml" title="Define the C&#45;interface functions for the FitPSF library." alt="" coords="493,1349,678,1413"/>
<area shape="rect" href="FitPSF_2Common_8h.xhtml" title="Defines some of the functions needed exclusively by the FitPSF tool." alt="" coords="506,565,691,629"/>
<area shape="rect" href="FitPSF_2Config_8cpp.xhtml" title="The implementation of the FitPSF::Config methods." alt="" coords="297,565,482,629"/>
<area shape="rect" href="FitPSF_2PiecewiseBicubic_8h.xhtml" title="The declarations of the functions related to fitting piecewise bicubic PSFs." alt="" coords="703,1237,923,1301"/>
<area shape="rect" href="FitPSF_2SDKSource_8h_source.xhtml" title=" " alt="" coords="94,901,279,965"/>
<area shape="rect" href="FitPSF_2Source_8h.xhtml" title="Defines the base class for sources participating in PSF fitting." alt="" coords="658,677,843,741"/>
<area shape="rect" href="SDKUtil_8h.xhtml" title="Declare functions used during elliptical Gaussian PSF fitting." alt="" coords="97,1013,282,1077"/>
<area shape="rect" href="PolynomialSDK_8h.xhtml" title="Declares a class for fitting elliptical gaussian PSFs as a smooth function of image position." alt="" coords="309,1125,515,1189"/>
<area shape="rect" href="SDKUtil_8cpp.xhtml" title="Define the functions from SDKUtil.h." alt="" coords="97,1125,282,1189"/>
<area shape="rect" href="FitPSF_2Image_8h.xhtml" title="Defines a class describing an image of Pixel pixels." alt="" coords="658,789,843,853"/>
<area shape="rect" href="OverlapSource_8h.xhtml" title="Defines the overlap&#45;related features of PSF fitting sources." alt="" coords="805,901,1005,965"/>
<area shape="rect" href="Pixel_8cpp.xhtml" title="Define the backrgound excess functions and some methods of Pixel.h." alt="" coords="449,789,634,853"/>
<area shape="rect" href="SDKSourceBase_8h.xhtml" title="Declares a base class for sources participating in SDK fitting." alt="" coords="210,789,425,853"/>
<area shape="rect" href="LinearSource_8h.xhtml" title="Declares a class used for PSF fitting where pixel responses are linear functions of the shape paramet..." alt="" coords="1025,1013,1215,1077"/>
<area shape="rect" href="LinearSource_8cpp.xhtml" title="Define some of the methods of LinearSource class." alt="" coords="1002,1125,1209,1189"/>
<area shape="rect" href="PiecewiseBicubicPSFSmoothing_8h_source.xhtml" title=" " alt="" coords="649,1125,978,1189"/>
<area shape="rect" href="SDKSourceBase_8cpp.xhtml" title="Defines some of the methods of the SDKSourceBase class." alt="" coords="304,901,536,965"/>
<area shape="rect" href="SubPixPhot_2Config_8cpp.xhtml" title="Implement the methods of the Config class." alt="" coords="356,341,548,405"/>
<area shape="rect" href="H5IODataTree_8h.xhtml" title="A structure to hold any output data produced by subpixtools." alt="" coords="1267,341,1453,405"/>
<area shape="rect" href="parse__grid_8h.xhtml" title="Define functions for converting between string and PSF::Grid." alt="" coords="821,229,1006,293"/>
<area shape="rect" href="PSF_2CommandLineUtil_8h.xhtml" title="Declarations of utilities for command line parsing of PSF information." alt="" coords="674,341,878,405"/>
<area shape="rect" href="IO_2CInterface_8cpp.xhtml" title="The definitions of the functinos from CInterface.h." alt="" coords="1163,453,1349,517"/>
<area shape="rect" href="H5IODataTree_8cpp.xhtml" title="The definitions of some of the methods of the H5IODataTree class." alt="" coords="1373,453,1558,517"/>
<area shape="rect" href="DataTreeCalculations_8h.xhtml" title="Declare functions that calculate some entries of I/O data trees from others." alt="" coords="1905,789,2135,853"/>
<area shape="rect" href="EllipticalGaussianMap_8h.xhtml" title="Declares a smoothly varying over an image elliptical Gaussian PSF map class." alt="" coords="1529,677,1764,741"/>
<area shape="rect" href="Map_8h.xhtml" title="Declarations of the Map class and some related functions." alt="" coords="1319,565,1505,629"/>
<area shape="rect" href="SubPixPhot_2Common_8h.xhtml" title="Declare functions used by both the C&#45;interface and the command line interface." alt="" coords="1789,677,1982,741"/>
<area shape="rect" href="MapSource_8h.xhtml" title="Defines a source class which can be passed directly to a PSF map." alt="" coords="954,453,1139,517"/>
<area shape="rect" href="MapSourceContainer_8h.xhtml" title="Declares a container for holding MapSource objects." alt="" coords="1684,565,1911,629"/>
<area shape="rect" href="DataTreeCalculations_8cpp.xhtml" title="The definitions of the functions declared in DataTreeCalculations.h." alt="" coords="1897,901,2143,965"/>
<area shape="rect" href="EllipticalGaussianMap_8cpp.xhtml" title="Definitions of some methods of the EllipticalGaussianMap class." alt="" coords="1530,789,1782,853"/>
<area shape="rect" href="Map_8cpp.xhtml" title="The declarations of Map methods and related functions." alt="" coords="1319,677,1505,741"/>
<area shape="rect" href="PiecewiseBicubicMap_8h.xhtml" title="Declares a smoothly varying over an image piecewise bicubic PSF map class." alt="" coords="1002,677,1235,741"/>
<area shape="rect" href="PSF_2CInterface_8cpp.xhtml" title="The definitions of the functions declared in CInterface.h." alt="" coords="1269,789,1454,853"/>
<area shape="rect" href="PiecewiseBicubicMap_8cpp.xhtml" title="Definitions of some methods of the PiecewiseBicubicMap class." alt="" coords="993,789,1244,853"/>
</map>
</div>
</div>
<p><a href="ParseCSV_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a9b72ac36292e4841ce988699f7e8c487"><td class="memItemLeft" align="right" valign="top">std::list&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ParseCSV_8cpp.xhtml#a9b72ac36292e4841ce988699f7e8c487">Core::parse_int_list</a> (const std::string &amp;csv, const std::string &amp;optname, unsigned min_count, unsigned max_count)</td></tr>
<tr class="memdesc:a9b72ac36292e4841ce988699f7e8c487"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pareses a string of comma separated integer values into a list.  <a href="ParseCSV_8cpp.xhtml#a9b72ac36292e4841ce988699f7e8c487">More...</a><br /></td></tr>
<tr class="separator:a9b72ac36292e4841ce988699f7e8c487"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e02a5653477396123c9e733302a7f2b"><td class="memItemLeft" align="right" valign="top">RealList&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ParseCSV_8cpp.xhtml#a0e02a5653477396123c9e733302a7f2b">Core::parse_real_list</a> ( const std::string &amp;csv, const std::string &amp;optname, unsigned min_count, unsigned max_count)</td></tr>
<tr class="memdesc:a0e02a5653477396123c9e733302a7f2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a string of comma separated real values into a list.  <a href="ParseCSV_8cpp.xhtml#a0e02a5653477396123c9e733302a7f2b">More...</a><br /></td></tr>
<tr class="separator:a0e02a5653477396123c9e733302a7f2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76e2e1a5a5d4f67163949b14bd4cdebb"><td class="memItemLeft" align="right" valign="top">StringList&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ParseCSV_8cpp.xhtml#a76e2e1a5a5d4f67163949b14bd4cdebb">Core::parse_string_list</a> ( const std::string &amp;csv, const std::string &amp;optname, unsigned min_count, unsigned max_count)</td></tr>
<tr class="memdesc:a76e2e1a5a5d4f67163949b14bd4cdebb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a string of comma separated sub-strings into a list.  <a href="ParseCSV_8cpp.xhtml#a76e2e1a5a5d4f67163949b14bd4cdebb">More...</a><br /></td></tr>
<tr class="separator:a76e2e1a5a5d4f67163949b14bd4cdebb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af969a186bf8ead3ccefe36a41cad6d25"><td class="memItemLeft" align="right" valign="top">ColumnList&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ParseCSV_8cpp.xhtml#af969a186bf8ead3ccefe36a41cad6d25">Core::parse_column_list</a> ( const std::string &amp;csv, unsigned num_apertures, const std::string &amp;optname, bool allow_unknown=true)</td></tr>
<tr class="memdesc:af969a186bf8ead3ccefe36a41cad6d25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a string of comma separated column names into a list, replicating per-aperture columns appropriately.  <a href="ParseCSV_8cpp.xhtml#af969a186bf8ead3ccefe36a41cad6d25">More...</a><br /></td></tr>
<tr class="separator:af969a186bf8ead3ccefe36a41cad6d25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af66f57df1f598b5c2123641090958a45"><td class="memTemplParams" colspan="2">template&lt;class VAL_TYPE &gt; </td></tr>
<tr class="memitem:af66f57df1f598b5c2123641090958a45"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="ParseCSV_8h.xhtml#af66f57df1f598b5c2123641090958a45">Core::parse_csv_list</a> (const std::string &amp;csv, const std::string &amp;optname, unsigned min_count, unsigned max_count, std::list&lt; VAL_TYPE &gt; &amp;result)</td></tr>
<tr class="memdesc:af66f57df1f598b5c2123641090958a45"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perses a string of comma separated values into a list.  <a href="ParseCSV_8h.xhtml#af66f57df1f598b5c2123641090958a45">More...</a><br /></td></tr>
<tr class="separator:af66f57df1f598b5c2123641090958a45"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Declarations of functions for parsing strings of comma separated values to lists. </p>
</div><h2 class="groupheader">Function Documentation</h2>
<a id="af969a186bf8ead3ccefe36a41cad6d25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af969a186bf8ead3ccefe36a41cad6d25">&#9670;&nbsp;</a></span>parse_column_list()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ColumnList Core::parse_column_list </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>csv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>num_apertures</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>optname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>allow_unknown</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses a string of comma separated column names into a list, replicating per-aperture columns appropriately. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">csv</td><td>The string to parse. </td></tr>
    <tr><td class="paramname">num_apertures</td><td>How many copies of per-aperture columns to make. </td></tr>
    <tr><td class="paramname">optname</td><td>The name of the option being parsed (only used for error message). </td></tr>
    <tr><td class="paramname">allow_unknown</td><td>Instead of throwing an exception assign <a class="el" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a5ebf74e9902855cc245b4f4a870c4a8e" title="A column that is not used but is in a file.">Phot::unknown</a> to any unrecognized column name. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af66f57df1f598b5c2123641090958a45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af66f57df1f598b5c2123641090958a45">&#9670;&nbsp;</a></span>parse_csv_list()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class VAL_TYPE &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void Core::parse_csv_list </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>csv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>optname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>min_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>max_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::list&lt; VAL_TYPE &gt; &amp;&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Perses a string of comma separated values into a list. </p>
<p>See <a class="el" href="ParseCSV_8cpp.xhtml#a0e02a5653477396123c9e733302a7f2b" title="Parses a string of comma separated real values into a list.">parse_real_list()</a> for a description of the arguments. </p>

</div>
</div>
<a id="a9b72ac36292e4841ce988699f7e8c487"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b72ac36292e4841ce988699f7e8c487">&#9670;&nbsp;</a></span>parse_int_list()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::list&lt; int &gt; Core::parse_int_list </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>csv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>optname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>min_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>max_count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pareses a string of comma separated integer values into a list. </p>
<p>See <a class="el" href="ParseCSV_8cpp.xhtml#a0e02a5653477396123c9e733302a7f2b" title="Parses a string of comma separated real values into a list.">parse_real_list()</a> for a description of the arguments. </p>

</div>
</div>
<a id="a0e02a5653477396123c9e733302a7f2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e02a5653477396123c9e733302a7f2b">&#9670;&nbsp;</a></span>parse_real_list()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RealList Core::parse_real_list </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>csv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>optname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>min_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>max_count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses a string of comma separated real values into a list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">csv</td><td>The list to parse </td></tr>
    <tr><td class="paramname">optname</td><td>The name of the option (only used for error message) </td></tr>
    <tr><td class="paramname">min_count</td><td>Minimum required number of values (exception thrown if not met). </td></tr>
    <tr><td class="paramname">max_count</td><td>Maximum required number of values (exception thrown if exceeded). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a76e2e1a5a5d4f67163949b14bd4cdebb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76e2e1a5a5d4f67163949b14bd4cdebb">&#9670;&nbsp;</a></span>parse_string_list()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">StringList Core::parse_string_list </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>csv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>optname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>min_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>max_count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses a string of comma separated sub-strings into a list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">csv</td><td>The list to parse. </td></tr>
    <tr><td class="paramname">optname</td><td>The name of the option (only used for error message) </td></tr>
    <tr><td class="paramname">min_count</td><td>Minimum required number of values (exception thrown if not met). </td></tr>
    <tr><td class="paramname">max_count</td><td>Maximum required number of values (exception thrown if exceeded). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_65a8df4c49f610a40e9230d0067dc79d.xhtml">doc_src</a></li><li class="navelem"><a class="el" href="dir_e75aa1031ab20a404a56c263335b2987.xhtml">Core</a></li><li class="navelem"><a class="el" href="ParseCSV_8h.xhtml">ParseCSV.h</a></li>
    <li class="footer">Generated on Wed Jan 15 2025 15:36:41 for Sub-Pixel Photometry by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
