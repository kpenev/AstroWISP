<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Sub-Pixel Photometry: /home/kpenev/projects/git/AstroWISP/doc_src/IO/CInterface.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "ams.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@3/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Sub-Pixel Photometry
   </div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.svg"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('IO_2CInterface_8h.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">CInterface.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Declare C-style functions for accessing the functionality of the IO library.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &quot;../Core/SharedLibraryExportMacros.h&quot;</code><br />
<code>#include &quot;<a class="el" href="parse__hat__mask_8h_source.xhtml">parse_hat_mask.h</a>&quot;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for CInterface.h:</div>
<div class="dyncontent">
<div class="center"><img src="IO_2CInterface_8h__incl.png" border="0" usemap="#a_2home_2kpenev_2projects_2git_2AstroWISP_2doc__src_2IO_2CInterface_8h" alt=""/></div>
<map name="a_2home_2kpenev_2projects_2git_2AstroWISP_2doc__src_2IO_2CInterface_8h" id="a_2home_2kpenev_2projects_2git_2AstroWISP_2doc__src_2IO_2CInterface_8h">
<area shape="rect" title="Declare C&#45;style functions for accessing the functionality of the IO library." alt="" coords="23,5,208,69"/>
<area shape="rect" href="SharedLibraryExportMacros_8h_source.xhtml" title=" " alt="" coords="5,195,225,241"/>
<area shape="rect" href="parse__hat__mask_8h.xhtml" title="Declares a function for parsing HAT&#45;style maskes from image header." alt="" coords="96,117,249,147"/>
</map>
</div>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><img src="IO_2CInterface_8h__dep__incl.png" border="0" usemap="#a_2home_2kpenev_2projects_2git_2AstroWISP_2doc__src_2IO_2CInterface_8hdep" alt=""/></div>
<map name="a_2home_2kpenev_2projects_2git_2AstroWISP_2doc__src_2IO_2CInterface_8hdep" id="a_2home_2kpenev_2projects_2git_2AstroWISP_2doc__src_2IO_2CInterface_8hdep">
<area shape="rect" title="Declare C&#45;style functions for accessing the functionality of the IO library." alt="" coords="319,5,504,69"/>
<area shape="rect" href="FitPSF_2CInterface_8h.xhtml" title="Declare C&#45;style functions for accessing the functionality of FitPSF." alt="" coords="5,117,191,181"/>
<area shape="rect" href="IO_2CInterface_8cpp.xhtml" title="The definitions of the functinos from CInterface.h." alt="" coords="215,117,400,181"/>
<area shape="rect" href="PSF_2CInterface_8h.xhtml" title="Declare C&#45;style functions for accessing the functionality of the PSF library." alt="" coords="424,117,609,181"/>
<area shape="rect" href="SubPixPhot_2CInterface_8h.xhtml" title="Declare C&#45;style functions for accessing the functionality of SubPixPhot." alt="" coords="633,117,835,181"/>
<area shape="rect" href="FitPSF_2CInterface_8cpp.xhtml" title="Define the C&#45;interface functions for the FitPSF library." alt="" coords="5,229,191,293"/>
<area shape="rect" href="PSF_2CInterface_8cpp.xhtml" title="The definitions of the functions declared in CInterface.h." alt="" coords="424,229,609,293"/>
</map>
</div>
</div>
<p><a href="IO_2CInterface_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:aeecd6838b4f40b5e82d63aacabda341b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#aeecd6838b4f40b5e82d63aacabda341b">parse_hat_mask</a> (const char *mask_string, long x_resolution, long y_resolution, char *mask)</td></tr>
<tr class="memdesc:aeecd6838b4f40b5e82d63aacabda341b"><td class="mdescLeft">&#160;</td><td class="mdescRight">C-binding alias for IO::parse_hat_mask.  <a href="IO_2CInterface_8h.xhtml#aeecd6838b4f40b5e82d63aacabda341b">More...</a><br /></td></tr>
<tr class="separator:aeecd6838b4f40b5e82d63aacabda341b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af40b9ac4b61cc64d382cabc2afe12e04"><td class="memItemLeft" align="right" valign="top">H5IODataTree *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#af40b9ac4b61cc64d382cabc2afe12e04">create_result_tree</a> (void *configuration, char *version_info)</td></tr>
<tr class="memdesc:af40b9ac4b61cc64d382cabc2afe12e04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a tree to hold the results of AstroWISP processing.  <a href="IO_2CInterface_8h.xhtml#af40b9ac4b61cc64d382cabc2afe12e04">More...</a><br /></td></tr>
<tr class="separator:af40b9ac4b61cc64d382cabc2afe12e04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add3644ac7c7a90c87cc708dbd00e1dc9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#add3644ac7c7a90c87cc708dbd00e1dc9">destroy_result_tree</a> (H5IODataTree *tree)</td></tr>
<tr class="memdesc:add3644ac7c7a90c87cc708dbd00e1dc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Free the memory held by a result tree previously created by <a class="el" href="IO_2CInterface_8h.xhtml#af40b9ac4b61cc64d382cabc2afe12e04" title="Create a tree to hold the results of AstroWISP processing.">create_result_tree()</a>  <a href="IO_2CInterface_8h.xhtml#add3644ac7c7a90c87cc708dbd00e1dc9">More...</a><br /></td></tr>
<tr class="separator:add3644ac7c7a90c87cc708dbd00e1dc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affa433365e41d0dc704dcf1fffa27b47"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#affa433365e41d0dc704dcf1fffa27b47">query_result_tree</a> (H5IODataTree *tree, const char *quantity, const char *format, void *result)</td></tr>
<tr class="memdesc:affa433365e41d0dc704dcf1fffa27b47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Query the result tree for a value (NULL if value is undefined).  <a href="IO_2CInterface_8h.xhtml#affa433365e41d0dc704dcf1fffa27b47">More...</a><br /></td></tr>
<tr class="separator:affa433365e41d0dc704dcf1fffa27b47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f347f5d20896a73b57d70496ed1a775"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#a6f347f5d20896a73b57d70496ed1a775">update_result_tree</a> (const char *quantity, void *value, const char *format, unsigned length, H5IODataTree *tree)</td></tr>
<tr class="memdesc:a6f347f5d20896a73b57d70496ed1a775"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add or overwrite a quantity in/to the result tree.  <a href="IO_2CInterface_8h.xhtml#a6f347f5d20896a73b57d70496ed1a775">More...</a><br /></td></tr>
<tr class="separator:a6f347f5d20896a73b57d70496ed1a775"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf09b727445cec7020dfb696adc85766"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#acf09b727445cec7020dfb696adc85766">get_psf_map_variables</a> (H5IODataTree *output_data_tree, unsigned image_index, double *column_data)</td></tr>
<tr class="memdesc:acf09b727445cec7020dfb696adc85766"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the PSF map variables for a given image index from the given result tree.  <a href="IO_2CInterface_8h.xhtml#acf09b727445cec7020dfb696adc85766">More...</a><br /></td></tr>
<tr class="separator:acf09b727445cec7020dfb696adc85766"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0fde2907a07911155444d5b89d14ae0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#af0fde2907a07911155444d5b89d14ae0">set_psf_map_variables</a> (char **map_variable_names, double *map_variable_values, unsigned num_map_variables, unsigned num_sources, unsigned image_index, H5IODataTree *tree)</td></tr>
<tr class="separator:af0fde2907a07911155444d5b89d14ae0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6649e7bdb3baca4772321fd98d1905b"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#ac6649e7bdb3baca4772321fd98d1905b">list_tree_quantities</a> (H5IODataTree *tree, char ***quantities)</td></tr>
<tr class="memdesc:ac6649e7bdb3baca4772321fd98d1905b"><td class="mdescLeft">&#160;</td><td class="mdescRight">List the names of all quantities that currently have a value in a data tree.  <a href="IO_2CInterface_8h.xhtml#ac6649e7bdb3baca4772321fd98d1905b">More...</a><br /></td></tr>
<tr class="separator:ac6649e7bdb3baca4772321fd98d1905b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f33f9eb9b2bfa875e8825b81991458b"><td class="memItemLeft" align="right" valign="top"><a id="a7f33f9eb9b2bfa875e8825b81991458b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>export_free</b> (void *)</td></tr>
<tr class="separator:a7f33f9eb9b2bfa875e8825b81991458b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a14c0f248e71bbb781656070d2bba98ad"><td class="memItemLeft" align="right" valign="top">const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#a14c0f248e71bbb781656070d2bba98ad">MASK_OK</a></td></tr>
<tr class="memdesc:a14c0f248e71bbb781656070d2bba98ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">See Core::MASK_OK.  <a href="IO_2CInterface_8h.xhtml#a14c0f248e71bbb781656070d2bba98ad">More...</a><br /></td></tr>
<tr class="separator:a14c0f248e71bbb781656070d2bba98ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad66cd75dfe1e7e142ebe1b25dfc03de5"><td class="memItemLeft" align="right" valign="top">const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#ad66cd75dfe1e7e142ebe1b25dfc03de5">MASK_CLEAR</a></td></tr>
<tr class="memdesc:ad66cd75dfe1e7e142ebe1b25dfc03de5"><td class="mdescLeft">&#160;</td><td class="mdescRight">See Core::MASK_CLEAR.  <a href="IO_2CInterface_8h.xhtml#ad66cd75dfe1e7e142ebe1b25dfc03de5">More...</a><br /></td></tr>
<tr class="separator:ad66cd75dfe1e7e142ebe1b25dfc03de5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a723d3acde94006c66690f1ad61b15300"><td class="memItemLeft" align="right" valign="top">const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#a723d3acde94006c66690f1ad61b15300">MASK_FAULT</a></td></tr>
<tr class="memdesc:a723d3acde94006c66690f1ad61b15300"><td class="mdescLeft">&#160;</td><td class="mdescRight">See Core::MASK_FAULT.  <a href="IO_2CInterface_8h.xhtml#a723d3acde94006c66690f1ad61b15300">More...</a><br /></td></tr>
<tr class="separator:a723d3acde94006c66690f1ad61b15300"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26f3f469a9dfdce0e98eeb78cfa8ad3c"><td class="memItemLeft" align="right" valign="top">const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#a26f3f469a9dfdce0e98eeb78cfa8ad3c">MASK_HOT</a></td></tr>
<tr class="memdesc:a26f3f469a9dfdce0e98eeb78cfa8ad3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">See Core::MASK_HOT.  <a href="IO_2CInterface_8h.xhtml#a26f3f469a9dfdce0e98eeb78cfa8ad3c">More...</a><br /></td></tr>
<tr class="separator:a26f3f469a9dfdce0e98eeb78cfa8ad3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21bfdf0e2dfbaf3b54d55b6d7753ff3b"><td class="memItemLeft" align="right" valign="top">const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#a21bfdf0e2dfbaf3b54d55b6d7753ff3b">MASK_COSMIC</a></td></tr>
<tr class="memdesc:a21bfdf0e2dfbaf3b54d55b6d7753ff3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">See Core::MASK_COSMIC.  <a href="IO_2CInterface_8h.xhtml#a21bfdf0e2dfbaf3b54d55b6d7753ff3b">More...</a><br /></td></tr>
<tr class="separator:a21bfdf0e2dfbaf3b54d55b6d7753ff3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e30822c37ab168dea7232a6811bafea"><td class="memItemLeft" align="right" valign="top">const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#a0e30822c37ab168dea7232a6811bafea">MASK_OUTER</a></td></tr>
<tr class="memdesc:a0e30822c37ab168dea7232a6811bafea"><td class="mdescLeft">&#160;</td><td class="mdescRight">See Core::MASK_OUTER.  <a href="IO_2CInterface_8h.xhtml#a0e30822c37ab168dea7232a6811bafea">More...</a><br /></td></tr>
<tr class="separator:a0e30822c37ab168dea7232a6811bafea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93cb32ad0325e55f03e0aa0c4c7a2697"><td class="memItemLeft" align="right" valign="top">const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#a93cb32ad0325e55f03e0aa0c4c7a2697">MASK_OVERSATURATED</a></td></tr>
<tr class="memdesc:a93cb32ad0325e55f03e0aa0c4c7a2697"><td class="mdescLeft">&#160;</td><td class="mdescRight">See Core::MASK_OVERSATURATED.  <a href="IO_2CInterface_8h.xhtml#a93cb32ad0325e55f03e0aa0c4c7a2697">More...</a><br /></td></tr>
<tr class="separator:a93cb32ad0325e55f03e0aa0c4c7a2697"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a433b9ead55a8db78ae2b94248cbf2b51"><td class="memItemLeft" align="right" valign="top">const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#a433b9ead55a8db78ae2b94248cbf2b51">MASK_LEAKED</a></td></tr>
<tr class="memdesc:a433b9ead55a8db78ae2b94248cbf2b51"><td class="mdescLeft">&#160;</td><td class="mdescRight">See Core::MASK_LEAKED.  <a href="IO_2CInterface_8h.xhtml#a433b9ead55a8db78ae2b94248cbf2b51">More...</a><br /></td></tr>
<tr class="separator:a433b9ead55a8db78ae2b94248cbf2b51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a055e978026b98debf9f84b6ed8f5abcc"><td class="memItemLeft" align="right" valign="top">const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#a055e978026b98debf9f84b6ed8f5abcc">MASK_SATURATED</a></td></tr>
<tr class="memdesc:a055e978026b98debf9f84b6ed8f5abcc"><td class="mdescLeft">&#160;</td><td class="mdescRight">See Core::MASK_SATURATED.  <a href="IO_2CInterface_8h.xhtml#a055e978026b98debf9f84b6ed8f5abcc">More...</a><br /></td></tr>
<tr class="separator:a055e978026b98debf9f84b6ed8f5abcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7b364671556215dcc64113fc028b016"><td class="memItemLeft" align="right" valign="top">const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#aa7b364671556215dcc64113fc028b016">MASK_INTERPOLATED</a></td></tr>
<tr class="memdesc:aa7b364671556215dcc64113fc028b016"><td class="mdescLeft">&#160;</td><td class="mdescRight">See Core::MASK_INTERPOLATED.  <a href="IO_2CInterface_8h.xhtml#aa7b364671556215dcc64113fc028b016">More...</a><br /></td></tr>
<tr class="separator:aa7b364671556215dcc64113fc028b016"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a246b9d10513e441bd7554292da690ef6"><td class="memItemLeft" align="right" valign="top">const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#a246b9d10513e441bd7554292da690ef6">MASK_BAD</a></td></tr>
<tr class="memdesc:a246b9d10513e441bd7554292da690ef6"><td class="mdescLeft">&#160;</td><td class="mdescRight">See Core::MASK_BAD.  <a href="IO_2CInterface_8h.xhtml#a246b9d10513e441bd7554292da690ef6">More...</a><br /></td></tr>
<tr class="separator:a246b9d10513e441bd7554292da690ef6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a899ec8ae1bd8ba7e54893d298af2b393"><td class="memItemLeft" align="right" valign="top">const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#a899ec8ae1bd8ba7e54893d298af2b393">MASK_ALL</a></td></tr>
<tr class="memdesc:a899ec8ae1bd8ba7e54893d298af2b393"><td class="mdescLeft">&#160;</td><td class="mdescRight">See Core::MASK_ALL.  <a href="IO_2CInterface_8h.xhtml#a899ec8ae1bd8ba7e54893d298af2b393">More...</a><br /></td></tr>
<tr class="separator:a899ec8ae1bd8ba7e54893d298af2b393"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a784ae5ef522f037793b8562b2edaeb7a"><td class="memItemLeft" align="right" valign="top">const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="IO_2CInterface_8h.xhtml#a784ae5ef522f037793b8562b2edaeb7a">MASK_NAN</a></td></tr>
<tr class="memdesc:a784ae5ef522f037793b8562b2edaeb7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">See Core::MASK_NAN.  <a href="IO_2CInterface_8h.xhtml#a784ae5ef522f037793b8562b2edaeb7a">More...</a><br /></td></tr>
<tr class="separator:a784ae5ef522f037793b8562b2edaeb7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Declare C-style functions for accessing the functionality of the IO library. </p>
</div><h2 class="groupheader">Function Documentation</h2>
<a id="af40b9ac4b61cc64d382cabc2afe12e04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af40b9ac4b61cc64d382cabc2afe12e04">&#9670;&nbsp;</a></span>create_result_tree()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">H5IODataTree* create_result_tree </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>configuration</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>version_info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a tree to hold the results of AstroWISP processing. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">configuration</td><td>The configuration of the tool being used. Should point to an instance of some sub-class of <a class="el" href="classIO_1_1CommandLineConfig.xhtml" title="A base class for configuration of tools using the command line.">IO::CommandLineConfig</a> </td></tr>
    <tr><td class="paramname">version_info</td><td>Information about the version of the tool(s) used. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="add3644ac7c7a90c87cc708dbd00e1dc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add3644ac7c7a90c87cc708dbd00e1dc9">&#9670;&nbsp;</a></span>destroy_result_tree()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void destroy_result_tree </td>
          <td>(</td>
          <td class="paramtype">H5IODataTree *&#160;</td>
          <td class="paramname"><em>tree</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Free the memory held by a result tree previously created by <a class="el" href="IO_2CInterface_8h.xhtml#af40b9ac4b61cc64d382cabc2afe12e04" title="Create a tree to hold the results of AstroWISP processing.">create_result_tree()</a> </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tree</td><td>The tree to destroy. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="acf09b727445cec7020dfb696adc85766"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf09b727445cec7020dfb696adc85766">&#9670;&nbsp;</a></span>get_psf_map_variables()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool get_psf_map_variables </td>
          <td>(</td>
          <td class="paramtype">H5IODataTree *&#160;</td>
          <td class="paramname"><em>output_data_tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>image_index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>column_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the PSF map variables for a given image index from the given result tree. </p>
<p>If the correspnoding entry in the tree is empty or non-existent, return false and do not touch the column_data argument. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">output_data_tree</td><td>The tree to extract the varibales from. </td></tr>
    <tr><td class="paramname">image_index</td><td>The image index for which to extract the variables. </td></tr>
    <tr><td class="paramname">column_data</td><td>The location to fill with the values of the variables. The values of each varibale are consecutive in memory. All required storage must already be allocated. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac6649e7bdb3baca4772321fd98d1905b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6649e7bdb3baca4772321fd98d1905b">&#9670;&nbsp;</a></span>list_tree_quantities()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned list_tree_quantities </td>
          <td>(</td>
          <td class="paramtype">H5IODataTree *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char ***&#160;</td>
          <td class="paramname"><em>quantities</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>List the names of all quantities that currently have a value in a data tree. </p>
<p>The return value is the number of defined quantities found. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tree</td><td>The tree to extract the quantity from. </td></tr>
    <tr><td class="paramname">quantities</td><td>A newly allocated array containing all the quantity names. The caller is responsible for free-ing it when no longer needed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aeecd6838b4f40b5e82d63aacabda341b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeecd6838b4f40b5e82d63aacabda341b">&#9670;&nbsp;</a></span>parse_hat_mask()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void parse_hat_mask </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>mask_string</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>x_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>y_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>mask</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>C-binding alias for IO::parse_hat_mask. </p>
<p>See IO::parse_hat_mask() for more details. </p>

</div>
</div>
<a id="affa433365e41d0dc704dcf1fffa27b47"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affa433365e41d0dc704dcf1fffa27b47">&#9670;&nbsp;</a></span>query_result_tree()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool query_result_tree </td>
          <td>(</td>
          <td class="paramtype">H5IODataTree *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>quantity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Query the result tree for a value (NULL if value is undefined). </p>
<p>If the value requested is found and not empty, the return value is true, otherwise, false and result is not touched. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tree</td><td>The tree to extract the quantity from. </td></tr>
    <tr><td class="paramname">quantity</td><td>What quantity to get from the tree </td></tr>
    <tr><td class="paramname">format</td><td>Data type of quantity to expect. Examples: "int" for a single integer value "[int]" for an array of integers "double:double" for a pair of doubles "str" for a string entry </td></tr>
    <tr><td class="paramname">result</td><td>Destination to fill with the value of the quantity. For all formats except "str", result must be pointer to the correct format and have sufficient space pre-allocated. For strings, result should be char**, and new memory is allocated for the string, so the caller is responsible for free-ing that. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af0fde2907a07911155444d5b89d14ae0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0fde2907a07911155444d5b89d14ae0">&#9670;&nbsp;</a></span>set_psf_map_variables()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_psf_map_variables </td>
          <td>(</td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>map_variable_names</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>map_variable_values</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>num_map_variables</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>num_sources</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>image_index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">H5IODataTree *&#160;</td>
          <td class="paramname"><em>tree</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">map_variable_names</td><td>The names of the variables required by the map. </td></tr>
    <tr><td class="paramname">map_variable_values</td><td>The values of the variables required by the map for each source. </td></tr>
    <tr><td class="paramname">num_map_variables</td><td>The number of map variables </td></tr>
    <tr><td class="paramname">num_sources</td><td>The number of sources. </td></tr>
    <tr><td class="paramname">image_index</td><td>The index of the image to set the PSF map for. </td></tr>
    <tr><td class="paramname">tree</td><td>The tree to update. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a6f347f5d20896a73b57d70496ed1a775"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f347f5d20896a73b57d70496ed1a775">&#9670;&nbsp;</a></span>update_result_tree()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void update_result_tree </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>quantity</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">H5IODataTree *&#160;</td>
          <td class="paramname"><em>tree</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add or overwrite a quantity in/to the result tree. </p>
<p>If a new quantity was created, the return value is true, if a quantity was overwritten it is false. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">quantity</td><td>Which quantity to add/overwrite. </td></tr>
    <tr><td class="paramname">value</td><td>The value(s) to set for the quantity. </td></tr>
    <tr><td class="paramname">format</td><td>Data type of quantity. See same name argument of <a class="el" href="IO_2CInterface_8h.xhtml#affa433365e41d0dc704dcf1fffa27b47" title="Query the result tree for a value (NULL if value is undefined).">query_result_tree()</a> for details. </td></tr>
    <tr><td class="paramname">length</td><td>The number of entries in the quantity </td></tr>
    <tr><td class="paramname">tree</td><td>The tree to update. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a899ec8ae1bd8ba7e54893d298af2b393"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a899ec8ae1bd8ba7e54893d298af2b393">&#9670;&nbsp;</a></span>MASK_ALL</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char MASK_ALL</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>See Core::MASK_ALL. </p>

</div>
</div>
<a id="a246b9d10513e441bd7554292da690ef6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a246b9d10513e441bd7554292da690ef6">&#9670;&nbsp;</a></span>MASK_BAD</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char MASK_BAD</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>See Core::MASK_BAD. </p>

</div>
</div>
<a id="ad66cd75dfe1e7e142ebe1b25dfc03de5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad66cd75dfe1e7e142ebe1b25dfc03de5">&#9670;&nbsp;</a></span>MASK_CLEAR</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char MASK_CLEAR</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>See Core::MASK_CLEAR. </p>

</div>
</div>
<a id="a21bfdf0e2dfbaf3b54d55b6d7753ff3b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21bfdf0e2dfbaf3b54d55b6d7753ff3b">&#9670;&nbsp;</a></span>MASK_COSMIC</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char MASK_COSMIC</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>See Core::MASK_COSMIC. </p>

</div>
</div>
<a id="a723d3acde94006c66690f1ad61b15300"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a723d3acde94006c66690f1ad61b15300">&#9670;&nbsp;</a></span>MASK_FAULT</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char MASK_FAULT</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>See Core::MASK_FAULT. </p>

</div>
</div>
<a id="a26f3f469a9dfdce0e98eeb78cfa8ad3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26f3f469a9dfdce0e98eeb78cfa8ad3c">&#9670;&nbsp;</a></span>MASK_HOT</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char MASK_HOT</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>See Core::MASK_HOT. </p>

</div>
</div>
<a id="aa7b364671556215dcc64113fc028b016"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7b364671556215dcc64113fc028b016">&#9670;&nbsp;</a></span>MASK_INTERPOLATED</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char MASK_INTERPOLATED</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>See Core::MASK_INTERPOLATED. </p>

</div>
</div>
<a id="a433b9ead55a8db78ae2b94248cbf2b51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a433b9ead55a8db78ae2b94248cbf2b51">&#9670;&nbsp;</a></span>MASK_LEAKED</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char MASK_LEAKED</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>See Core::MASK_LEAKED. </p>

</div>
</div>
<a id="a784ae5ef522f037793b8562b2edaeb7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a784ae5ef522f037793b8562b2edaeb7a">&#9670;&nbsp;</a></span>MASK_NAN</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char MASK_NAN</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>See Core::MASK_NAN. </p>

</div>
</div>
<a id="a14c0f248e71bbb781656070d2bba98ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14c0f248e71bbb781656070d2bba98ad">&#9670;&nbsp;</a></span>MASK_OK</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char MASK_OK</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>See Core::MASK_OK. </p>

</div>
</div>
<a id="a0e30822c37ab168dea7232a6811bafea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e30822c37ab168dea7232a6811bafea">&#9670;&nbsp;</a></span>MASK_OUTER</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char MASK_OUTER</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>See Core::MASK_OUTER. </p>

</div>
</div>
<a id="a93cb32ad0325e55f03e0aa0c4c7a2697"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93cb32ad0325e55f03e0aa0c4c7a2697">&#9670;&nbsp;</a></span>MASK_OVERSATURATED</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char MASK_OVERSATURATED</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>See Core::MASK_OVERSATURATED. </p>

</div>
</div>
<a id="a055e978026b98debf9f84b6ed8f5abcc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a055e978026b98debf9f84b6ed8f5abcc">&#9670;&nbsp;</a></span>MASK_SATURATED</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char MASK_SATURATED</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">extern</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>See Core::MASK_SATURATED. </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_65a8df4c49f610a40e9230d0067dc79d.xhtml">doc_src</a></li><li class="navelem"><a class="el" href="dir_8302b1090f3908a9d2b3114f60c0dba1.xhtml">IO</a></li><li class="navelem"><a class="el" href="IO_2CInterface_8h.xhtml">CInterface.h</a></li>
    <li class="footer">Generated on Wed Jan 15 2025 09:47:59 for Sub-Pixel Photometry by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
