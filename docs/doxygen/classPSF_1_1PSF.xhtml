<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.20"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Sub-Pixel Photometry: PSF::PSF Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Sub-Pixel Photometry
   </div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.svg"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.20 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classPSF_1_1PSF.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="classPSF_1_1PSF-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">PSF::PSF Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>An abstract parent class for all <a class="el" href="classPSF_1_1PSF.xhtml" title="An abstract parent class for all PSF models.">PSF</a> models.  
 <a href="classPSF_1_1PSF.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="PSF_8h_source.xhtml">PSF.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for PSF::PSF:</div>
<div class="dyncontent">
<div class="center"><img src="classPSF_1_1PSF__inherit__graph.png" border="0" usemap="#aPSF_1_1PSF_inherit__map" alt="Inheritance graph"/></div>
<map name="PSF_1_1PSF_inherit__map" id="aPSF_1_1PSF_inherit__map">
<area shape="rect" title="An abstract parent class for all PSF models." alt="" coords="229,5,481,243"/>
<area shape="rect" href="classPSF_1_1EllipticalGaussian.xhtml" title="An ellptical Gaussian PSF with peak flux above the background normalized to 1." alt="" coords="5,291,241,936"/>
<area shape="rect" href="classPSF_1_1LocalPolynomial.xhtml" title=" " alt="" coords="264,529,446,698"/>
<area shape="rect" href="classPSF_1_1Piecewise.xhtml" title="A PSF model consisting of a grid of rectangles each with a separate intensity function." alt="" coords="470,308,675,919"/>
<area shape="rect" href="classPSF_1_1PiecewiseBicubic.xhtml" title="A Piecewise defined as a bicubic interpolation over a grid, where at each grid point the value,..." alt="" coords="478,984,666,1136"/>
</map>
</div>
<div class="dynheader">
Collaboration diagram for PSF::PSF:</div>
<div class="dyncontent">
<div class="center"><img src="classPSF_1_1PSF__coll__graph.png" border="0" usemap="#aPSF_1_1PSF_coll__map" alt="Collaboration graph"/></div>
<map name="PSF_1_1PSF_coll__map" id="aPSF_1_1PSF_coll__map">
<area shape="rect" title="An abstract parent class for all PSF models." alt="" coords="5,5,258,243"/>
</map>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1956ee7ccdac48fbd14ad75e9db17a94"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PSF.xhtml#a1956ee7ccdac48fbd14ad75e9db17a94">set_precision</a> (double, double) const</td></tr>
<tr class="separator:a1956ee7ccdac48fbd14ad75e9db17a94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bdcbd3f03020f4f8fdd112def8f0927"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PSF.xhtml#a0bdcbd3f03020f4f8fdd112def8f0927">operator()</a> (double x, double y) const =0</td></tr>
<tr class="memdesc:a0bdcbd3f03020f4f8fdd112def8f0927"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluates the <a class="el" href="classPSF_1_1PSF.xhtml" title="An abstract parent class for all PSF models.">PSF</a> at the given position.  <a href="classPSF_1_1PSF.xhtml#a0bdcbd3f03020f4f8fdd112def8f0927">More...</a><br /></td></tr>
<tr class="separator:a0bdcbd3f03020f4f8fdd112def8f0927"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9c48125b671ef310776d939fad023e7"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PSF.xhtml#ab9c48125b671ef310776d939fad023e7">integrate</a> (double center_x, double center_y, double dx, double dy, double circle_radius=0) const</td></tr>
<tr class="memdesc:ab9c48125b671ef310776d939fad023e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the integral of the <a class="el" href="classPSF_1_1PSF.xhtml" title="An abstract parent class for all PSF models.">PSF</a> over (a piece of, if circle_radius!=0) a rectangle interior to a circle.  <a href="classPSF_1_1PSF.xhtml#ab9c48125b671ef310776d939fad023e7">More...</a><br /></td></tr>
<tr class="separator:ab9c48125b671ef310776d939fad023e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0db2a110d671bff0522abaa41753326d"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PSF.xhtml#a0db2a110d671bff0522abaa41753326d">~PSF</a> ()</td></tr>
<tr class="memdesc:a0db2a110d671bff0522abaa41753326d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="classPSF_1_1PSF.xhtml#a0db2a110d671bff0522abaa41753326d">More...</a><br /></td></tr>
<tr class="separator:a0db2a110d671bff0522abaa41753326d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:aa4c50c38cc4d6fda0373a83ff095980b"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PSF.xhtml#aa4c50c38cc4d6fda0373a83ff095980b">integrate_rectangle</a> (double center_x, double center_y, double dx, double dy) const =0</td></tr>
<tr class="memdesc:aa4c50c38cc4d6fda0373a83ff095980b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the integral of the <a class="el" href="classPSF_1_1PSF.xhtml" title="An abstract parent class for all PSF models.">PSF</a> over a rectangle.  <a href="classPSF_1_1PSF.xhtml#aa4c50c38cc4d6fda0373a83ff095980b">More...</a><br /></td></tr>
<tr class="separator:aa4c50c38cc4d6fda0373a83ff095980b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2555b23419b2f19f5c39f4ba45bfacac"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PSF.xhtml#a2555b23419b2f19f5c39f4ba45bfacac">integrate_wedge</a> (double x, double y, double radius, bool left=false, bool bottom=false) const =0</td></tr>
<tr class="memdesc:a2555b23419b2f19f5c39f4ba45bfacac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Integrates the <a class="el" href="classPSF_1_1PSF.xhtml" title="An abstract parent class for all PSF models.">PSF</a> over the smallest of the four wedges with the.  <a href="classPSF_1_1PSF.xhtml#a2555b23419b2f19f5c39f4ba45bfacac">More...</a><br /></td></tr>
<tr class="separator:a2555b23419b2f19f5c39f4ba45bfacac"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:ac5740c3ee92f6644382983627e5440e2"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PSF.xhtml#ac5740c3ee92f6644382983627e5440e2">line_circle_intersections</a> (double x1, double x2, double y, double r, bool left_on_circle=false, bool right_on_circle=false) const</td></tr>
<tr class="separator:ac5740c3ee92f6644382983627e5440e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56f3a1fcfc6be6efb2bcab7e1c6acbaa"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PSF.xhtml#a56f3a1fcfc6be6efb2bcab7e1c6acbaa">integrate_overlap_bottom_out</a> (double x1, double y1, double x2, double y2, double rc, std::valarray&lt; bool &gt; on_circle, std::valarray&lt; double &gt; &amp;intersections) const</td></tr>
<tr class="separator:a56f3a1fcfc6be6efb2bcab7e1c6acbaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f31460b4952e5678077e16a662d05ee"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PSF.xhtml#a0f31460b4952e5678077e16a662d05ee">integrate_overlap_bottom_in</a> (double x1, double y1, double x2, double y2, double rc, std::valarray&lt; bool &gt; on_circle, std::valarray&lt; double &gt; &amp;intersections) const</td></tr>
<tr class="separator:a0f31460b4952e5678077e16a662d05ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8bc1ecbfe227aff98a74fee807cc254"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PSF.xhtml#ab8bc1ecbfe227aff98a74fee807cc254">integrate_overlap</a> (double x1, double y1, double x2, double y2, double rc, const std::valarray&lt; bool &gt; &amp;on_circle=std::valarray&lt; bool &gt;(false, 4)) const</td></tr>
<tr class="memdesc:ab8bc1ecbfe227aff98a74fee807cc254"><td class="mdescLeft">&#160;</td><td class="mdescRight">Integrates the <a class="el" href="classPSF_1_1PSF.xhtml" title="An abstract parent class for all PSF models.">PSF</a> over the common overlapping area of a rectangle and a circle.  <a href="classPSF_1_1PSF.xhtml#ab8bc1ecbfe227aff98a74fee807cc254">More...</a><br /></td></tr>
<tr class="separator:ab8bc1ecbfe227aff98a74fee807cc254"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>An abstract parent class for all <a class="el" href="classPSF_1_1PSF.xhtml" title="An abstract parent class for all PSF models.">PSF</a> models. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a0db2a110d671bff0522abaa41753326d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0db2a110d671bff0522abaa41753326d">&#9670;&nbsp;</a></span>~PSF()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual PSF::PSF::~PSF </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Virtual destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ab9c48125b671ef310776d939fad023e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9c48125b671ef310776d939fad023e7">&#9670;&nbsp;</a></span>integrate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double PSF::PSF::integrate </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>center_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>center_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>dx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>dy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>circle_radius</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates the integral of the <a class="el" href="classPSF_1_1PSF.xhtml" title="An abstract parent class for all PSF models.">PSF</a> over (a piece of, if circle_radius!=0) a rectangle interior to a circle. </p>
<p>The rectangle is defined by: center_x - dx/2 &lt; x &lt; center_x + dx/2, center_y - dy/2 &lt; y &lt; center_y + dy/2 and the circle is centered at 0 and has the given radius </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">center_x</td><td>The x coordinate of the center of the rectangle to integrate over. </td></tr>
    <tr><td class="paramname">center_y</td><td>The y coordinate of the center of the rectangle to integrate over. </td></tr>
    <tr><td class="paramname">dx</td><td>The width of the rectangle. </td></tr>
    <tr><td class="paramname">dy</td><td>The height of the rectangle. </td></tr>
    <tr><td class="paramname">circle_radius</td><td>The radius of the circle. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented in <a class="el" href="classPSF_1_1EllipticalGaussian.xhtml#a0e57ad0f998c0eacd7eeb8e98cde2f10">PSF::EllipticalGaussian</a>.</p>

</div>
</div>
<a id="ab8bc1ecbfe227aff98a74fee807cc254"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8bc1ecbfe227aff98a74fee807cc254">&#9670;&nbsp;</a></span>integrate_overlap()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double PSF::PSF::integrate_overlap </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>rc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::valarray&lt; bool &gt; &amp;&#160;</td>
          <td class="paramname"><em>on_circle</em> = <code>std::valarray&lt;bool&gt;(false,&#160;4)</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Integrates the <a class="el" href="classPSF_1_1PSF.xhtml" title="An abstract parent class for all PSF models.">PSF</a> over the common overlapping area of a rectangle and a circle. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x1</td><td>The left boundary of the rectangle. </td></tr>
    <tr><td class="paramname">y1</td><td>The bottom boundary of the rectangle. </td></tr>
    <tr><td class="paramname">x2</td><td>The right boundary of the rectangle. Must be &gt; x1. </td></tr>
    <tr><td class="paramname">y2</td><td>The top boundary of the rectangle. </td></tr>
    <tr><td class="paramname">rc</td><td>The radius of the circle. The circle is centered at (0, 0). </td></tr>
    <tr><td class="paramname">on_circle</td><td>Identifies if rectangle corners, in the order (x1, y1), (x2, y1, (x2, y2), (x1, y2), lie exactly on the circle. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a0f31460b4952e5678077e16a662d05ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f31460b4952e5678077e16a662d05ee">&#9670;&nbsp;</a></span>integrate_overlap_bottom_in()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double PSF::PSF::integrate_overlap_bottom_in </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>rc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::valarray&lt; bool &gt;&#160;</td>
          <td class="paramname"><em>on_circle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::valarray&lt; double &gt; &amp;&#160;</td>
          <td class="paramname"><em>intersections</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Integrates the <a class="el" href="classPSF_1_1PSF.xhtml" title="An abstract parent class for all PSF models.">PSF</a> over the intersection of a rectangle and a cirle under the assumption that the bottom side of the rectangle lies inside the circle. See integrate_overlap for description of command line arguments. Also assumes the rectangle is entirely contained within a quadrant. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x1</td><td>See same name argu ment to <a class="el" href="classPSF_1_1PSF.xhtml#ab8bc1ecbfe227aff98a74fee807cc254" title="Integrates the PSF over the common overlapping area of a rectangle and a circle.">integrate_overlap()</a> </td></tr>
    <tr><td class="paramname">y1</td><td>See same name argu ment to <a class="el" href="classPSF_1_1PSF.xhtml#ab8bc1ecbfe227aff98a74fee807cc254" title="Integrates the PSF over the common overlapping area of a rectangle and a circle.">integrate_overlap()</a> </td></tr>
    <tr><td class="paramname">x2</td><td>See same name argu ment to <a class="el" href="classPSF_1_1PSF.xhtml#ab8bc1ecbfe227aff98a74fee807cc254" title="Integrates the PSF over the common overlapping area of a rectangle and a circle.">integrate_overlap()</a> </td></tr>
    <tr><td class="paramname">y2</td><td>See same name argu ment to <a class="el" href="classPSF_1_1PSF.xhtml#ab8bc1ecbfe227aff98a74fee807cc254" title="Integrates the PSF over the common overlapping area of a rectangle and a circle.">integrate_overlap()</a> </td></tr>
    <tr><td class="paramname">rc</td><td>See same name argu ment to <a class="el" href="classPSF_1_1PSF.xhtml#ab8bc1ecbfe227aff98a74fee807cc254" title="Integrates the PSF over the common overlapping area of a rectangle and a circle.">integrate_overlap()</a> </td></tr>
    <tr><td class="paramname">on_circle</td><td>See same name argu ment to <a class="el" href="classPSF_1_1PSF.xhtml#ab8bc1ecbfe227aff98a74fee807cc254" title="Integrates the PSF over the common overlapping area of a rectangle and a circle.">integrate_overlap()</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a56f3a1fcfc6be6efb2bcab7e1c6acbaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56f3a1fcfc6be6efb2bcab7e1c6acbaa">&#9670;&nbsp;</a></span>integrate_overlap_bottom_out()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double PSF::PSF::integrate_overlap_bottom_out </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>rc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::valarray&lt; bool &gt;&#160;</td>
          <td class="paramname"><em>on_circle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::valarray&lt; double &gt; &amp;&#160;</td>
          <td class="paramname"><em>intersections</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Integrates the <a class="el" href="classPSF_1_1PSF.xhtml" title="An abstract parent class for all PSF models.">PSF</a> over the intersection of a rectangle and a cirle under the assumption that the bottom side of the rectangle lies outside the circle. See integrate_overlap for description of command line arguments. Also assumes the rectangle is entirely contained within a quadrant. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x1</td><td>See same name argu ment to <a class="el" href="classPSF_1_1PSF.xhtml#ab8bc1ecbfe227aff98a74fee807cc254" title="Integrates the PSF over the common overlapping area of a rectangle and a circle.">integrate_overlap()</a> </td></tr>
    <tr><td class="paramname">y1</td><td>See same name argu ment to <a class="el" href="classPSF_1_1PSF.xhtml#ab8bc1ecbfe227aff98a74fee807cc254" title="Integrates the PSF over the common overlapping area of a rectangle and a circle.">integrate_overlap()</a> </td></tr>
    <tr><td class="paramname">x2</td><td>See same name argu ment to <a class="el" href="classPSF_1_1PSF.xhtml#ab8bc1ecbfe227aff98a74fee807cc254" title="Integrates the PSF over the common overlapping area of a rectangle and a circle.">integrate_overlap()</a> </td></tr>
    <tr><td class="paramname">y2</td><td>See same name argu ment to <a class="el" href="classPSF_1_1PSF.xhtml#ab8bc1ecbfe227aff98a74fee807cc254" title="Integrates the PSF over the common overlapping area of a rectangle and a circle.">integrate_overlap()</a> </td></tr>
    <tr><td class="paramname">rc</td><td>See same name argu ment to <a class="el" href="classPSF_1_1PSF.xhtml#ab8bc1ecbfe227aff98a74fee807cc254" title="Integrates the PSF over the common overlapping area of a rectangle and a circle.">integrate_overlap()</a> </td></tr>
    <tr><td class="paramname">on_circle</td><td>See same name argu ment to <a class="el" href="classPSF_1_1PSF.xhtml#ab8bc1ecbfe227aff98a74fee807cc254" title="Integrates the PSF over the common overlapping area of a rectangle and a circle.">integrate_overlap()</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aa4c50c38cc4d6fda0373a83ff095980b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4c50c38cc4d6fda0373a83ff095980b">&#9670;&nbsp;</a></span>integrate_rectangle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PSF::integrate_rectangle </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>center_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>center_y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>dx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>dy</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates the integral of the <a class="el" href="classPSF_1_1PSF.xhtml" title="An abstract parent class for all PSF models.">PSF</a> over a rectangle. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">center_x</td><td>The x coordinate of the center of the rectangle. </td></tr>
    <tr><td class="paramname">center_y</td><td>The y coordinate of the center of the rectangle. </td></tr>
    <tr><td class="paramname">dx</td><td>The full x size of the rectangle. </td></tr>
    <tr><td class="paramname">dy</td><td>The full y size of the rectangle. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classPSF_1_1Piecewise.xhtml#ac27d368bd7b965c2580740c65fce8521">PSF::Piecewise</a>, <a class="el" href="classPSF_1_1LocalPolynomial.xhtml#aa6f062fb5ab5bafc47bf142a6fe1b53c">PSF::LocalPolynomial</a>, and <a class="el" href="classPSF_1_1EllipticalGaussian.xhtml#abed784fb0d8eda2fca98bb28befdd1ad">PSF::EllipticalGaussian</a>.</p>

</div>
</div>
<a id="a2555b23419b2f19f5c39f4ba45bfacac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2555b23419b2f19f5c39f4ba45bfacac">&#9670;&nbsp;</a></span>integrate_wedge()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PSF::integrate_wedge </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>left</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bottom</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Integrates the <a class="el" href="classPSF_1_1PSF.xhtml" title="An abstract parent class for all PSF models.">PSF</a> over the smallest of the four wedges with the. </p>
<ul>
<li>the line x=x<ul>
<li>the line y=y</li>
<li>the circle centered at (0, 0) with a radius=radius If x is 0 the the left vs right wedge is chosen according to left Same for y0 and bottom. </li>
</ul>
</li>
</ul>

<p>Implemented in <a class="el" href="classPSF_1_1EllipticalGaussian.xhtml#ac9dafa92e8889b379e6846283ea7c523">PSF::EllipticalGaussian</a>, <a class="el" href="classPSF_1_1Piecewise.xhtml#a319879152282127f9b45eedf00ea9024">PSF::Piecewise</a>, and <a class="el" href="classPSF_1_1LocalPolynomial.xhtml#a5c4b4087df37621ff8f32c6dd45dd782">PSF::LocalPolynomial</a>.</p>

</div>
</div>
<a id="ac5740c3ee92f6644382983627e5440e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5740c3ee92f6644382983627e5440e2">&#9670;&nbsp;</a></span>line_circle_intersections()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double PSF::PSF::line_circle_intersections </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>r</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>left_on_circle</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>right_on_circle</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns the points at which the line segment betwenn (x1, y) and (x2, y) intersects the circle centered at (0,0) with a radius r. The arguments (left/right)_on_circle indicate that the point at (x(1/2), y) respectively lie exactly on the circle, in which case they are not included in the list of intersections returned. It is assumed that x1&lt;x2, y&gt;0, and x1 and x2 have the same sign. The return values have the following meaning:</p><ul>
<li>0 : the line is entirely outside the circle (or is just touching it)</li>
<li>NaN : the line is entirely within the circle</li>
<li>positive value : a single point of intersection exists at the returned value</li>
<li>negative value : two intersections exist at +- the returned value </li>
</ul>

</div>
</div>
<a id="a0bdcbd3f03020f4f8fdd112def8f0927"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0bdcbd3f03020f4f8fdd112def8f0927">&#9670;&nbsp;</a></span>operator()()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PSF::operator() </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Evaluates the <a class="el" href="classPSF_1_1PSF.xhtml" title="An abstract parent class for all PSF models.">PSF</a> at the given position. </p>

<p>Implemented in <a class="el" href="classPSF_1_1Piecewise.xhtml#a7c3eeda5563fde4e69caf287ab218ea2">PSF::Piecewise</a>, and <a class="el" href="classPSF_1_1EllipticalGaussian.xhtml#aa252f4a1a65e44ce33db16d9e73b6802">PSF::EllipticalGaussian</a>.</p>

</div>
</div>
<a id="a1956ee7ccdac48fbd14ad75e9db17a94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1956ee7ccdac48fbd14ad75e9db17a94">&#9670;&nbsp;</a></span>set_precision()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void PSF::PSF::set_precision </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Set a precision requirement for integrals. May be ignored by actual <a class="el" href="classPSF_1_1PSF.xhtml" title="An abstract parent class for all PSF models.">PSF</a>. </p>

<p>Reimplemented in <a class="el" href="classPSF_1_1EllipticalGaussian.xhtml#a1b275b97fc545d193081514464f14453">PSF::EllipticalGaussian</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/Users/kpenev/projects/git/AstroWISP/doc_src/PSF/<a class="el" href="PSF_8h_source.xhtml">PSF.h</a></li>
<li>/Users/kpenev/projects/git/AstroWISP/doc_src/PSF/PSF.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>PSF</b></li><li class="navelem"><a class="el" href="classPSF_1_1PSF.xhtml">PSF</a></li>
    <li class="footer">Generated on Tue Nov 26 2024 10:27:38 for Sub-Pixel Photometry by <a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.8.20 </li>
  </ul>
</div>
</body>
</html>
