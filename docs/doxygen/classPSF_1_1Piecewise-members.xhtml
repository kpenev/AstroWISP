<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>My Project: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "ams.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@2/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">My Project
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classPSF_1_1Piecewise.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">PSF::Piecewise Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a52c903196fd6261075785faf223a9ab1">__cells</a></td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a5291b7ceaddc2d8834b9fcf4af242d47">__cloned_cell</a></td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a05cb6957a4238f6e9d1ea3e442d150a8">__grid_x</a></td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a356a0c2bba3fa366da1909eab18b90b4">__grid_y</a></td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#aa86ecc1985be6ee2e9943cfd302c5196">cell_index</a>(Core::vector_size_type x_ind, Core::vector_size_type y_ind) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a6daae525ce3552b5c53c73926f25f609">cell_index</a>(const std::vector&lt; double &gt; &amp;grid, const double &amp;x, Core::vector_size_type hint_lower, Core::vector_size_type hint_upper) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a3ac0dc82ebf1b570728a786a1b152376">cell_index</a>(const std::vector&lt; double &gt; &amp;grid, const double &amp;x) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a59c413cdd553a8fd5c019f0482d601be">cell_index</a>(const std::vector&lt; double &gt; &amp;grid, const double &amp;x, Core::vector_size_type hint_lower) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a8cabc54488e9ae25a49d7a0ff052fd25">cell_span</a>(const std::vector&lt; double &gt; &amp;grid, double min_x, double max_x, Core::vector_size_type &amp;low, Core::vector_size_type &amp;high) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a66a77a431abc17d51022ff8274f7a3cd">check_inside_grid</a>(double x, double y) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a261c010858d5ab52c07d25f1608c638e">grid_column_width</a>(Core::vector_size_type column) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a75dcd2c57538578ef01e4bb1de7dad2b">grid_row_height</a>(Core::vector_size_type row) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#aab5adf6cacec194d4a9858a04ffc6992">impose_boundaries</a>(Core::vector_size_type &amp;index, Core::vector_size_type boundary1, Core::vector_size_type buondary2) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1PSF.xhtml#ab9c48125b671ef310776d939fad023e7">integrate</a>(double center_x, double center_y, double dx, double dy, double circle_radius=0) const</td><td class="entry"><a class="el" href="classPSF_1_1PSF.xhtml">PSF::PSF</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#ab4ff9fa6de52c7287e0796bf5506b0ef">integrate_bottom_row</a>(Core::vector_size_type corner_col, Core::vector_size_type corner_row, Core::vector_size_type crossing_col, Core::vector_size_type tip_col, double cell_crossing_x, double cell_tip_x, double cell_corner_x, double cell_corner_y, double radius, bool up) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#acac663428631499993a740953075feed">integrate_inside_arc</a>(Core::vector_size_type start_col, Core::vector_size_type end_col, Core::vector_size_type row, double radius) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#aad6bfcbd54346936739018138617972f">integrate_middle_row</a>(Core::vector_size_type row, Core::vector_size_type corner_col, Core::vector_size_type inner_crossing_col, Core::vector_size_type last_col, double cell_corner_x, double inner_cell_crossing_x, double radius, int right) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#aa553679859a41b06f5bc75a6cbfcb42a">integrate_multi_row_column_rectangle</a>(Core::vector_size_type first_x_index, Core::vector_size_type last_x_index, Core::vector_size_type first_y_index, Core::vector_size_type last_y_index, double xmin_cell, double xmax_cell, double ymin_cell, double ymax_cell, const std::vector&lt; std::valarray&lt; double &gt; &gt; &amp;parameter_sets=std::vector&lt; std::valarray&lt; double &gt; &gt;()) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a548ab29271a08ad84142ac96e320860f">integrate_multi_row_column_wedge</a>(Core::vector_size_type tip_col, Core::vector_size_type corner_col, Core::vector_size_type tip_row, Core::vector_size_type corner_row, double cell_corner_x, double cell_corner_y, double cell_tip_x, double cell_tip_y, double radius) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1PSF.xhtml#ab8bc1ecbfe227aff98a74fee807cc254">integrate_overlap</a>(double x1, double y1, double x2, double y2, double rc, const std::valarray&lt; bool &gt; &amp;on_circle=std::valarray&lt; bool &gt;(false, 4)) const</td><td class="entry"><a class="el" href="classPSF_1_1PSF.xhtml">PSF::PSF</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1PSF.xhtml#a0f31460b4952e5678077e16a662d05ee">integrate_overlap_bottom_in</a>(double x1, double y1, double x2, double y2, double rc, std::valarray&lt; bool &gt; on_circle, std::valarray&lt; double &gt; &amp;intersections) const</td><td class="entry"><a class="el" href="classPSF_1_1PSF.xhtml">PSF::PSF</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1PSF.xhtml#a56f3a1fcfc6be6efb2bcab7e1c6acbaa">integrate_overlap_bottom_out</a>(double x1, double y1, double x2, double y2, double rc, std::valarray&lt; bool &gt; on_circle, std::valarray&lt; double &gt; &amp;intersections) const</td><td class="entry"><a class="el" href="classPSF_1_1PSF.xhtml">PSF::PSF</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#ac27d368bd7b965c2580740c65fce8521">integrate_rectangle</a>(double center_x, double center_y, double dx, double dy) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a7de82768cf51ca1d373cbe3090a05ce6">integrate_rectangle_parameters</a>(double center_x, double center_y, double dx, double dy, const std::vector&lt; std::valarray&lt; double &gt; &gt; &amp;parameter_sets=std::vector&lt; std::valarray&lt; double &gt; &gt;()) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a3dba42755f8fefefb70a99d9a5cf9f71">integrate_single_column_rectangle</a>(Core::vector_size_type x_index, Core::vector_size_type first_y_index, Core::vector_size_type last_y_index, double xmin_cell, double xmax_cell, double ymin_cell, double ymax_cell, const std::vector&lt; std::valarray&lt; double &gt; &gt; &amp;parameter_sets=std::vector&lt; std::valarray&lt; double &gt; &gt;()) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a01a257e1e1934bc7d1eaf0d0caba5564">integrate_single_column_wedge</a>(Core::vector_size_type x_index, Core::vector_size_type tip_y_index, Core::vector_size_type corner_y_index, double cell_corner_x, double cell_corner_y, double cell_tip_y, double radius) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a902321800cde9a611daf122eafc37656">integrate_single_row_rectangle</a>(Core::vector_size_type first_x_index, Core::vector_size_type last_x_index, Core::vector_size_type y_index, double xmin_cell, double xmax_cell, double ymin_cell, double ymax_cell, const std::vector&lt; std::valarray&lt; double &gt; &gt; &amp;parameter_sets=std::vector&lt; std::valarray&lt; double &gt; &gt;()) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#af36180df138b4f674e644d71bde47bd7">integrate_single_row_wedge</a>(Core::vector_size_type tip_x_index, Core::vector_size_type corner_x_index, Core::vector_size_type y_index, double cell_corner_x, double cell_corner_y, double cell_tip_x, double radius) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a400d0a7d17fee9861cfc32f875d65f4d">integrate_tip_row</a>(Core::vector_size_type tip_row, Core::vector_size_type corner_col, Core::vector_size_type crossing_col, double cell_corner_x, double cell_tip_y, double radius, bool up, bool right) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a319879152282127f9b45eedf00ea9024">integrate_wedge</a>(double x, double y, double radius, bool left=false, bool bottom=false) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">protected</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1PSF.xhtml#ac5740c3ee92f6644382983627e5440e2">line_circle_intersections</a>(double x1, double x2, double y, double r, bool left_on_circle=false, bool right_on_circle=false) const</td><td class="entry"><a class="el" href="classPSF_1_1PSF.xhtml">PSF::PSF</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a8642e89d2b0e5a64497c8d834dc3e6e7">max_x</a>() const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a6c013d56b5484eef51ea4137bfdd71d5">max_y</a>() const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a54be175389cc03de82c2f97116688294">min_x</a>() const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a44946e9fff052ef85e5bf7f245c22d32">min_y</a>() const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a7c3eeda5563fde4e69caf287ab218ea2">operator()</a>(double x, double y) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a24a516501a04368d62416828f5fd198b">operator()</a>(double x, double y, const std::vector&lt; std::valarray&lt; double &gt; &gt; &amp;parameter_sets) const</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#aa3be68d72c6a1882248201c4cd1fb0e3">Piecewise</a>(RandomAccessIterator first_x, RandomAccessIterator last_x, RandomAccessIterator first_y, RandomAccessIterator last_y)</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#a08362ad7e5bb978c4a68dcf30ed6b17c">set_all_cells</a>(ConstCellIterator first_cell, bool clone=false)</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml#acb6bb0761038b369ba32bb4f2f46431f">set_cell</a>(const PiecewiseCell *cell, const Core::vector_size_type &amp;x_index, const Core::vector_size_type &amp;y_index, bool clone=false)</td><td class="entry"><a class="el" href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classPSF_1_1PSF.xhtml#a1956ee7ccdac48fbd14ad75e9db17a94">set_precision</a>(double, double) const</td><td class="entry"><a class="el" href="classPSF_1_1PSF.xhtml">PSF::PSF</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr><td class="entry"><a class="el" href="classPSF_1_1PSF.xhtml#a0db2a110d671bff0522abaa41753326d">~PSF</a>()</td><td class="entry"><a class="el" href="classPSF_1_1PSF.xhtml">PSF::PSF</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Wed Jan 15 2025 16:00:29 for My Project by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
