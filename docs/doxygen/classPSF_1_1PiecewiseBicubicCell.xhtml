<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Sub-Pixel Photometry: PSF::PiecewiseBicubicCell Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js", "ams.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="https://cdn.jsdelivr.net/npm/mathjax@3/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Sub-Pixel Photometry
   </div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.svg"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search','.xhtml');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classPSF_1_1PiecewiseBicubicCell.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classPSF_1_1PiecewiseBicubicCell-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">PSF::PiecewiseBicubicCell Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A class for <a class="el" href="classPSF_1_1Piecewise.xhtml" title="A PSF model consisting of a grid of rectangles each with a separate intensity function.">Piecewise</a> cells over which the intensity is given by a bi-cubic polynomial.  
 <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="PiecewiseBicubicCell_8h_source.xhtml">PiecewiseBicubicCell.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for PSF::PiecewiseBicubicCell:</div>
<div class="dyncontent">
<div class="center"><img src="classPSF_1_1PiecewiseBicubicCell__inherit__graph.png" border="0" usemap="#aPSF_1_1PiecewiseBicubicCell_inherit__map" alt="Inheritance graph"/></div>
<map name="aPSF_1_1PiecewiseBicubicCell_inherit__map" id="aPSF_1_1PiecewiseBicubicCell_inherit__map">
<area shape="rect" title="A class for Piecewise cells over which the intensity is given by a bi&#45;cubic polynomial." alt="" coords="5,329,224,588"/>
<area shape="rect" href="classPSF_1_1PiecewiseCell.xhtml" title="An abstract base class for all cell of a Piecesiwe." alt="" coords="8,5,221,281"/>
</map>
</div>
<div class="dynheader">
Collaboration diagram for PSF::PiecewiseBicubicCell:</div>
<div class="dyncontent">
<div class="center"><img src="classPSF_1_1PiecewiseBicubicCell__coll__graph.png" border="0" usemap="#aPSF_1_1PiecewiseBicubicCell_coll__map" alt="Collaboration graph"/></div>
<map name="aPSF_1_1PiecewiseBicubicCell_coll__map" id="aPSF_1_1PiecewiseBicubicCell_coll__map">
<area shape="rect" title="A class for Piecewise cells over which the intensity is given by a bi&#45;cubic polynomial." alt="" coords="5,329,224,588"/>
<area shape="rect" href="classPSF_1_1PiecewiseCell.xhtml" title="An abstract base class for all cell of a Piecesiwe." alt="" coords="8,5,221,281"/>
</map>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9e157f02c8ff876137f7e9cbc87caf06"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#a9e157f02c8ff876137f7e9cbc87caf06">PiecewiseBicubicCell</a> (double <a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a315e0967a583ede41f2e6e662e66891e">horizontal_size</a>, double <a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a5ab65e48c78fa00bac282967dbce8a4e">vertical_size</a>)</td></tr>
<tr class="memdesc:a9e157f02c8ff876137f7e9cbc87caf06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a cell with the given size, but without initializing the polynomial coefficients.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#a9e157f02c8ff876137f7e9cbc87caf06">More...</a><br /></td></tr>
<tr class="separator:a9e157f02c8ff876137f7e9cbc87caf06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab195b5c381cbb1c4bbc5fb1ef554354e"><td class="memTemplParams" colspan="2">template&lt;class IteratorType &gt; </td></tr>
<tr class="memitem:ab195b5c381cbb1c4bbc5fb1ef554354e"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#ab195b5c381cbb1c4bbc5fb1ef554354e">PiecewiseBicubicCell</a> (double <a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a315e0967a583ede41f2e6e662e66891e">horizontal_size</a>, double <a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a5ab65e48c78fa00bac282967dbce8a4e">vertical_size</a>, IteratorType first_coef, IteratorType last_coef)</td></tr>
<tr class="memdesc:ab195b5c381cbb1c4bbc5fb1ef554354e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a cell with the given horizontal and vertical sizes and initialize the coefficients.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#ab195b5c381cbb1c4bbc5fb1ef554354e">More...</a><br /></td></tr>
<tr class="separator:ab195b5c381cbb1c4bbc5fb1ef554354e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a876f8af69d3ec73017a25cb0e7637c6d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#a876f8af69d3ec73017a25cb0e7637c6d">PiecewiseBicubicCell</a> (const <a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml">PiecewiseBicubicCell</a> &amp;orig)</td></tr>
<tr class="memdesc:a876f8af69d3ec73017a25cb0e7637c6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#a876f8af69d3ec73017a25cb0e7637c6d">More...</a><br /></td></tr>
<tr class="separator:a876f8af69d3ec73017a25cb0e7637c6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85a3ec5d82ebc60218dec17f4a3a2eea"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#a85a3ec5d82ebc60218dec17f4a3a2eea">integrate_rectangle</a> (double xmin, double xmax, double ymin, double ymax) const</td></tr>
<tr class="memdesc:a85a3ec5d82ebc60218dec17f4a3a2eea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle that is contained entirely within the cell.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#a85a3ec5d82ebc60218dec17f4a3a2eea">More...</a><br /></td></tr>
<tr class="separator:a85a3ec5d82ebc60218dec17f4a3a2eea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac60f9fd62194f435838ee8d2e53dab3a"><td class="memItemLeft" align="right" valign="top">std::valarray&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#ac60f9fd62194f435838ee8d2e53dab3a">integrate_rectangle</a> (double xmin, double xmax, double ymin, double ymax, const std::valarray&lt; double &gt; &amp;coef_sets) const</td></tr>
<tr class="memdesc:ac60f9fd62194f435838ee8d2e53dab3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle that is contained entirely within the cell for several sets of coefficients.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#ac60f9fd62194f435838ee8d2e53dab3a">More...</a><br /></td></tr>
<tr class="separator:ac60f9fd62194f435838ee8d2e53dab3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6657d8b2b841155e7c3f497b993edcac"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#a6657d8b2b841155e7c3f497b993edcac">integrate_hcircle_piece</a> (double ymin, double ymax, double xbound, double radius, double circle_x, double circle_y) const</td></tr>
<tr class="memdesc:a6657d8b2b841155e7c3f497b993edcac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Integrate the intensity over a region bounded by one vertical, two horizontal lines and an arc that intersects the two horizontal lines.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#a6657d8b2b841155e7c3f497b993edcac">More...</a><br /></td></tr>
<tr class="separator:a6657d8b2b841155e7c3f497b993edcac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03b00774ea8e17e62dc44c85e2778177"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#a03b00774ea8e17e62dc44c85e2778177">integrate_vcircle_piece</a> (double xmin, double xmax, double ybound, double radius, double circle_x, double circle_y) const</td></tr>
<tr class="memdesc:a03b00774ea8e17e62dc44c85e2778177"><td class="mdescLeft">&#160;</td><td class="mdescRight">Integrate the intensity over a region bounded by one horizontal, two vertical lines and an arc that intersects the two horizontal lines.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#a03b00774ea8e17e62dc44c85e2778177">More...</a><br /></td></tr>
<tr class="separator:a03b00774ea8e17e62dc44c85e2778177"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a4d0279efbade1bc277af4fb385c53e"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#a2a4d0279efbade1bc277af4fb385c53e">operator()</a> (double x, double y) const</td></tr>
<tr class="memdesc:a2a4d0279efbade1bc277af4fb385c53e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value of the intensity at the given position relative to the bottom left cell corner.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#a2a4d0279efbade1bc277af4fb385c53e">More...</a><br /></td></tr>
<tr class="separator:a2a4d0279efbade1bc277af4fb385c53e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2b3580c7255f12bbc68f16b21662409"><td class="memItemLeft" align="right" valign="top">std::valarray&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#ad2b3580c7255f12bbc68f16b21662409">operator()</a> (double x, double y, const std::valarray&lt; double &gt; &amp;coef_sets) const</td></tr>
<tr class="memdesc:ad2b3580c7255f12bbc68f16b21662409"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value of the intensity at the given position relative to the bottom left cell corner.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#ad2b3580c7255f12bbc68f16b21662409">More...</a><br /></td></tr>
<tr class="separator:ad2b3580c7255f12bbc68f16b21662409"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a824fdcded4ba33532a9e8535a421a2e9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classPSF_1_1PiecewiseCell.xhtml">PiecewiseCell</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#a824fdcded4ba33532a9e8535a421a2e9">clone</a> () const</td></tr>
<tr class="memdesc:a824fdcded4ba33532a9e8535a421a2e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a newly allocated copy of this object.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#a824fdcded4ba33532a9e8535a421a2e9">More...</a><br /></td></tr>
<tr class="separator:a824fdcded4ba33532a9e8535a421a2e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a613dd9e616e4725c11ba122c5d79a5fc"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#a613dd9e616e4725c11ba122c5d79a5fc">integrate_rectangle</a> (double xmin, double xmax, double ymin, double ymax) const=0</td></tr>
<tr class="memdesc:a613dd9e616e4725c11ba122c5d79a5fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle that is contained entirely within the cell.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#a613dd9e616e4725c11ba122c5d79a5fc">More...</a><br /></td></tr>
<tr class="separator:a613dd9e616e4725c11ba122c5d79a5fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea6c1ed1be26d2fd9cffb788b4328369"><td class="memItemLeft" align="right" valign="top">virtual std::valarray&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#aea6c1ed1be26d2fd9cffb788b4328369">integrate_rectangle</a> (double xmin, double xmax, double ymin, double ymax, const std::valarray&lt; double &gt; &amp;coef_sets) const=0</td></tr>
<tr class="memdesc:aea6c1ed1be26d2fd9cffb788b4328369"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle that is contained entirely within the cell.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#aea6c1ed1be26d2fd9cffb788b4328369">More...</a><br /></td></tr>
<tr class="separator:aea6c1ed1be26d2fd9cffb788b4328369"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0a5a87b3310c4e4793c64a619c7a655"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#aa0a5a87b3310c4e4793c64a619c7a655">integrate_rectangle</a> (double x, double y, bool right, bool up) const</td></tr>
<tr class="memdesc:aa0a5a87b3310c4e4793c64a619c7a655"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#aa0a5a87b3310c4e4793c64a619c7a655">More...</a><br /></td></tr>
<tr class="separator:aa0a5a87b3310c4e4793c64a619c7a655"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a78e32d2142308bd41a750f75655288"><td class="memItemLeft" align="right" valign="top">virtual std::valarray&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#a7a78e32d2142308bd41a750f75655288">integrate_rectangle</a> (double x, double y, bool right, bool up, const std::valarray&lt; double &gt; &amp;coef_sets) const</td></tr>
<tr class="memdesc:a7a78e32d2142308bd41a750f75655288"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#a7a78e32d2142308bd41a750f75655288">More...</a><br /></td></tr>
<tr class="separator:a7a78e32d2142308bd41a750f75655288"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8db36b6979b7868737c527b32510b473"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#a8db36b6979b7868737c527b32510b473">integrate_hcircle_piece</a> (double ymin, double ymax, double xbound, double radius, double circle_x, double circle_y) const=0</td></tr>
<tr class="memdesc:a8db36b6979b7868737c527b32510b473"><td class="mdescLeft">&#160;</td><td class="mdescRight">Integrate the intensity over a region bounded by one vertical, two horizontal lines and an arc that intersects the two horizontal lines.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#a8db36b6979b7868737c527b32510b473">More...</a><br /></td></tr>
<tr class="separator:a8db36b6979b7868737c527b32510b473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4c0655a727e9262a6de2a6ef77f1316"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#ad4c0655a727e9262a6de2a6ef77f1316">integrate_hcircle_piece</a> (double ybound, double xbound, double radius, double circle_x, double circle_y, bool up) const</td></tr>
<tr class="memdesc:ad4c0655a727e9262a6de2a6ef77f1316"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_hcircle_piece(double, double, double, double, double, double) but with either the top or the bottom boundary coinciding with the cell's.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#ad4c0655a727e9262a6de2a6ef77f1316">More...</a><br /></td></tr>
<tr class="separator:ad4c0655a727e9262a6de2a6ef77f1316"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9bc73cb6994f7ba8917b4a841f8d09d"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#af9bc73cb6994f7ba8917b4a841f8d09d">integrate_hcircle_piece</a> (double ymin, double ymax, double radius, double circle_x, double circle_y) const</td></tr>
<tr class="memdesc:af9bc73cb6994f7ba8917b4a841f8d09d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_hcircle_piece(double, double, double, double, double, double) but with the vertical boundary coinciding with the cell wall inside the circle of the boundinc arc.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#af9bc73cb6994f7ba8917b4a841f8d09d">More...</a><br /></td></tr>
<tr class="separator:af9bc73cb6994f7ba8917b4a841f8d09d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f7a4e60676a25e462f0251b4115ba08"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#a3f7a4e60676a25e462f0251b4115ba08">integrate_hcircle_piece</a> (double xbound, double radius, double circle_x, double circle_y) const</td></tr>
<tr class="memdesc:a3f7a4e60676a25e462f0251b4115ba08"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_hcircle_piece(double, double, double, double, double, double) but with both the top and the bottom boundary coinciding with the cell's.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#a3f7a4e60676a25e462f0251b4115ba08">More...</a><br /></td></tr>
<tr class="separator:a3f7a4e60676a25e462f0251b4115ba08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d161a8b14cc3dbe057cb6fb7ca85c84"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#a2d161a8b14cc3dbe057cb6fb7ca85c84">integrate_hcircle_piece</a> (double radius, double circle_x, double circle_y) const</td></tr>
<tr class="memdesc:a2d161a8b14cc3dbe057cb6fb7ca85c84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_hcircle_piece(double, double, double, double, double, double) but with all three straight boundaries coinciding with the cell's.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#a2d161a8b14cc3dbe057cb6fb7ca85c84">More...</a><br /></td></tr>
<tr class="separator:a2d161a8b14cc3dbe057cb6fb7ca85c84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b7a3e8ab208526f950038b021617a9c"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#a2b7a3e8ab208526f950038b021617a9c">integrate_vcircle_piece</a> (double xmin, double xmax, double ybound, double radius, double circle_x, double circle_y) const=0</td></tr>
<tr class="memdesc:a2b7a3e8ab208526f950038b021617a9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Integrate the intensity over a region bounded by one horizontal, two vertical lines and an arc that intersects the two horizontal lines.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#a2b7a3e8ab208526f950038b021617a9c">More...</a><br /></td></tr>
<tr class="separator:a2b7a3e8ab208526f950038b021617a9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd0990d4baa0ce4c3fa25447d96a35e1"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#acd0990d4baa0ce4c3fa25447d96a35e1">integrate_vcircle_piece</a> (double xbound, double ybound, double radius, double circle_x, double circle_y, bool right) const</td></tr>
<tr class="memdesc:acd0990d4baa0ce4c3fa25447d96a35e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_vcircle_piece(double, double, double, double, double, double) but with either the left or the right boundary coinciding with the cell's.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#acd0990d4baa0ce4c3fa25447d96a35e1">More...</a><br /></td></tr>
<tr class="separator:acd0990d4baa0ce4c3fa25447d96a35e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09108db5dc9364d2525d940bfcdb3dc9"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#a09108db5dc9364d2525d940bfcdb3dc9">integrate_vcircle_piece</a> (double xmin, double xmax, double radius, double circle_x, double circle_y) const</td></tr>
<tr class="memdesc:a09108db5dc9364d2525d940bfcdb3dc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_vcircle_piece(double, double, double, double, double, double) but with the horizontal boundary coinciding with the cell wall inside the circle of the boundinc arc.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#a09108db5dc9364d2525d940bfcdb3dc9">More...</a><br /></td></tr>
<tr class="separator:a09108db5dc9364d2525d940bfcdb3dc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1dd68c46ec936dae9930231cc47d618"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#ac1dd68c46ec936dae9930231cc47d618">integrate_vcircle_piece</a> (double ybound, double radius, double circle_x, double circle_y) const</td></tr>
<tr class="memdesc:ac1dd68c46ec936dae9930231cc47d618"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_vcircle_piece(double, double, double, double, double, double) but with both the left and the right boundary coinciding with the cell's.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#ac1dd68c46ec936dae9930231cc47d618">More...</a><br /></td></tr>
<tr class="separator:ac1dd68c46ec936dae9930231cc47d618"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8ddeb37adeb25e437c389e362223118"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#ad8ddeb37adeb25e437c389e362223118">integrate_vcircle_piece</a> (double xbound, double radius, double circle_x, double circle_y, bool right) const</td></tr>
<tr class="memdesc:ad8ddeb37adeb25e437c389e362223118"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_vcircle_piece(double, double, double, double, double, double) but the horizontal as well as one of the vertical boundaries coinciding with the cell's.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#ad8ddeb37adeb25e437c389e362223118">More...</a><br /></td></tr>
<tr class="separator:ad8ddeb37adeb25e437c389e362223118"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76cb842fab96e0c6e7555c03d33af230"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#a76cb842fab96e0c6e7555c03d33af230">integrate_vcircle_piece</a> (double radius, double circle_x, double circle_y) const</td></tr>
<tr class="memdesc:a76cb842fab96e0c6e7555c03d33af230"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_vcircle_piece(double, double, double, double, double, double) but with all three straight boundaries coinciding with the cell's.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#a76cb842fab96e0c6e7555c03d33af230">More...</a><br /></td></tr>
<tr class="separator:a76cb842fab96e0c6e7555c03d33af230"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classPSF_1_1PiecewiseCell"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classPSF_1_1PiecewiseCell')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classPSF_1_1PiecewiseCell.xhtml">PSF::PiecewiseCell</a></td></tr>
<tr class="memitem:a736eae74f49582aa9ba6347becbf73ba inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a736eae74f49582aa9ba6347becbf73ba">PiecewiseCell</a> (double <a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a315e0967a583ede41f2e6e662e66891e">horizontal_size</a>, double <a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a5ab65e48c78fa00bac282967dbce8a4e">vertical_size</a>)</td></tr>
<tr class="memdesc:a736eae74f49582aa9ba6347becbf73ba inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a cell with the given size.  <a href="classPSF_1_1PiecewiseCell.xhtml#a736eae74f49582aa9ba6347becbf73ba">More...</a><br /></td></tr>
<tr class="separator:a736eae74f49582aa9ba6347becbf73ba inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa917f139a4acfdaf4431fe0967de3545 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#aa917f139a4acfdaf4431fe0967de3545">integrate_partial_vspan</a> (double x_min, double x_max, double y, bool up) const</td></tr>
<tr class="memdesc:aa917f139a4acfdaf4431fe0967de3545 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle spanning the cell partially in the vertical direction.  <a href="classPSF_1_1PiecewiseCell.xhtml#aa917f139a4acfdaf4431fe0967de3545">More...</a><br /></td></tr>
<tr class="separator:aa917f139a4acfdaf4431fe0967de3545 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add81a860c337e85c0fa76717f19fd299 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual std::valarray&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#add81a860c337e85c0fa76717f19fd299">integrate_partial_vspan</a> (double x_min, double x_max, double y, bool up, const std::valarray&lt; double &gt; &amp;coef_sets) const</td></tr>
<tr class="memdesc:add81a860c337e85c0fa76717f19fd299 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle spanning the cell partially in the vertical direction.  <a href="classPSF_1_1PiecewiseCell.xhtml#add81a860c337e85c0fa76717f19fd299">More...</a><br /></td></tr>
<tr class="separator:add81a860c337e85c0fa76717f19fd299 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cf563716050c47f393e8c4cf71f34b2 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a8cf563716050c47f393e8c4cf71f34b2">integrate_partial_hspan</a> (double y_min, double y_max, double x, bool right) const</td></tr>
<tr class="memdesc:a8cf563716050c47f393e8c4cf71f34b2 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle spanning the cell partially in the horizontal direction..  <a href="classPSF_1_1PiecewiseCell.xhtml#a8cf563716050c47f393e8c4cf71f34b2">More...</a><br /></td></tr>
<tr class="separator:a8cf563716050c47f393e8c4cf71f34b2 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b0997cb013c3758eb3b02367084fdcb inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual std::valarray&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a6b0997cb013c3758eb3b02367084fdcb">integrate_partial_hspan</a> (double y_min, double y_max, double x, bool right, const std::valarray&lt; double &gt; &amp;coef_sets) const</td></tr>
<tr class="memdesc:a6b0997cb013c3758eb3b02367084fdcb inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle spanning the cell partially in the horizontal direction..  <a href="classPSF_1_1PiecewiseCell.xhtml#a6b0997cb013c3758eb3b02367084fdcb">More...</a><br /></td></tr>
<tr class="separator:a6b0997cb013c3758eb3b02367084fdcb inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1b406d8e17c529de5591b634aee084e inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#ae1b406d8e17c529de5591b634aee084e">integrate</a> () const</td></tr>
<tr class="memdesc:ae1b406d8e17c529de5591b634aee084e inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over the enitire cell.  <a href="classPSF_1_1PiecewiseCell.xhtml#ae1b406d8e17c529de5591b634aee084e">More...</a><br /></td></tr>
<tr class="separator:ae1b406d8e17c529de5591b634aee084e inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba6170be12fda697e6ac1012e7e6653b inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual std::valarray&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#aba6170be12fda697e6ac1012e7e6653b">integrate</a> (const std::valarray&lt; double &gt; &amp;coef_sets) const</td></tr>
<tr class="memdesc:aba6170be12fda697e6ac1012e7e6653b inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over the enitire cell.  <a href="classPSF_1_1PiecewiseCell.xhtml#aba6170be12fda697e6ac1012e7e6653b">More...</a><br /></td></tr>
<tr class="separator:aba6170be12fda697e6ac1012e7e6653b inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abda6aa3ce63477de51a4754468a9600c inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#abda6aa3ce63477de51a4754468a9600c">integrate_vspan</a> (double x_min, double x_max) const</td></tr>
<tr class="memdesc:abda6aa3ce63477de51a4754468a9600c inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle spanning the cell fully in the vertical direction..  <a href="classPSF_1_1PiecewiseCell.xhtml#abda6aa3ce63477de51a4754468a9600c">More...</a><br /></td></tr>
<tr class="separator:abda6aa3ce63477de51a4754468a9600c inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a171b2210398162c9f578e949abf72d1f inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual std::valarray&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a171b2210398162c9f578e949abf72d1f">integrate_vspan</a> (double x_min, double x_max, const std::valarray&lt; double &gt; &amp;coef_sets) const</td></tr>
<tr class="memdesc:a171b2210398162c9f578e949abf72d1f inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle spanning the cell fully in the vertical direction..  <a href="classPSF_1_1PiecewiseCell.xhtml#a171b2210398162c9f578e949abf72d1f">More...</a><br /></td></tr>
<tr class="separator:a171b2210398162c9f578e949abf72d1f inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c3c6942d189c81e55c85c96272b0b64 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a8c3c6942d189c81e55c85c96272b0b64">integrate_hspan</a> (double y_min, double y_max) const</td></tr>
<tr class="memdesc:a8c3c6942d189c81e55c85c96272b0b64 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle spanning the cell fully in the horizontal direction..  <a href="classPSF_1_1PiecewiseCell.xhtml#a8c3c6942d189c81e55c85c96272b0b64">More...</a><br /></td></tr>
<tr class="separator:a8c3c6942d189c81e55c85c96272b0b64 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f9f4c98ff2353ac3784c6e582ff9b76 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual std::valarray&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a2f9f4c98ff2353ac3784c6e582ff9b76">integrate_hspan</a> (double y_min, double y_max, const std::valarray&lt; double &gt; &amp;coef_sets) const</td></tr>
<tr class="memdesc:a2f9f4c98ff2353ac3784c6e582ff9b76 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle spanning the cell fully in the horizontal direction..  <a href="classPSF_1_1PiecewiseCell.xhtml#a2f9f4c98ff2353ac3784c6e582ff9b76">More...</a><br /></td></tr>
<tr class="separator:a2f9f4c98ff2353ac3784c6e582ff9b76 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d87d3a2fabd71820579a13f30999430 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a2d87d3a2fabd71820579a13f30999430">integrate_vspan</a> (double x, bool right) const</td></tr>
<tr class="memdesc:a2d87d3a2fabd71820579a13f30999430 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle spanning the cell fully in the vertical direction..  <a href="classPSF_1_1PiecewiseCell.xhtml#a2d87d3a2fabd71820579a13f30999430">More...</a><br /></td></tr>
<tr class="separator:a2d87d3a2fabd71820579a13f30999430 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca526afb939cd40f5a575cb16c1dd24f inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual std::valarray&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#aca526afb939cd40f5a575cb16c1dd24f">integrate_vspan</a> (double x, bool right, const std::valarray&lt; double &gt; &amp;coef_sets) const</td></tr>
<tr class="memdesc:aca526afb939cd40f5a575cb16c1dd24f inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle spanning the cell fully in the vertical direction..  <a href="classPSF_1_1PiecewiseCell.xhtml#aca526afb939cd40f5a575cb16c1dd24f">More...</a><br /></td></tr>
<tr class="separator:aca526afb939cd40f5a575cb16c1dd24f inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac69a11787efeabd9f8c58e903b50928f inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#ac69a11787efeabd9f8c58e903b50928f">integrate_hspan</a> (double y, bool up) const</td></tr>
<tr class="memdesc:ac69a11787efeabd9f8c58e903b50928f inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle spanning the cell fully in the horizontal direction..  <a href="classPSF_1_1PiecewiseCell.xhtml#ac69a11787efeabd9f8c58e903b50928f">More...</a><br /></td></tr>
<tr class="separator:ac69a11787efeabd9f8c58e903b50928f inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae24aa5ca6495365d71a6a456dcf9b2b3 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual std::valarray&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#ae24aa5ca6495365d71a6a456dcf9b2b3">integrate_hspan</a> (double y, bool up, const std::valarray&lt; double &gt; &amp;coef_sets) const</td></tr>
<tr class="memdesc:ae24aa5ca6495365d71a6a456dcf9b2b3 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle spanning the cell fully in the horizontal direction..  <a href="classPSF_1_1PiecewiseCell.xhtml#ae24aa5ca6495365d71a6a456dcf9b2b3">More...</a><br /></td></tr>
<tr class="separator:ae24aa5ca6495365d71a6a456dcf9b2b3 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0a5a87b3310c4e4793c64a619c7a655 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#aa0a5a87b3310c4e4793c64a619c7a655">integrate_rectangle</a> (double x, double y, bool right, bool up) const</td></tr>
<tr class="memdesc:aa0a5a87b3310c4e4793c64a619c7a655 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle.  <a href="classPSF_1_1PiecewiseCell.xhtml#aa0a5a87b3310c4e4793c64a619c7a655">More...</a><br /></td></tr>
<tr class="separator:aa0a5a87b3310c4e4793c64a619c7a655 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a78e32d2142308bd41a750f75655288 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual std::valarray&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a7a78e32d2142308bd41a750f75655288">integrate_rectangle</a> (double x, double y, bool right, bool up, const std::valarray&lt; double &gt; &amp;coef_sets) const</td></tr>
<tr class="memdesc:a7a78e32d2142308bd41a750f75655288 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the integral of the intensity over a rectangle.  <a href="classPSF_1_1PiecewiseCell.xhtml#a7a78e32d2142308bd41a750f75655288">More...</a><br /></td></tr>
<tr class="separator:a7a78e32d2142308bd41a750f75655288 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4c0655a727e9262a6de2a6ef77f1316 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#ad4c0655a727e9262a6de2a6ef77f1316">integrate_hcircle_piece</a> (double ybound, double xbound, double radius, double circle_x, double circle_y, bool up) const</td></tr>
<tr class="memdesc:ad4c0655a727e9262a6de2a6ef77f1316 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_hcircle_piece(double, double, double, double, double, double) but with either the top or the bottom boundary coinciding with the cell's.  <a href="classPSF_1_1PiecewiseCell.xhtml#ad4c0655a727e9262a6de2a6ef77f1316">More...</a><br /></td></tr>
<tr class="separator:ad4c0655a727e9262a6de2a6ef77f1316 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9bc73cb6994f7ba8917b4a841f8d09d inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#af9bc73cb6994f7ba8917b4a841f8d09d">integrate_hcircle_piece</a> (double ymin, double ymax, double radius, double circle_x, double circle_y) const</td></tr>
<tr class="memdesc:af9bc73cb6994f7ba8917b4a841f8d09d inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_hcircle_piece(double, double, double, double, double, double) but with the vertical boundary coinciding with the cell wall inside the circle of the boundinc arc.  <a href="classPSF_1_1PiecewiseCell.xhtml#af9bc73cb6994f7ba8917b4a841f8d09d">More...</a><br /></td></tr>
<tr class="separator:af9bc73cb6994f7ba8917b4a841f8d09d inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f7a4e60676a25e462f0251b4115ba08 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a3f7a4e60676a25e462f0251b4115ba08">integrate_hcircle_piece</a> (double xbound, double radius, double circle_x, double circle_y) const</td></tr>
<tr class="memdesc:a3f7a4e60676a25e462f0251b4115ba08 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_hcircle_piece(double, double, double, double, double, double) but with both the top and the bottom boundary coinciding with the cell's.  <a href="classPSF_1_1PiecewiseCell.xhtml#a3f7a4e60676a25e462f0251b4115ba08">More...</a><br /></td></tr>
<tr class="separator:a3f7a4e60676a25e462f0251b4115ba08 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d161a8b14cc3dbe057cb6fb7ca85c84 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a2d161a8b14cc3dbe057cb6fb7ca85c84">integrate_hcircle_piece</a> (double radius, double circle_x, double circle_y) const</td></tr>
<tr class="memdesc:a2d161a8b14cc3dbe057cb6fb7ca85c84 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_hcircle_piece(double, double, double, double, double, double) but with all three straight boundaries coinciding with the cell's.  <a href="classPSF_1_1PiecewiseCell.xhtml#a2d161a8b14cc3dbe057cb6fb7ca85c84">More...</a><br /></td></tr>
<tr class="separator:a2d161a8b14cc3dbe057cb6fb7ca85c84 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd0990d4baa0ce4c3fa25447d96a35e1 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#acd0990d4baa0ce4c3fa25447d96a35e1">integrate_vcircle_piece</a> (double xbound, double ybound, double radius, double circle_x, double circle_y, bool right) const</td></tr>
<tr class="memdesc:acd0990d4baa0ce4c3fa25447d96a35e1 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_vcircle_piece(double, double, double, double, double, double) but with either the left or the right boundary coinciding with the cell's.  <a href="classPSF_1_1PiecewiseCell.xhtml#acd0990d4baa0ce4c3fa25447d96a35e1">More...</a><br /></td></tr>
<tr class="separator:acd0990d4baa0ce4c3fa25447d96a35e1 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09108db5dc9364d2525d940bfcdb3dc9 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a09108db5dc9364d2525d940bfcdb3dc9">integrate_vcircle_piece</a> (double xmin, double xmax, double radius, double circle_x, double circle_y) const</td></tr>
<tr class="memdesc:a09108db5dc9364d2525d940bfcdb3dc9 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_vcircle_piece(double, double, double, double, double, double) but with the horizontal boundary coinciding with the cell wall inside the circle of the boundinc arc.  <a href="classPSF_1_1PiecewiseCell.xhtml#a09108db5dc9364d2525d940bfcdb3dc9">More...</a><br /></td></tr>
<tr class="separator:a09108db5dc9364d2525d940bfcdb3dc9 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1dd68c46ec936dae9930231cc47d618 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#ac1dd68c46ec936dae9930231cc47d618">integrate_vcircle_piece</a> (double ybound, double radius, double circle_x, double circle_y) const</td></tr>
<tr class="memdesc:ac1dd68c46ec936dae9930231cc47d618 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_vcircle_piece(double, double, double, double, double, double) but with both the left and the right boundary coinciding with the cell's.  <a href="classPSF_1_1PiecewiseCell.xhtml#ac1dd68c46ec936dae9930231cc47d618">More...</a><br /></td></tr>
<tr class="separator:ac1dd68c46ec936dae9930231cc47d618 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8ddeb37adeb25e437c389e362223118 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#ad8ddeb37adeb25e437c389e362223118">integrate_vcircle_piece</a> (double xbound, double radius, double circle_x, double circle_y, bool right) const</td></tr>
<tr class="memdesc:ad8ddeb37adeb25e437c389e362223118 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_vcircle_piece(double, double, double, double, double, double) but the horizontal as well as one of the vertical boundaries coinciding with the cell's.  <a href="classPSF_1_1PiecewiseCell.xhtml#ad8ddeb37adeb25e437c389e362223118">More...</a><br /></td></tr>
<tr class="separator:ad8ddeb37adeb25e437c389e362223118 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76cb842fab96e0c6e7555c03d33af230 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a76cb842fab96e0c6e7555c03d33af230">integrate_vcircle_piece</a> (double radius, double circle_x, double circle_y) const</td></tr>
<tr class="memdesc:a76cb842fab96e0c6e7555c03d33af230 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as integrate_vcircle_piece(double, double, double, double, double, double) but with all three straight boundaries coinciding with the cell's.  <a href="classPSF_1_1PiecewiseCell.xhtml#a76cb842fab96e0c6e7555c03d33af230">More...</a><br /></td></tr>
<tr class="separator:a76cb842fab96e0c6e7555c03d33af230 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08aa7a8b5caa8ff6a8a93f88f770f359 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a08aa7a8b5caa8ff6a8a93f88f770f359">integrate_wedge</a> (double radius, double circle_x, double circle_y) const</td></tr>
<tr class="memdesc:a08aa7a8b5caa8ff6a8a93f88f770f359 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Integrates the intensity over a region with boundaries two adjacent cell walls and an arc of a circle intersecting both of them.  <a href="classPSF_1_1PiecewiseCell.xhtml#a08aa7a8b5caa8ff6a8a93f88f770f359">More...</a><br /></td></tr>
<tr class="separator:a08aa7a8b5caa8ff6a8a93f88f770f359 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a315e0967a583ede41f2e6e662e66891e inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a315e0967a583ede41f2e6e662e66891e">horizontal_size</a> () const</td></tr>
<tr class="memdesc:a315e0967a583ede41f2e6e662e66891e inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">The horizontal size of the cell.  <a href="classPSF_1_1PiecewiseCell.xhtml#a315e0967a583ede41f2e6e662e66891e">More...</a><br /></td></tr>
<tr class="separator:a315e0967a583ede41f2e6e662e66891e inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ab65e48c78fa00bac282967dbce8a4e inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a5ab65e48c78fa00bac282967dbce8a4e">vertical_size</a> () const</td></tr>
<tr class="memdesc:a5ab65e48c78fa00bac282967dbce8a4e inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">The vertical size of the cell.  <a href="classPSF_1_1PiecewiseCell.xhtml#a5ab65e48c78fa00bac282967dbce8a4e">More...</a><br /></td></tr>
<tr class="separator:a5ab65e48c78fa00bac282967dbce8a4e inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a336ba7ea2178f6020fd246ab525a1b94 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a336ba7ea2178f6020fd246ab525a1b94">~PiecewiseCell</a> ()</td></tr>
<tr class="memdesc:a336ba7ea2178f6020fd246ab525a1b94 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="classPSF_1_1PiecewiseCell.xhtml#a336ba7ea2178f6020fd246ab525a1b94">More...</a><br /></td></tr>
<tr class="separator:a336ba7ea2178f6020fd246ab525a1b94 inherit pub_methods_classPSF_1_1PiecewiseCell"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:adb31daeec75ed8b6146dd256bb0f210b"><td class="memItemLeft" align="right" valign="top">std::valarray&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml#adb31daeec75ed8b6146dd256bb0f210b">__coef</a></td></tr>
<tr class="memdesc:adb31daeec75ed8b6146dd256bb0f210b"><td class="mdescLeft">&#160;</td><td class="mdescRight">The sets of polynomial coefficients.  <a href="classPSF_1_1PiecewiseBicubicCell.xhtml#adb31daeec75ed8b6146dd256bb0f210b">More...</a><br /></td></tr>
<tr class="separator:adb31daeec75ed8b6146dd256bb0f210b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A class for <a class="el" href="classPSF_1_1Piecewise.xhtml" title="A PSF model consisting of a grid of rectangles each with a separate intensity function.">Piecewise</a> cells over which the intensity is given by a bi-cubic polynomial. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a9e157f02c8ff876137f7e9cbc87caf06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e157f02c8ff876137f7e9cbc87caf06">&#9670;&nbsp;</a></span>PiecewiseBicubicCell() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">PSF::PiecewiseBicubicCell::PiecewiseBicubicCell </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>horizontal_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>vertical_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a cell with the given size, but without initializing the polynomial coefficients. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">horizontal_size</td><td>The horizontal size of the cell to create. </td></tr>
    <tr><td class="paramname">vertical_size</td><td>The vertical size of the cell to create. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ab195b5c381cbb1c4bbc5fb1ef554354e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab195b5c381cbb1c4bbc5fb1ef554354e">&#9670;&nbsp;</a></span>PiecewiseBicubicCell() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class IteratorType &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">PSF::PiecewiseBicubicCell::PiecewiseBicubicCell </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>horizontal_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>vertical_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IteratorType&#160;</td>
          <td class="paramname"><em>first_coef</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IteratorType&#160;</td>
          <td class="paramname"><em>last_coef</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a cell with the given horizontal and vertical sizes and initialize the coefficients. </p>
<p>See __coef for the order of the coefficients. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">horizontal_size</td><td>The horizental size of the cell to create. </td></tr>
    <tr><td class="paramname">vertical_size</td><td>The vertical size of the cell to create. </td></tr>
    <tr><td class="paramname">first_coef</td><td>An iterator to the first polynomial coefficient. </td></tr>
    <tr><td class="paramname">last_coef</td><td>An iterator to one past the last polynomial coefficient. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a876f8af69d3ec73017a25cb0e7637c6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a876f8af69d3ec73017a25cb0e7637c6d">&#9670;&nbsp;</a></span>PiecewiseBicubicCell() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">PSF::PiecewiseBicubicCell::PiecewiseBicubicCell </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml">PiecewiseBicubicCell</a> &amp;&#160;</td>
          <td class="paramname"><em>orig</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copy constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">orig</td><td>The original cell to copy. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a824fdcded4ba33532a9e8535a421a2e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a824fdcded4ba33532a9e8535a421a2e9">&#9670;&nbsp;</a></span>clone()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classPSF_1_1PiecewiseCell.xhtml">PiecewiseCell</a>* PSF::PiecewiseBicubicCell::clone </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return a newly allocated copy of this object. </p>

<p>Implements <a class="el" href="classPSF_1_1PiecewiseCell.xhtml#ad9ffa37f1460a3a4b87f30c38c84fff0">PSF::PiecewiseCell</a>.</p>

</div>
</div>
<a id="a2d161a8b14cc3dbe057cb6fb7ca85c84"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d161a8b14cc3dbe057cb6fb7ca85c84">&#9670;&nbsp;</a></span>integrate_hcircle_piece() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PiecewiseCell::integrate_hcircle_piece</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Same as integrate_hcircle_piece(double, double, double, double, double, double) but with all three straight boundaries coinciding with the cell's. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_hcircle_piece_ddd.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
 
</div>
</div>
<a id="a3f7a4e60676a25e462f0251b4115ba08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f7a4e60676a25e462f0251b4115ba08">&#9670;&nbsp;</a></span>integrate_hcircle_piece() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PiecewiseCell::integrate_hcircle_piece</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Same as integrate_hcircle_piece(double, double, double, double, double, double) but with both the top and the bottom boundary coinciding with the cell's. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_hcircle_piece_dddd.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
 
</div>
</div>
<a id="ad4c0655a727e9262a6de2a6ef77f1316"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4c0655a727e9262a6de2a6ef77f1316">&#9670;&nbsp;</a></span>integrate_hcircle_piece() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PiecewiseCell::integrate_hcircle_piece</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Same as integrate_hcircle_piece(double, double, double, double, double, double) but with either the top or the bottom boundary coinciding with the cell's. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_hcircle_piece_dddddb.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
 
</div>
</div>
<a id="af9bc73cb6994f7ba8917b4a841f8d09d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9bc73cb6994f7ba8917b4a841f8d09d">&#9670;&nbsp;</a></span>integrate_hcircle_piece() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PiecewiseCell::integrate_hcircle_piece</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Same as integrate_hcircle_piece(double, double, double, double, double, double) but with the vertical boundary coinciding with the cell wall inside the circle of the boundinc arc. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_hcircle_piece_ddddd.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
 
</div>
</div>
<a id="a6657d8b2b841155e7c3f497b993edcac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6657d8b2b841155e7c3f497b993edcac">&#9670;&nbsp;</a></span>integrate_hcircle_piece() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double PSF::PiecewiseBicubicCell::integrate_hcircle_piece </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>ymin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>ymax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xbound</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>circle_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>circle_y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Integrate the intensity over a region bounded by one vertical, two horizontal lines and an arc that intersects the two horizontal lines. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_hcircle_piece_dddddd.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
<p>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ymin</td><td>The bottom boundary of the region. </td></tr>
    <tr><td class="paramname">ymax</td><td>The top boundary of the region. </td></tr>
    <tr><td class="paramname">xbound</td><td>The straight vertical boundary of the region. </td></tr>
    <tr><td class="paramname">radius</td><td>The radius of the circle the bounding arc is part of. </td></tr>
    <tr><td class="paramname">circle_x</td><td>The x coordinate of the circle center relative to the cell center. </td></tr>
    <tr><td class="paramname">circle_y</td><td>The y coordinate of the circle center relative to the cell center. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classPSF_1_1PiecewiseCell.xhtml#acc985c0dc8829e1d7328c1eeada97840">PSF::PiecewiseCell</a>.</p>

</div>
</div>
<a id="a8db36b6979b7868737c527b32510b473"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8db36b6979b7868737c527b32510b473">&#9670;&nbsp;</a></span>integrate_hcircle_piece() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PiecewiseCell::integrate_hcircle_piece</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Integrate the intensity over a region bounded by one vertical, two horizontal lines and an arc that intersects the two horizontal lines. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_hcircle_piece_dddddd.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
<p>. </p>

</div>
</div>
<a id="aa0a5a87b3310c4e4793c64a619c7a655"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0a5a87b3310c4e4793c64a619c7a655">&#9670;&nbsp;</a></span>integrate_rectangle() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PiecewiseCell::integrate_rectangle</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculate the integral of the intensity over a rectangle. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_rectangle_ddbb.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
 
</div>
</div>
<a id="a7a78e32d2142308bd41a750f75655288"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a78e32d2142308bd41a750f75655288">&#9670;&nbsp;</a></span>integrate_rectangle() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::valarray&lt;double&gt; PSF::PiecewiseCell::integrate_rectangle</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculate the integral of the intensity over a rectangle. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_rectangle_ddbb.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
 
</div>
</div>
<a id="a85a3ec5d82ebc60218dec17f4a3a2eea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85a3ec5d82ebc60218dec17f4a3a2eea">&#9670;&nbsp;</a></span>integrate_rectangle() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PiecewiseBicubicCell::integrate_rectangle </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xmin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xmax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>ymin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>ymax</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculate the integral of the intensity over a rectangle that is contained entirely within the cell. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_rectangle_dddd.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
 <dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">xmin</td><td>The left boundary of the rectangle. Must lie between the horizontal cell boundaries. Defined relative to the left cell boundary. </td></tr>
    <tr><td class="paramname">xmax</td><td>The right boundary of the rectangle. Must lie between the horizontal cell boundaries. Defined relative to the left cell boundary. </td></tr>
    <tr><td class="paramname">ymin</td><td>The bottom boundary of the rectangle. Must lie between the vertical cell boundaries. Defined relative to the bottom cell boundary. </td></tr>
    <tr><td class="paramname">ymax</td><td>The top boundary of the rectangle. Must lie between the vertical cell boundaries. Defined relative to the bottom cell boundary. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classPSF_1_1PiecewiseCell.xhtml#a1972e1ffed48c1325b767262efe4032d">PSF::PiecewiseCell</a>.</p>

</div>
</div>
<a id="a613dd9e616e4725c11ba122c5d79a5fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a613dd9e616e4725c11ba122c5d79a5fc">&#9670;&nbsp;</a></span>integrate_rectangle() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PiecewiseCell::integrate_rectangle</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculate the integral of the intensity over a rectangle that is contained entirely within the cell. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_rectangle_dddd.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
 
</div>
</div>
<a id="ac60f9fd62194f435838ee8d2e53dab3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac60f9fd62194f435838ee8d2e53dab3a">&#9670;&nbsp;</a></span>integrate_rectangle() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::valarray&lt; double &gt; PSF::PiecewiseBicubicCell::integrate_rectangle </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xmin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xmax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>ymin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>ymax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::valarray&lt; double &gt; &amp;&#160;</td>
          <td class="paramname"><em>coef_sets</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculate the integral of the intensity over a rectangle that is contained entirely within the cell for several sets of coefficients. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_rectangle_dddd.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
 <dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">xmin</td><td>The left boundary of the rectangle. Must lie between the horizontal cell boundaries. Defined relative to the left cell boundary. </td></tr>
    <tr><td class="paramname">xmax</td><td>The right boundary of the rectangle. Must lie between the horizontal cell boundaries. Defined relative to the left cell boundary. </td></tr>
    <tr><td class="paramname">ymin</td><td>The bottom boundary of the rectangle. Must lie between the vertical cell boundaries. Defined relative to the bottom cell boundary. </td></tr>
    <tr><td class="paramname">ymax</td><td>The top boundary of the rectangle. Must lie between the vertical cell boundaries. Defined relative to the bottom cell boundary. </td></tr>
    <tr><td class="paramname">coef_sets</td><td>The sets of coefficients to compute the integral for. Each set must contain 16 coefficients and the sets are concatenated. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classPSF_1_1PiecewiseCell.xhtml#ac80752936bea6554c96f21a4d7462aa3">PSF::PiecewiseCell</a>.</p>

</div>
</div>
<a id="aea6c1ed1be26d2fd9cffb788b4328369"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea6c1ed1be26d2fd9cffb788b4328369">&#9670;&nbsp;</a></span>integrate_rectangle() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::valarray&lt;double&gt; PSF::PiecewiseCell::integrate_rectangle</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Calculate the integral of the intensity over a rectangle that is contained entirely within the cell. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_rectangle_dddd.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
 
</div>
</div>
<a id="a76cb842fab96e0c6e7555c03d33af230"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76cb842fab96e0c6e7555c03d33af230">&#9670;&nbsp;</a></span>integrate_vcircle_piece() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PiecewiseCell::integrate_vcircle_piece</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Same as integrate_vcircle_piece(double, double, double, double, double, double) but with all three straight boundaries coinciding with the cell's. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_vcircle_piece_ddd.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
 
</div>
</div>
<a id="ad8ddeb37adeb25e437c389e362223118"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8ddeb37adeb25e437c389e362223118">&#9670;&nbsp;</a></span>integrate_vcircle_piece() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PiecewiseCell::integrate_vcircle_piece</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Same as integrate_vcircle_piece(double, double, double, double, double, double) but the horizontal as well as one of the vertical boundaries coinciding with the cell's. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_vcircle_piece_ddddb.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
 
</div>
</div>
<a id="acd0990d4baa0ce4c3fa25447d96a35e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd0990d4baa0ce4c3fa25447d96a35e1">&#9670;&nbsp;</a></span>integrate_vcircle_piece() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PiecewiseCell::integrate_vcircle_piece</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Same as integrate_vcircle_piece(double, double, double, double, double, double) but with either the left or the right boundary coinciding with the cell's. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_vcircle_piece_dddddb.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
 
</div>
</div>
<a id="a09108db5dc9364d2525d940bfcdb3dc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09108db5dc9364d2525d940bfcdb3dc9">&#9670;&nbsp;</a></span>integrate_vcircle_piece() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PiecewiseCell::integrate_vcircle_piece</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Same as integrate_vcircle_piece(double, double, double, double, double, double) but with the horizontal boundary coinciding with the cell wall inside the circle of the boundinc arc. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_vcircle_piece_ddddd.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
 
</div>
</div>
<a id="a03b00774ea8e17e62dc44c85e2778177"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03b00774ea8e17e62dc44c85e2778177">&#9670;&nbsp;</a></span>integrate_vcircle_piece() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double PSF::PiecewiseBicubicCell::integrate_vcircle_piece </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xmin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xmax</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>ybound</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>radius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>circle_x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>circle_y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Integrate the intensity over a region bounded by one horizontal, two vertical lines and an arc that intersects the two horizontal lines. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_vcircle_piece_dddddd.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
<p>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">xmin</td><td>The left boundary of the region. </td></tr>
    <tr><td class="paramname">xmax</td><td>The right boundary of the region. </td></tr>
    <tr><td class="paramname">ybound</td><td>The straight horizontal boundary of the region. </td></tr>
    <tr><td class="paramname">radius</td><td>The radius of the circle the bounding arc is part of. </td></tr>
    <tr><td class="paramname">circle_x</td><td>The x coordinate of the circle center relative to the cell center. </td></tr>
    <tr><td class="paramname">circle_y</td><td>The y coordinate of the circle center relative to the cell center. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classPSF_1_1PiecewiseCell.xhtml#ac421496a8f1d44b73356285431a0e40b">PSF::PiecewiseCell</a>.</p>

</div>
</div>
<a id="a2b7a3e8ab208526f950038b021617a9c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b7a3e8ab208526f950038b021617a9c">&#9670;&nbsp;</a></span>integrate_vcircle_piece() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PiecewiseCell::integrate_vcircle_piece</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Integrate the intensity over a region bounded by one horizontal, two vertical lines and an arc that intersects the two horizontal lines. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_vcircle_piece_dddddd.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
<p>. </p>

</div>
</div>
<a id="ac1dd68c46ec936dae9930231cc47d618"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1dd68c46ec936dae9930231cc47d618">&#9670;&nbsp;</a></span>integrate_vcircle_piece() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PiecewiseCell::integrate_vcircle_piece</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Same as integrate_vcircle_piece(double, double, double, double, double, double) but with both the left and the right boundary coinciding with the cell's. </p>
<div class="image">
<img src="PiecewisePSFCell_integrate_vcircle_piece_dddd.png" alt=""/>
<div class="caption">
The area being integrated along with the meaning of all function arguments.</div></div>
 
</div>
</div>
<a id="a2a4d0279efbade1bc277af4fb385c53e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a4d0279efbade1bc277af4fb385c53e">&#9670;&nbsp;</a></span>operator()() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual double PSF::PiecewiseBicubicCell::operator() </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the value of the intensity at the given position relative to the bottom left cell corner. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>The horizontal offset from the left cell wall where the intensity should be returned </td></tr>
    <tr><td class="paramname">y</td><td>The vertical offset from the bottom cell wall where the intensity should be returned </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classPSF_1_1PiecewiseCell.xhtml#aa6be48a3aa46339f01cff9cdee2a64e8">PSF::PiecewiseCell</a>.</p>

</div>
</div>
<a id="ad2b3580c7255f12bbc68f16b21662409"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2b3580c7255f12bbc68f16b21662409">&#9670;&nbsp;</a></span>operator()() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::valarray&lt; double &gt; PSF::PiecewiseBicubicCell::operator() </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::valarray&lt; double &gt; &amp;&#160;</td>
          <td class="paramname"><em>coef_sets</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the value of the intensity at the given position relative to the bottom left cell corner. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>The horizontal offset from the left cell wall where the intensity should be returned </td></tr>
    <tr><td class="paramname">y</td><td>The vertical offset from the bottom cell wall where the intensity should be returned </td></tr>
    <tr><td class="paramname">coef_sets</td><td>The sets of coefficients to compute the intensity for. Each set must contain 16 coefficients and the sets are concatenated. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classPSF_1_1PiecewiseCell.xhtml#af0c5c689d4e1425243a4f289ddd0e52a">PSF::PiecewiseCell</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="adb31daeec75ed8b6146dd256bb0f210b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb31daeec75ed8b6146dd256bb0f210b">&#9670;&nbsp;</a></span>__coef</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::valarray&lt;double&gt; PSF::PiecewiseBicubicCell::__coef</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The sets of polynomial coefficients. </p>
<p>The coefficient in front of \(x^m y^n\) is __coef[m+4*n]. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/kpenev/projects/git/AstroWISP/doc_src/PSF/<a class="el" href="PiecewiseBicubicCell_8h_source.xhtml">PiecewiseBicubicCell.h</a></li>
<li>/home/kpenev/projects/git/AstroWISP/doc_src/PSF/<a class="el" href="PiecewiseBicubicCell_8cpp.xhtml">PiecewiseBicubicCell.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>PSF</b></li><li class="navelem"><a class="el" href="classPSF_1_1PiecewiseBicubicCell.xhtml">PiecewiseBicubicCell</a></li>
    <li class="footer">Generated on Wed Jan 15 2025 09:48:00 for Sub-Pixel Photometry by <a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
