<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.20"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Sub-Pixel Photometry: FitPSF::SDKSource&lt; SUBPIX_TYPE &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Sub-Pixel Photometry
   </div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.svg"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.20 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classFitPSF_1_1SDKSource.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classFitPSF_1_1SDKSource-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">FitPSF::SDKSource&lt; SUBPIX_TYPE &gt; Class Template Reference<div class="ingroups"><a class="el" href="group__FitPSF.xhtml">FitPSF</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>A PSF fitting source class based on a LocalPolynomialPSF.  
 <a href="classFitPSF_1_1SDKSource.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="FitPSF_2SDKSource_8h_source.xhtml">SDKSource.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for FitPSF::SDKSource&lt; SUBPIX_TYPE &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="classFitPSF_1_1SDKSource__inherit__graph.png" border="0" usemap="#aFitPSF_1_1SDKSource_3_01SUBPIX__TYPE_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="FitPSF_1_1SDKSource_3_01SUBPIX__TYPE_01_4_inherit__map" id="aFitPSF_1_1SDKSource_3_01SUBPIX__TYPE_01_4_inherit__map">
<area shape="rect" title="A PSF fitting source class based on a LocalPolynomialPSF." alt="" coords="23,1714,220,1917"/>
<area shape="rect" href="classFitPSF_1_1SDKSourceBase.xhtml" title="An abstract class that defines the minimum requirements of a source to participate in the fitting for..." alt="" coords="15,1308,228,1665"/>
<area shape="rect" href="classFitPSF_1_1Source.xhtml" title=" " alt="" coords="5,665,238,1259"/>
<area shape="rect" href="classFitPSF_1_1Source.xhtml" title="An abstract base class for sources which participate in PSF fitting." alt="" coords="5,5,238,600"/>
</map>
</div>
<div class="dynheader">
Collaboration diagram for FitPSF::SDKSource&lt; SUBPIX_TYPE &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="classFitPSF_1_1SDKSource__coll__graph.png" border="0" usemap="#aFitPSF_1_1SDKSource_3_01SUBPIX__TYPE_01_4_coll__map" alt="Collaboration graph"/></div>
<map name="FitPSF_1_1SDKSource_3_01SUBPIX__TYPE_01_4_coll__map" id="aFitPSF_1_1SDKSource_3_01SUBPIX__TYPE_01_4_coll__map">
<area shape="rect" title="A PSF fitting source class based on a LocalPolynomialPSF." alt="" coords="114,2033,311,2237"/>
<area shape="rect" href="classFitPSF_1_1SDKSourceBase.xhtml" title="An abstract class that defines the minimum requirements of a source to participate in the fitting for..." alt="" coords="106,1628,319,1984"/>
<area shape="rect" href="classFitPSF_1_1Source.xhtml" title=" " alt="" coords="96,1018,329,1578"/>
<area shape="rect" href="classCore_1_1Flux.xhtml" title="A class representing the flux measurement for a source, including an error estimate and a flag." alt="" coords="56,56,151,277"/>
<area shape="rect" href="classFitPSF_1_1Source.xhtml" title="An abstract base class for sources which participate in PSF fitting." alt="" coords="151,393,383,953"/>
<area shape="rect" href="classCore_1_1SubPixelMap.xhtml" title="The base class for all sub&#45;pixel maps." alt="" coords="218,5,378,328"/>
</map>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5980b6132dd8e9327e1d0a80f7152c75"><td class="memTemplParams" colspan="2">template&lt;class EIGEN_MATRIX &gt; </td></tr>
<tr class="memitem:a5980b6132dd8e9327e1d0a80f7152c75"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSource.xhtml#a5980b6132dd8e9327e1d0a80f7152c75">SDKSource</a> (const <a class="el" href="classCore_1_1SourceID.xhtml">Core::SourceID</a> &amp;id, double x, double y, const <a class="el" href="classBackground_1_1Source.xhtml">Background::Source</a> &amp;background, const <a class="el" href="classCore_1_1Image.xhtml">Core::Image</a>&lt; double &gt; &amp;observed_image, const std::string &amp;output_fname, EIGEN_MATRIX &amp;source_assignment, double gain, double alpha, int source_id, double max_circular_aperture=0, bool <a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#a10652f38c0ec83e70ece2d369d06864a">calculate_first_deriv</a>=false, bool <a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#a9f44fb5f8ba88435615dca7d4cc0794e">calculate_second_deriv</a>=false)</td></tr>
<tr class="memdesc:a5980b6132dd8e9327e1d0a80f7152c75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identify the pixels which belong to a source.  <a href="classFitPSF_1_1SDKSource.xhtml#a5980b6132dd8e9327e1d0a80f7152c75">More...</a><br /></td></tr>
<tr class="separator:a5980b6132dd8e9327e1d0a80f7152c75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2da305338d78f0bda253d259f4aa210a"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSource.xhtml#a2da305338d78f0bda253d259f4aa210a">pixel_psf</a> (<a class="el" href="EllipticalGaussianIntegralByOrder_8h.xhtml#a9779b56088bafa3895c2f587f5e39a7f">PSF::SDKDerivative</a> deriv=PSF::NO_DERIV) const</td></tr>
<tr class="memdesc:a2da305338d78f0bda253d259f4aa210a"><td class="mdescLeft">&#160;</td><td class="mdescRight">The integral of the normalized PSF over the current pixel and its derivatives.  <a href="classFitPSF_1_1SDKSource.xhtml#a2da305338d78f0bda253d259f4aa210a">More...</a><br /></td></tr>
<tr class="separator:a2da305338d78f0bda253d259f4aa210a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7887ddefe473c506458ee74394fb3c8d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSource.xhtml#a7887ddefe473c506458ee74394fb3c8d">set_PSF</a> (const <a class="el" href="classPSF_1_1EllipticalGaussian.xhtml">PSF::EllipticalGaussian</a> &amp;psf, const SUBPIX_TYPE &amp;<a class="el" href="classFitPSF_1_1Source.xhtml#a0661658d593824f0bcd4d19cf3eccb80">subpix_map</a>)</td></tr>
<tr class="memdesc:a7887ddefe473c506458ee74394fb3c8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recalculates the integrals of the PSF over the source pixels using the given PSF and sub-pixel map.  <a href="classFitPSF_1_1SDKSource.xhtml#a7887ddefe473c506458ee74394fb3c8d">More...</a><br /></td></tr>
<tr class="separator:a7887ddefe473c506458ee74394fb3c8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7500f60802b90cca347f2b782391915"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSource.xhtml#ac7500f60802b90cca347f2b782391915">next_pixel</a> ()</td></tr>
<tr class="memdesc:ac7500f60802b90cca347f2b782391915"><td class="mdescLeft">&#160;</td><td class="mdescRight">Advance to the next pixel of the source returning true if it is not past the last pixel.  <a href="classFitPSF_1_1SDKSource.xhtml#ac7500f60802b90cca347f2b782391915">More...</a><br /></td></tr>
<tr class="separator:ac7500f60802b90cca347f2b782391915"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af017d030364929ad145fcd855e4b6371"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSource.xhtml#af017d030364929ad145fcd855e4b6371">restart_pixel_iteration</a> ()</td></tr>
<tr class="memdesc:af017d030364929ad145fcd855e4b6371"><td class="mdescLeft">&#160;</td><td class="mdescRight">Restarts the iteration over pixels from the beginning.  <a href="classFitPSF_1_1SDKSource.xhtml#af017d030364929ad145fcd855e4b6371">More...</a><br /></td></tr>
<tr class="separator:af017d030364929ad145fcd855e4b6371"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classFitPSF_1_1SDKSourceBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classFitPSF_1_1SDKSourceBase')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml">FitPSF::SDKSourceBase</a></td></tr>
<tr class="memitem:af9dcccaf5743ff449b6f593c5a1a037d inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memTemplParams" colspan="2">template&lt;class EIGEN_MATRIX &gt; </td></tr>
<tr class="memitem:af9dcccaf5743ff449b6f593c5a1a037d inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#af9dcccaf5743ff449b6f593c5a1a037d">SDKSourceBase</a> (const <a class="el" href="classCore_1_1SourceID.xhtml">Core::SourceID</a> &amp;id, double x0, double y0, const <a class="el" href="classBackground_1_1Source.xhtml">Background::Source</a> &amp;background, const <a class="el" href="classCore_1_1Image.xhtml">Core::Image</a>&lt; double &gt; &amp;observed_image, EIGEN_MATRIX &amp;source_assignment, double gain, double alpha, int source_id, const std::string &amp;output_fname, bool <a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#a10652f38c0ec83e70ece2d369d06864a">calculate_first_deriv</a>=false, bool <a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#a9f44fb5f8ba88435615dca7d4cc0794e">calculate_second_deriv</a>=false, double max_circular_aperture=0)</td></tr>
<tr class="memdesc:af9dcccaf5743ff449b6f593c5a1a037d inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a source for fitting an elliptical gaussian PSF model.  <a href="classFitPSF_1_1SDKSourceBase.xhtml#af9dcccaf5743ff449b6f593c5a1a037d">More...</a><br /></td></tr>
<tr class="separator:af9dcccaf5743ff449b6f593c5a1a037d inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82d58a04f19e0f9fee5dcbbf9a052e9a inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#a82d58a04f19e0f9fee5dcbbf9a052e9a">enable_first_deriv</a> ()</td></tr>
<tr class="memdesc:a82d58a04f19e0f9fee5dcbbf9a052e9a inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables the calculation of the first order derivatives of the amplitude and \(\chi^2\).  <a href="classFitPSF_1_1SDKSourceBase.xhtml#a82d58a04f19e0f9fee5dcbbf9a052e9a">More...</a><br /></td></tr>
<tr class="separator:a82d58a04f19e0f9fee5dcbbf9a052e9a inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbbd5dbb7295534fbaac2e721e52e2de inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#abbbd5dbb7295534fbaac2e721e52e2de">disable_first_deriv</a> ()</td></tr>
<tr class="memdesc:abbbd5dbb7295534fbaac2e721e52e2de inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables the calculation of the first order derivatives of the amplitude and \(\chi^2\).  <a href="classFitPSF_1_1SDKSourceBase.xhtml#abbbd5dbb7295534fbaac2e721e52e2de">More...</a><br /></td></tr>
<tr class="separator:abbbd5dbb7295534fbaac2e721e52e2de inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bd226180543d1c331bccf0ebf3af419 inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#a0bd226180543d1c331bccf0ebf3af419">enable_second_deriv</a> ()</td></tr>
<tr class="memdesc:a0bd226180543d1c331bccf0ebf3af419 inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables the calculation of the second order derivatives of the amplitude and \(\chi^2\).  <a href="classFitPSF_1_1SDKSourceBase.xhtml#a0bd226180543d1c331bccf0ebf3af419">More...</a><br /></td></tr>
<tr class="separator:a0bd226180543d1c331bccf0ebf3af419 inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ecc6f20a45c9b4862a8599a8e3df73f inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#a1ecc6f20a45c9b4862a8599a8e3df73f">disable_second_deriv</a> ()</td></tr>
<tr class="memdesc:a1ecc6f20a45c9b4862a8599a8e3df73f inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables the calculation of the second order derivatives of the amplitude and \(\chi^2\).  <a href="classFitPSF_1_1SDKSourceBase.xhtml#a1ecc6f20a45c9b4862a8599a8e3df73f">More...</a><br /></td></tr>
<tr class="separator:a1ecc6f20a45c9b4862a8599a8e3df73f inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10652f38c0ec83e70ece2d369d06864a inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#a10652f38c0ec83e70ece2d369d06864a">calculate_first_deriv</a> () const</td></tr>
<tr class="memdesc:a10652f38c0ec83e70ece2d369d06864a inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Should first order derivatives of the amplited and \(\chi^2\) be calculated.  <a href="classFitPSF_1_1SDKSourceBase.xhtml#a10652f38c0ec83e70ece2d369d06864a">More...</a><br /></td></tr>
<tr class="separator:a10652f38c0ec83e70ece2d369d06864a inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f44fb5f8ba88435615dca7d4cc0794e inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#a9f44fb5f8ba88435615dca7d4cc0794e">calculate_second_deriv</a> () const</td></tr>
<tr class="memdesc:a9f44fb5f8ba88435615dca7d4cc0794e inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Should second order derivatives of the amplited and \(\chi^2\) be calculated.  <a href="classFitPSF_1_1SDKSourceBase.xhtml#a9f44fb5f8ba88435615dca7d4cc0794e">More...</a><br /></td></tr>
<tr class="separator:a9f44fb5f8ba88435615dca7d4cc0794e inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada6c4d93ab4e19b702550941e6b36fdb inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#ada6c4d93ab4e19b702550941e6b36fdb">amplitude</a> (<a class="el" href="EllipticalGaussianIntegralByOrder_8h.xhtml#a9779b56088bafa3895c2f587f5e39a7f">PSF::SDKDerivative</a> deriv=PSF::NO_DERIV)</td></tr>
<tr class="memdesc:ada6c4d93ab4e19b702550941e6b36fdb inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amplitude of the last scaling fit.  <a href="classFitPSF_1_1SDKSourceBase.xhtml#ada6c4d93ab4e19b702550941e6b36fdb">More...</a><br /></td></tr>
<tr class="separator:ada6c4d93ab4e19b702550941e6b36fdb inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dfee1ad5e405dbad06825ace969ab77 inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#a8dfee1ad5e405dbad06825ace969ab77">chi2</a> (<a class="el" href="EllipticalGaussianIntegralByOrder_8h.xhtml#a9779b56088bafa3895c2f587f5e39a7f">PSF::SDKDerivative</a> deriv) const</td></tr>
<tr class="memdesc:a8dfee1ad5e405dbad06825ace969ab77 inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the \(\chi^2\) of the last scaling fit or any derivative.  <a href="classFitPSF_1_1SDKSourceBase.xhtml#a8dfee1ad5e405dbad06825ace969ab77">More...</a><br /></td></tr>
<tr class="separator:a8dfee1ad5e405dbad06825ace969ab77 inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeaf50e872f908a76fbb40ad101e735a8 inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#aeaf50e872f908a76fbb40ad101e735a8">chi2</a> () const</td></tr>
<tr class="memdesc:aeaf50e872f908a76fbb40ad101e735a8 inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the \(\chi^2\) of the last scaling fit.  <a href="classFitPSF_1_1SDKSourceBase.xhtml#aeaf50e872f908a76fbb40ad101e735a8">More...</a><br /></td></tr>
<tr class="separator:aeaf50e872f908a76fbb40ad101e735a8 inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb9f1fea71e8129e6ec073f6412d1a58 inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memItemLeft" align="right" valign="top">const std::valarray&lt; double &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#afb9f1fea71e8129e6ec073f6412d1a58">chi2_all_deriv</a> () const</td></tr>
<tr class="memdesc:afb9f1fea71e8129e6ec073f6412d1a58 inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the \(\chi^2\) of the last scaling fit and its up to second order derivatives.  <a href="classFitPSF_1_1SDKSourceBase.xhtml#afb9f1fea71e8129e6ec073f6412d1a58">More...</a><br /></td></tr>
<tr class="separator:afb9f1fea71e8129e6ec073f6412d1a58 inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80a70e5883c2323f083f51f606f3278e inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#a80a70e5883c2323f083f51f606f3278e">fit_scaling</a> (const <a class="el" href="classPSF_1_1EllipticalGaussian.xhtml">PSF::EllipticalGaussian</a> &amp;psf)</td></tr>
<tr class="memdesc:a80a70e5883c2323f083f51f606f3278e inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fits for the best scaling between the PSF integrals over pixels and the measured pixel values.  <a href="classFitPSF_1_1SDKSourceBase.xhtml#a80a70e5883c2323f083f51f606f3278e">More...</a><br /></td></tr>
<tr class="separator:a80a70e5883c2323f083f51f606f3278e inherit pub_methods_classFitPSF_1_1SDKSourceBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classFitPSF_1_1Source"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classFitPSF_1_1Source')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classFitPSF_1_1Source.xhtml">FitPSF::Source&lt; PSF::EllipticalGaussian &gt;</a></td></tr>
<tr class="memitem:ad81ba34ce1bb26a76a78750cc70dc7a7 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#ad81ba34ce1bb26a76a78750cc70dc7a7">Source</a> (const <a class="el" href="classCore_1_1SourceID.xhtml">Core::SourceID</a> &amp;id, double x0, double y0, double gain, const <a class="el" href="classBackground_1_1Source.xhtml">Background::Source</a> &amp;background, int <a class="el" href="classFitPSF_1_1Source.xhtml#afc2a8d2b714c3f8d3976f8481d53c426">source_assignment_id</a>, const <a class="el" href="classCore_1_1SubPixelMap.xhtml">Core::SubPixelMap</a> *<a class="el" href="classFitPSF_1_1Source.xhtml#a0661658d593824f0bcd4d19cf3eccb80">subpix_map</a>, unsigned <a class="el" href="classFitPSF_1_1Source.xhtml#a3d0d0eb927dc51fe88c1aa4381a6e2e1">image_id</a>, const std::string &amp;output_fname)</td></tr>
<tr class="memdesc:ad81ba34ce1bb26a76a78750cc70dc7a7 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a PSF fitting source.  <a href="classFitPSF_1_1Source.xhtml#ad81ba34ce1bb26a76a78750cc70dc7a7">More...</a><br /></td></tr>
<tr class="separator:ad81ba34ce1bb26a76a78750cc70dc7a7 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2984d5e2950a253812df473166664961 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a2984d5e2950a253812df473166664961">ready_to_fit</a> () const</td></tr>
<tr class="memdesc:a2984d5e2950a253812df473166664961 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is this source ready for fitting?  <a href="classFitPSF_1_1Source.xhtml#a2984d5e2950a253812df473166664961">More...</a><br /></td></tr>
<tr class="separator:a2984d5e2950a253812df473166664961 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a094f74d4ca1872d25d0b81ea06cb05 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a3a094f74d4ca1872d25d0b81ea06cb05">background_electrons</a> () const</td></tr>
<tr class="memdesc:a3a094f74d4ca1872d25d0b81ea06cb05 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">The background under the source in electrons.  <a href="classFitPSF_1_1Source.xhtml#a3a094f74d4ca1872d25d0b81ea06cb05">More...</a><br /></td></tr>
<tr class="separator:a3a094f74d4ca1872d25d0b81ea06cb05 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33653767e3a9ac908dcfcfbb505e3b2a inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a33653767e3a9ac908dcfcfbb505e3b2a">set_background_electrons</a> (double value)</td></tr>
<tr class="memdesc:a33653767e3a9ac908dcfcfbb505e3b2a inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the background under the source in electrons.  <a href="classFitPSF_1_1Source.xhtml#a33653767e3a9ac908dcfcfbb505e3b2a">More...</a><br /></td></tr>
<tr class="separator:a33653767e3a9ac908dcfcfbb505e3b2a inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6632290150c17bc71077fa3dde5923d0 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a6632290150c17bc71077fa3dde5923d0">background_electrons_variance</a> () const</td></tr>
<tr class="memdesc:a6632290150c17bc71077fa3dde5923d0 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">The variance of the background under the source in electrons squared.  <a href="classFitPSF_1_1Source.xhtml#a6632290150c17bc71077fa3dde5923d0">More...</a><br /></td></tr>
<tr class="separator:a6632290150c17bc71077fa3dde5923d0 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99ae6e12f5f92f528b22eae9b4e8714b inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a99ae6e12f5f92f528b22eae9b4e8714b">set_background_electrons_variance</a> (double value)</td></tr>
<tr class="memdesc:a99ae6e12f5f92f528b22eae9b4e8714b inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">A reference to the variance of the background under the source in electrons squared.  <a href="classFitPSF_1_1Source.xhtml#a99ae6e12f5f92f528b22eae9b4e8714b">More...</a><br /></td></tr>
<tr class="separator:a99ae6e12f5f92f528b22eae9b4e8714b inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2b39a7b53cbb6de512aadc1513f076a inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#ad2b39a7b53cbb6de512aadc1513f076a">background_pixels</a> () const</td></tr>
<tr class="memdesc:ad2b39a7b53cbb6de512aadc1513f076a inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of pixels used when measuring the source background.  <a href="classFitPSF_1_1Source.xhtml#ad2b39a7b53cbb6de512aadc1513f076a">More...</a><br /></td></tr>
<tr class="separator:ad2b39a7b53cbb6de512aadc1513f076a inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a897f5db8b602546167bb308aaf9c5fb7 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">unsigned &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a897f5db8b602546167bb308aaf9c5fb7">background_pixels</a> ()</td></tr>
<tr class="memdesc:a897f5db8b602546167bb308aaf9c5fb7 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">A reference to the number of pixels used when measuring the source background.  <a href="classFitPSF_1_1Source.xhtml#a897f5db8b602546167bb308aaf9c5fb7">More...</a><br /></td></tr>
<tr class="separator:a897f5db8b602546167bb308aaf9c5fb7 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b3a38bb59b57a5fbda5d9f4ee37c2e2 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="classCore_1_1Flux.xhtml">Core::Flux</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a0b3a38bb59b57a5fbda5d9f4ee37c2e2">calculate_mask_flux</a> (const <a class="el" href="classPSF_1_1PSF.xhtml">PSF::PSF</a> &amp;psf)=0</td></tr>
<tr class="memdesc:a0b3a38bb59b57a5fbda5d9f4ee37c2e2 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate and return the __mask_flux using the given PSF/PRF.  <a href="classFitPSF_1_1Source.xhtml#a0b3a38bb59b57a5fbda5d9f4ee37c2e2">More...</a><br /></td></tr>
<tr class="separator:a0b3a38bb59b57a5fbda5d9f4ee37c2e2 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c2341ee016cd137ae662261704465b2 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="classCore_1_1Flux.xhtml">Core::Flux</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a6c2341ee016cd137ae662261704465b2">mask_flux</a> () const</td></tr>
<tr class="memdesc:a6c2341ee016cd137ae662261704465b2 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">See __mask_flux (filled in while fitting).  <a href="classFitPSF_1_1Source.xhtml#a6c2341ee016cd137ae662261704465b2">More...</a><br /></td></tr>
<tr class="separator:a6c2341ee016cd137ae662261704465b2 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1698dcf0ab31a7549f6e123706611df inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classCore_1_1Flux.xhtml">Core::Flux</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#ab1698dcf0ab31a7549f6e123706611df">mask_flux</a> ()</td></tr>
<tr class="memdesc:ab1698dcf0ab31a7549f6e123706611df inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">See __mask_flux (filled in while fitting).  <a href="classFitPSF_1_1Source.xhtml#ab1698dcf0ab31a7549f6e123706611df">More...</a><br /></td></tr>
<tr class="separator:ab1698dcf0ab31a7549f6e123706611df inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a408773f2626607a233caa4fc4cda7942 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">virtual double &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a408773f2626607a233caa4fc4cda7942">chi2</a> ()</td></tr>
<tr class="memdesc:a408773f2626607a233caa4fc4cda7942 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">The \(\chi^2\) of the last scaling fit.  <a href="classFitPSF_1_1Source.xhtml#a408773f2626607a233caa4fc4cda7942">More...</a><br /></td></tr>
<tr class="separator:a408773f2626607a233caa4fc4cda7942 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3beb820f4009632390aab590166fecd0 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a3beb820f4009632390aab590166fecd0">chi2</a> () const</td></tr>
<tr class="memdesc:a3beb820f4009632390aab590166fecd0 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read-only \(\chi^2\) of the last scaling fit.  <a href="classFitPSF_1_1Source.xhtml#a3beb820f4009632390aab590166fecd0">More...</a><br /></td></tr>
<tr class="separator:a3beb820f4009632390aab590166fecd0 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a5509962948ad343b0413026bc97450 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a6a5509962948ad343b0413026bc97450">reduced_chi2</a> () const</td></tr>
<tr class="memdesc:a6a5509962948ad343b0413026bc97450 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">The reduced \(\chi^2\) of the last scaling fit.  <a href="classFitPSF_1_1Source.xhtml#a6a5509962948ad343b0413026bc97450">More...</a><br /></td></tr>
<tr class="separator:a6a5509962948ad343b0413026bc97450 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1a4039da13f91f148a34712867f1f79 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">virtual unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#ae1a4039da13f91f148a34712867f1f79">saturated_pixel_count</a> () const=0</td></tr>
<tr class="memdesc:ae1a4039da13f91f148a34712867f1f79 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of saturated pixels assigned to this source.  <a href="classFitPSF_1_1Source.xhtml#ae1a4039da13f91f148a34712867f1f79">More...</a><br /></td></tr>
<tr class="separator:ae1a4039da13f91f148a34712867f1f79 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69bf82e737e9630d357a79e738d4a7b6 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">virtual double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a69bf82e737e9630d357a79e738d4a7b6">merit</a> () const=0</td></tr>
<tr class="memdesc:a69bf82e737e9630d357a79e738d4a7b6 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">the sum of (background excess)/(pixel variance+background variance) of the individual non-saturated pixels assigned to this source.  <a href="classFitPSF_1_1Source.xhtml#a69bf82e737e9630d357a79e738d4a7b6">More...</a><br /></td></tr>
<tr class="separator:a69bf82e737e9630d357a79e738d4a7b6 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d92fee231a89bb5f920e3af435379fe inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="Core_2Typedefs_8h.xhtml#a0284392b810d69336f74bd704daa5de8">Core::PhotometryFlag</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a0d92fee231a89bb5f920e3af435379fe">quality_flag</a> () const=0</td></tr>
<tr class="memdesc:a0d92fee231a89bb5f920e3af435379fe inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">The worst quality flag for any pixel assigned to the source.  <a href="classFitPSF_1_1Source.xhtml#a0d92fee231a89bb5f920e3af435379fe">More...</a><br /></td></tr>
<tr class="separator:a0d92fee231a89bb5f920e3af435379fe inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc2a8d2b714c3f8d3976f8481d53c426 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#afc2a8d2b714c3f8d3976f8481d53c426">source_assignment_id</a> () const</td></tr>
<tr class="memdesc:afc2a8d2b714c3f8d3976f8481d53c426 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">The id the source was assigned in the source_assignment array.  <a href="classFitPSF_1_1Source.xhtml#afc2a8d2b714c3f8d3976f8481d53c426">More...</a><br /></td></tr>
<tr class="separator:afc2a8d2b714c3f8d3976f8481d53c426 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0661658d593824f0bcd4d19cf3eccb80 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classCore_1_1SubPixelMap.xhtml">Core::SubPixelMap</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a0661658d593824f0bcd4d19cf3eccb80">subpix_map</a> () const</td></tr>
<tr class="memdesc:a0661658d593824f0bcd4d19cf3eccb80 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Teh sub-pixel map supplied on input.  <a href="classFitPSF_1_1Source.xhtml#a0661658d593824f0bcd4d19cf3eccb80">More...</a><br /></td></tr>
<tr class="separator:a0661658d593824f0bcd4d19cf3eccb80 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a126796ab71dffb5f62d62b4d1c45d913 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a126796ab71dffb5f62d62b4d1c45d913">set_nonpoint</a> ()</td></tr>
<tr class="memdesc:a126796ab71dffb5f62d62b4d1c45d913 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reject the source as non-point.  <a href="classFitPSF_1_1Source.xhtml#a126796ab71dffb5f62d62b4d1c45d913">More...</a><br /></td></tr>
<tr class="separator:a126796ab71dffb5f62d62b4d1c45d913 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadaf6a2a4f759c3e1f513be29ec8f5af inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#aadaf6a2a4f759c3e1f513be29ec8f5af">is_nonpoint</a> () const</td></tr>
<tr class="memdesc:aadaf6a2a4f759c3e1f513be29ec8f5af inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Was the source previously rejected as non-point.  <a href="classFitPSF_1_1Source.xhtml#aadaf6a2a4f759c3e1f513be29ec8f5af">More...</a><br /></td></tr>
<tr class="separator:aadaf6a2a4f759c3e1f513be29ec8f5af inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec7e039e6520031684b724dea4f9e7de inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__FitPSF.xhtml#gaf322f512b63bfe334b817be88e6c7820">SourceDropReason</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#aec7e039e6520031684b724dea4f9e7de">drop_reason</a> () const</td></tr>
<tr class="memdesc:aec7e039e6520031684b724dea4f9e7de inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">The reason the source was dropped, if it was.  <a href="classFitPSF_1_1Source.xhtml#aec7e039e6520031684b724dea4f9e7de">More...</a><br /></td></tr>
<tr class="separator:aec7e039e6520031684b724dea4f9e7de inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e3d2abe12b66a4e6b60a29c1e898885 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a9e3d2abe12b66a4e6b60a29c1e898885">drop</a> (<a class="el" href="group__FitPSF.xhtml#gaf322f512b63bfe334b817be88e6c7820">SourceDropReason</a> reason)</td></tr>
<tr class="memdesc:a9e3d2abe12b66a4e6b60a29c1e898885 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Drop this source for the given reason.  <a href="classFitPSF_1_1Source.xhtml#a9e3d2abe12b66a4e6b60a29c1e898885">More...</a><br /></td></tr>
<tr class="separator:a9e3d2abe12b66a4e6b60a29c1e898885 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d0d0eb927dc51fe88c1aa4381a6e2e1 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a3d0d0eb927dc51fe88c1aa4381a6e2e1">image_id</a> () const</td></tr>
<tr class="memdesc:a3d0d0eb927dc51fe88c1aa4381a6e2e1 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">The filename of the image from which this source was extracted.  <a href="classFitPSF_1_1Source.xhtml#a3d0d0eb927dc51fe88c1aa4381a6e2e1">More...</a><br /></td></tr>
<tr class="separator:a3d0d0eb927dc51fe88c1aa4381a6e2e1 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74033213df3938dfa2964cfef4d3dd5d inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a74033213df3938dfa2964cfef4d3dd5d">output_filename</a> () const</td></tr>
<tr class="memdesc:a74033213df3938dfa2964cfef4d3dd5d inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">The output filename where this source should be saved.  <a href="classFitPSF_1_1Source.xhtml#a74033213df3938dfa2964cfef4d3dd5d">More...</a><br /></td></tr>
<tr class="separator:a74033213df3938dfa2964cfef4d3dd5d inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2501d97ddcd0de6a52e2b65764e879a1 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a2501d97ddcd0de6a52e2b65764e879a1">psf_amplitude</a> () const</td></tr>
<tr class="memdesc:a2501d97ddcd0de6a52e2b65764e879a1 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">The amplitude of the PSF.  <a href="classFitPSF_1_1Source.xhtml#a2501d97ddcd0de6a52e2b65764e879a1">More...</a><br /></td></tr>
<tr class="separator:a2501d97ddcd0de6a52e2b65764e879a1 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5681699a6b758f1911a3c56eb70bd7d inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#aa5681699a6b758f1911a3c56eb70bd7d">set_psf_amplitude</a> (double value)</td></tr>
<tr class="memdesc:aa5681699a6b758f1911a3c56eb70bd7d inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the amplitude of the PSF to the given value.  <a href="classFitPSF_1_1Source.xhtml#aa5681699a6b758f1911a3c56eb70bd7d">More...</a><br /></td></tr>
<tr class="separator:aa5681699a6b758f1911a3c56eb70bd7d inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb38807b603ea3e25994e7688ff890da inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#adb38807b603ea3e25994e7688ff890da">set_sources_in_group</a> (unsigned source_count)</td></tr>
<tr class="memdesc:adb38807b603ea3e25994e7688ff890da inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set how many sources were in the same group as this one when amplitude was fit.  <a href="classFitPSF_1_1Source.xhtml#adb38807b603ea3e25994e7688ff890da">More...</a><br /></td></tr>
<tr class="separator:adb38807b603ea3e25994e7688ff890da inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8172c1afdac11dc12f3ed692a8a4e35f inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">Eigen::VectorXd &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a8172c1afdac11dc12f3ed692a8a4e35f">expansion_terms</a> ()</td></tr>
<tr class="memdesc:a8172c1afdac11dc12f3ed692a8a4e35f inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reference to the values of the expanion terms the PSF of the source depends on.  <a href="classFitPSF_1_1Source.xhtml#a8172c1afdac11dc12f3ed692a8a4e35f">More...</a><br /></td></tr>
<tr class="separator:a8172c1afdac11dc12f3ed692a8a4e35f inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec51f7629f0b0442c4f49001a3f62453 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">const Eigen::VectorXd &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#aec51f7629f0b0442c4f49001a3f62453">expansion_terms</a> () const</td></tr>
<tr class="memdesc:aec51f7629f0b0442c4f49001a3f62453 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">The values of the expanion terms the PSF of the source depends on.  <a href="classFitPSF_1_1Source.xhtml#aec51f7629f0b0442c4f49001a3f62453">More...</a><br /></td></tr>
<tr class="separator:aec51f7629f0b0442c4f49001a3f62453 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a236006261bc946dce216c3296a5d6fc1 inherit pub_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a236006261bc946dce216c3296a5d6fc1">fill_psf_params</a> (const Eigen::VectorXd &amp;expansion_coef, Eigen::VectorXd &amp;psf_params)</td></tr>
<tr class="memdesc:a236006261bc946dce216c3296a5d6fc1 inherit pub_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fill a vector with the PSF parameters for this source given a set of polynomial expansion coefficients.  <a href="classFitPSF_1_1Source.xhtml#a236006261bc946dce216c3296a5d6fc1">More...</a><br /></td></tr>
<tr class="separator:a236006261bc946dce216c3296a5d6fc1 inherit pub_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a5f6f8dcce0130857401c1739ea06f475"><td class="memItemLeft" align="right" valign="top">std::valarray&lt; double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSource.xhtml#a5f6f8dcce0130857401c1739ea06f475">psf_integral</a> (double x, double y, const <a class="el" href="classPSF_1_1EllipticalGaussian.xhtml">PSF::EllipticalGaussian</a> &amp;psf, const SUBPIX_TYPE &amp;<a class="el" href="classFitPSF_1_1Source.xhtml#a0661658d593824f0bcd4d19cf3eccb80">subpix_map</a>, double precision)</td></tr>
<tr class="memdesc:a5f6f8dcce0130857401c1739ea06f475"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the sub-pixel weighted integral of the given PSF over a pixel.  <a href="classFitPSF_1_1SDKSource.xhtml#a5f6f8dcce0130857401c1739ea06f475">More...</a><br /></td></tr>
<tr class="separator:a5f6f8dcce0130857401c1739ea06f475"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a0d911d3af7809b91608162fdaf7cb62f"><td class="memItemLeft" align="right" valign="top">std::list&lt; std::valarray&lt; double &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSource.xhtml#a0d911d3af7809b91608162fdaf7cb62f">__psf_pixels</a></td></tr>
<tr class="memdesc:a0d911d3af7809b91608162fdaf7cb62f"><td class="mdescLeft">&#160;</td><td class="mdescRight">The integral of the normalized PSF over all pixels belonging to the source.  <a href="classFitPSF_1_1SDKSource.xhtml#a0d911d3af7809b91608162fdaf7cb62f">More...</a><br /></td></tr>
<tr class="separator:a0d911d3af7809b91608162fdaf7cb62f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d30dbd04bd3615cb6cda835fa5c00d8"><td class="memItemLeft" align="right" valign="top">std::list&lt; std::valarray&lt; double &gt; &gt;::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSource.xhtml#a2d30dbd04bd3615cb6cda835fa5c00d8">__psf_int_iter</a></td></tr>
<tr class="memdesc:a2d30dbd04bd3615cb6cda835fa5c00d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">An iterator over the PSF integrals and their derivatives over pixels.  <a href="classFitPSF_1_1SDKSource.xhtml#a2d30dbd04bd3615cb6cda835fa5c00d8">More...</a><br /></td></tr>
<tr class="separator:a2d30dbd04bd3615cb6cda835fa5c00d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_classFitPSF_1_1SDKSourceBase"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classFitPSF_1_1SDKSourceBase')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml">FitPSF::SDKSourceBase</a></td></tr>
<tr class="memitem:a2b9150251cd9ab2f1f2a2dc4ab68845b inherit pro_methods_classFitPSF_1_1SDKSourceBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1SDKSourceBase.xhtml#a2b9150251cd9ab2f1f2a2dc4ab68845b">fit_scaling</a> (double measured2_term, const std::valarray&lt; double &gt; &amp;numerator, const std::valarray&lt; double &gt; &amp;denominator)</td></tr>
<tr class="memdesc:a2b9150251cd9ab2f1f2a2dc4ab68845b inherit pro_methods_classFitPSF_1_1SDKSourceBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the values and, if requested, derivatives of \(\chi^2\) and the amplitude from the given quantities.  <a href="classFitPSF_1_1SDKSourceBase.xhtml#a2b9150251cd9ab2f1f2a2dc4ab68845b">More...</a><br /></td></tr>
<tr class="separator:a2b9150251cd9ab2f1f2a2dc4ab68845b inherit pro_methods_classFitPSF_1_1SDKSourceBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classFitPSF_1_1Source"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classFitPSF_1_1Source')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classFitPSF_1_1Source.xhtml">FitPSF::Source&lt; PSF::EllipticalGaussian &gt;</a></td></tr>
<tr class="memitem:a6840b9ccbbba192d2cbb617d82846a6e inherit pro_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a6840b9ccbbba192d2cbb617d82846a6e">pixel_excess_reductions</a> (const Eigen::VectorXd &amp;to_dot_with, double &amp;dot_product, double &amp;excess_sum_squares)=0</td></tr>
<tr class="memdesc:a6840b9ccbbba192d2cbb617d82846a6e inherit pro_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculate the dot of pixel excesses with the given quantity as well as with itself.  <a href="classFitPSF_1_1Source.xhtml#a6840b9ccbbba192d2cbb617d82846a6e">More...</a><br /></td></tr>
<tr class="separator:a6840b9ccbbba192d2cbb617d82846a6e inherit pro_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a493c3c39cc78ef30bd199d5f66f65478 inherit pro_methods_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a493c3c39cc78ef30bd199d5f66f65478">fit_flux</a> (const Eigen::VectorXd &amp;estimated_excesses)</td></tr>
<tr class="memdesc:a493c3c39cc78ef30bd199d5f66f65478 inherit pro_methods_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fit for the flux of the source and return the change from its previous value.  <a href="classFitPSF_1_1Source.xhtml#a493c3c39cc78ef30bd199d5f66f65478">More...</a><br /></td></tr>
<tr class="separator:a493c3c39cc78ef30bd199d5f66f65478 inherit pro_methods_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classFitPSF_1_1Source"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classFitPSF_1_1Source')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classFitPSF_1_1Source.xhtml">FitPSF::Source&lt; PSF::EllipticalGaussian &gt;</a></td></tr>
<tr class="memitem:a0a782e0369f7cddf89e2ff5ed7f57e59 inherit pro_attribs_classFitPSF_1_1Source"><td class="memItemLeft" align="right" valign="top">std::list&lt; <a class="el" href="classFitPSF_1_1AmplitudeSaturatedPixel.xhtml">AmplitudeSaturatedPixel</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Source.xhtml#a0a782e0369f7cddf89e2ff5ed7f57e59">_saturated_pixels</a></td></tr>
<tr class="memdesc:a0a782e0369f7cddf89e2ff5ed7f57e59 inherit pro_attribs_classFitPSF_1_1Source"><td class="mdescLeft">&#160;</td><td class="mdescRight">A structure holding all necessary information about saturated pixels.  <a href="classFitPSF_1_1Source.xhtml#a0a782e0369f7cddf89e2ff5ed7f57e59">More...</a><br /></td></tr>
<tr class="separator:a0a782e0369f7cddf89e2ff5ed7f57e59 inherit pro_attribs_classFitPSF_1_1Source"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class SUBPIX_TYPE&gt;<br />
class FitPSF::SDKSource&lt; SUBPIX_TYPE &gt;</h3>

<p>A PSF fitting source class based on a LocalPolynomialPSF. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a5980b6132dd8e9327e1d0a80f7152c75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5980b6132dd8e9327e1d0a80f7152c75">&#9670;&nbsp;</a></span>SDKSource()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SUBPIX_TYPE &gt; </div>
<div class="memtemplate">
template&lt;class EIGEN_MATRIX &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classFitPSF_1_1SDKSource.xhtml">FitPSF::SDKSource</a>&lt; SUBPIX_TYPE &gt;::<a class="el" href="classFitPSF_1_1SDKSource.xhtml">SDKSource</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classCore_1_1SourceID.xhtml">Core::SourceID</a> &amp;&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classBackground_1_1Source.xhtml">Background::Source</a> &amp;&#160;</td>
          <td class="paramname"><em>background</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classCore_1_1Image.xhtml">Core::Image</a>&lt; double &gt; &amp;&#160;</td>
          <td class="paramname"><em>observed_image</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>output_fname</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">EIGEN_MATRIX &amp;&#160;</td>
          <td class="paramname"><em>source_assignment</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>gain</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>alpha</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>source_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>max_circular_aperture</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>calculate_first_deriv</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>calculate_second_deriv</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Identify the pixels which belong to a source. </p>
<p>Identify the pixels which belong to the source centered at (x,y). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>The I.D. of the source for which to identify pixels. </td></tr>
    <tr><td class="paramname">x</td><td>The abscissa coordinate of the source center. </td></tr>
    <tr><td class="paramname">y</td><td>The oordinate coordinate of the source center. </td></tr>
    <tr><td class="paramname">background</td><td>The background under the pixel (in ADU) </td></tr>
    <tr><td class="paramname">observed_image</td><td>The actual image we are deriving a PSF map for </td></tr>
    <tr><td class="paramname">output_fname</td><td>See <a class="el" href="classFitPSF_1_1Source.xhtml" title="An abstract base class for sources which participate in PSF fitting.">Source</a> constructor. </td></tr>
    <tr><td class="paramname">source_assignment</td><td>A two dimensional array which keeps track of what pixels of the input image are assigned to what source. On exit it is updated with the pixels belonging to the newly constructed source. </td></tr>
    <tr><td class="paramname">gain</td><td>The gain (electrons per ADU) in the observed image </td></tr>
    <tr><td class="paramname">alpha</td><td>How much above the background a pixel needs to be in order to be allocated to this source (the alpha parameter in the description) </td></tr>
    <tr><td class="paramname">source_id</td><td>The id to assign to this source in the source_assignment array </td></tr>
    <tr><td class="paramname">max_circular_aperture</td><td>If nonzero impose a circular aperture for the source no larger than the given value (otherwise uses only pixels inconsistent with the background at the prescribed by alpha level). The size of the circular aperture is the smallest size possible that encapsulates all pixels that pass the alpha test. </td></tr>
    <tr><td class="paramname">calculate_first_deriv</td><td>Should first order derivatives of the integral of the PSF over a pixel be calculated. </td></tr>
    <tr><td class="paramname">calculate_second_deriv</td><td>Should second order derivatives of the integral of the PSF over a pixel be calculated. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ac7500f60802b90cca347f2b782391915"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7500f60802b90cca347f2b782391915">&#9670;&nbsp;</a></span>next_pixel()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SUBPIX_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="classFitPSF_1_1SDKSource.xhtml">FitPSF::SDKSource</a>&lt; SUBPIX_TYPE &gt;::next_pixel </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Advance to the next pixel of the source returning true if it is not past the last pixel. </p>

</div>
</div>
<a id="a2da305338d78f0bda253d259f4aa210a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2da305338d78f0bda253d259f4aa210a">&#9670;&nbsp;</a></span>pixel_psf()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SUBPIX_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classFitPSF_1_1SDKSource.xhtml">FitPSF::SDKSource</a>&lt; SUBPIX_TYPE &gt;::pixel_psf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="EllipticalGaussianIntegralByOrder_8h.xhtml#a9779b56088bafa3895c2f587f5e39a7f">PSF::SDKDerivative</a>&#160;</td>
          <td class="paramname"><em>deriv</em> = <code>PSF::NO_DERIV</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The integral of the normalized PSF over the current pixel and its derivatives. </p>

</div>
</div>
<a id="a5f6f8dcce0130857401c1739ea06f475"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f6f8dcce0130857401c1739ea06f475">&#9670;&nbsp;</a></span>psf_integral()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SUBPIX_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::valarray&lt; double &gt; <a class="el" href="classFitPSF_1_1SDKSource.xhtml">FitPSF::SDKSource</a>&lt; SUBPIX_TYPE &gt;::psf_integral </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classPSF_1_1EllipticalGaussian.xhtml">PSF::EllipticalGaussian</a> &amp;&#160;</td>
          <td class="paramname"><em>psf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const SUBPIX_TYPE &amp;&#160;</td>
          <td class="paramname"><em>subpix_map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>precision</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates the sub-pixel weighted integral of the given PSF over a pixel. </p>
<p>Calculates the sub-pixel weighted integral of the given PSF over the pixel with lower left corner at (x, y) relative to the source center. The presicion specified is relative. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>The left edge of the pixel relative to the source. </td></tr>
    <tr><td class="paramname">y</td><td>The lower edge of the pixel relative to the source. </td></tr>
    <tr><td class="paramname">psf</td><td>The point spread function or pixel response function of the source (which is assumed depends in subpix_map). </td></tr>
    <tr><td class="paramname">subpix_map</td><td>The sub-pixel sensitivity map. If the map resolution is 0x0 the psf argument is assumed to be the PRF. </td></tr>
    <tr><td class="paramname">precision</td><td>The relative precision to which the integra should be calculated. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af017d030364929ad145fcd855e4b6371"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af017d030364929ad145fcd855e4b6371">&#9670;&nbsp;</a></span>restart_pixel_iteration()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SUBPIX_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="classFitPSF_1_1SDKSource.xhtml">FitPSF::SDKSource</a>&lt; SUBPIX_TYPE &gt;::restart_pixel_iteration </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Restarts the iteration over pixels from the beginning. </p>

</div>
</div>
<a id="a7887ddefe473c506458ee74394fb3c8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7887ddefe473c506458ee74394fb3c8d">&#9670;&nbsp;</a></span>set_PSF()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SUBPIX_TYPE &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classFitPSF_1_1SDKSource.xhtml">FitPSF::SDKSource</a>&lt; SUBPIX_TYPE &gt;::set_PSF </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classPSF_1_1EllipticalGaussian.xhtml">PSF::EllipticalGaussian</a> &amp;&#160;</td>
          <td class="paramname"><em>psf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const SUBPIX_TYPE &amp;&#160;</td>
          <td class="paramname"><em>subpix_map</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Recalculates the integrals of the PSF over the source pixels using the given PSF and sub-pixel map. </p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a2d30dbd04bd3615cb6cda835fa5c00d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d30dbd04bd3615cb6cda835fa5c00d8">&#9670;&nbsp;</a></span>__psf_int_iter</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SUBPIX_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::list&lt; std::valarray&lt;double&gt; &gt;::const_iterator <a class="el" href="classFitPSF_1_1SDKSource.xhtml">FitPSF::SDKSource</a>&lt; SUBPIX_TYPE &gt;::__psf_int_iter</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>An iterator over the PSF integrals and their derivatives over pixels. </p>

</div>
</div>
<a id="a0d911d3af7809b91608162fdaf7cb62f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d911d3af7809b91608162fdaf7cb62f">&#9670;&nbsp;</a></span>__psf_pixels</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SUBPIX_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::list&lt; std::valarray&lt;double&gt; &gt; <a class="el" href="classFitPSF_1_1SDKSource.xhtml">FitPSF::SDKSource</a>&lt; SUBPIX_TYPE &gt;::__psf_pixels</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The integral of the normalized PSF over all pixels belonging to the source. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/Users/kpenev/projects/git/AstroWISP/doc_src/FitPSF/<a class="el" href="FitPSF_2SDKSource_8h_source.xhtml">SDKSource.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>FitPSF</b></li><li class="navelem"><a class="el" href="classFitPSF_1_1SDKSource.xhtml">SDKSource</a></li>
    <li class="footer">Generated on Tue Nov 26 2024 10:27:38 for Sub-Pixel Photometry by <a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.8.20 </li>
  </ul>
</div>
</body>
</html>
