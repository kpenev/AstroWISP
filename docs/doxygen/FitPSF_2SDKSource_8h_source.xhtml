<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.20"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Sub-Pixel Photometry: /Users/kpenev/projects/git/SuperPhot/doc_src/FitPSF/SDKSource.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Sub-Pixel Photometry
   </div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.svg"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.20 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('FitPSF_2SDKSource_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">SDKSource.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef __SDK_PSF_FITTING_H</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define __SDK_PSF_FITTING_H</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;../Core/SharedLibraryExportMacros.h&quot;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="SDKSourceBase_8h.xhtml">SDKSourceBase.h</a>&quot;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="SubPixPhot_2Common_8h.xhtml">Common.h</a>&quot;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="FitPSF_2Source_8h.xhtml">Source.h</a>&quot;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;../PSF/EllipticalGaussian.h&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;../Background/Source.h&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;../Core/SourceID.h&quot;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;../Core/Image.h&quot;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span>FitPSF {</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> SUBPIX_TYPE&gt;</div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="classFitPSF_1_1SDKSource.xhtml">   20</a></span>&#160;        <span class="keyword">class  </span><a class="code" href="classFitPSF_1_1SDKSource.xhtml">SDKSource</a> : <span class="keyword">public</span> <a class="code" href="classFitPSF_1_1SDKSourceBase.xhtml">SDKSourceBase</a> {</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        <span class="keyword">private</span>:</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="classFitPSF_1_1SDKSource.xhtml#a0d911d3af7809b91608162fdaf7cb62f">   24</a></span>&#160;            std::list&lt; std::valarray&lt;double&gt; &gt; <a class="code" href="classFitPSF_1_1SDKSource.xhtml#a0d911d3af7809b91608162fdaf7cb62f">__psf_pixels</a>;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classFitPSF_1_1SDKSource.xhtml#a2d30dbd04bd3615cb6cda835fa5c00d8">   28</a></span>&#160;            std::list&lt; std::valarray&lt;double&gt; &gt;::const_iterator <a class="code" href="classFitPSF_1_1SDKSource.xhtml#a2d30dbd04bd3615cb6cda835fa5c00d8">__psf_int_iter</a>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            std::valarray&lt;double&gt; <a class="code" href="classFitPSF_1_1SDKSource.xhtml#a5f6f8dcce0130857401c1739ea06f475">psf_integral</a>(</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                <span class="keywordtype">double</span> <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>,</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                <span class="keywordtype">double</span> <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7">y</a>,</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                <span class="keyword">const</span> <a class="code" href="classPSF_1_1EllipticalGaussian.xhtml">PSF::EllipticalGaussian</a> &amp;psf,</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                <span class="keyword">const</span> SUBPIX_TYPE &amp;<a class="code" href="classFitPSF_1_1Source.xhtml#a0661658d593824f0bcd4d19cf3eccb80">subpix_map</a>,</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                <span class="keywordtype">double</span> precision</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            );</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keyword">template</span>&lt;<span class="keyword">class</span> EIGEN_MATRIX&gt;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                <a class="code" href="classFitPSF_1_1SDKSource.xhtml#a5980b6132dd8e9327e1d0a80f7152c75">SDKSource</a>(</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classCore_1_1SourceID.xhtml">Core::SourceID</a> &amp;<span class="keywordtype">id</span>,</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                    <span class="keywordtype">double</span> <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>,</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                    <span class="keywordtype">double</span> <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7">y</a>,</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classBackground_1_1Source.xhtml">Background::Source</a> &amp;background,</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classCore_1_1Image.xhtml">Core::Image&lt;double&gt;</a> &amp;observed_image,</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                    <span class="keyword">const</span> std::string &amp;output_fname,</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                    EIGEN_MATRIX &amp;source_assignment,</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                    <span class="keywordtype">double</span> gain,</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                    <span class="keywordtype">double</span> alpha,</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                    <span class="keywordtype">int</span> source_id,</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                    <span class="keywordtype">double</span> max_circular_aperture=0,</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                    <span class="keywordtype">bool</span> <a class="code" href="classFitPSF_1_1SDKSourceBase.xhtml#a10652f38c0ec83e70ece2d369d06864a">calculate_first_deriv</a>=<span class="keyword">false</span>,</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                    <span class="keywordtype">bool</span> <a class="code" href="classFitPSF_1_1SDKSourceBase.xhtml#a9f44fb5f8ba88435615dca7d4cc0794e">calculate_second_deriv</a>=<span class="keyword">false</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                );</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keyword">using</span> <a class="code" href="classFitPSF_1_1Source.xhtml">Source&lt;PSF::EllipticalGaussian&gt;::pixel_psf</a>;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classFitPSF_1_1SDKSource.xhtml#a2da305338d78f0bda253d259f4aa210a">  113</a></span>&#160;            <span class="keywordtype">double</span> <a class="code" href="classFitPSF_1_1SDKSource.xhtml#a2da305338d78f0bda253d259f4aa210a">pixel_psf</a>(<a class="code" href="EllipticalGaussianIntegralByOrder_8h.xhtml#a9779b56088bafa3895c2f587f5e39a7f">PSF::SDKDerivative</a> deriv = PSF::NO_DERIV)<span class="keyword"> const</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keyword">            </span>{<span class="keywordflow">return</span> (*<a class="code" href="classFitPSF_1_1SDKSource.xhtml#a2d30dbd04bd3615cb6cda835fa5c00d8">__psf_int_iter</a>)[deriv];}</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordtype">void</span> <a class="code" href="classFitPSF_1_1SDKSource.xhtml#a7887ddefe473c506458ee74394fb3c8d">set_PSF</a>(<span class="keyword">const</span> <a class="code" href="classPSF_1_1EllipticalGaussian.xhtml">PSF::EllipticalGaussian</a> &amp;psf,</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                         <span class="keyword">const</span> SUBPIX_TYPE &amp;<a class="code" href="classFitPSF_1_1Source.xhtml#a0661658d593824f0bcd4d19cf3eccb80">subpix_map</a>);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classFitPSF_1_1SDKSource.xhtml#ac7500f60802b90cca347f2b782391915">  123</a></span>&#160;            <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classFitPSF_1_1SDKSource.xhtml#ac7500f60802b90cca347f2b782391915">next_pixel</a>()</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            {</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                <span class="keywordflow">return</span> (<a class="code" href="classFitPSF_1_1Source.xhtml">Source&lt;PSF::EllipticalGaussian&gt;::next_pixel</a>()</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                        &amp;&amp;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                        ++<a class="code" href="classFitPSF_1_1SDKSource.xhtml#a2d30dbd04bd3615cb6cda835fa5c00d8">__psf_int_iter</a> != <a class="code" href="classFitPSF_1_1SDKSource.xhtml#a0d911d3af7809b91608162fdaf7cb62f">__psf_pixels</a>.end());</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="classFitPSF_1_1SDKSource.xhtml#af017d030364929ad145fcd855e4b6371">  131</a></span>&#160;            <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classFitPSF_1_1SDKSource.xhtml#af017d030364929ad145fcd855e4b6371">restart_pixel_iteration</a>()</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                <a class="code" href="classFitPSF_1_1Source.xhtml">Source&lt;PSF::EllipticalGaussian&gt;::restart_pixel_iteration</a>();</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                <a class="code" href="classFitPSF_1_1SDKSource.xhtml#a2d30dbd04bd3615cb6cda835fa5c00d8">__psf_int_iter</a> = <a class="code" href="classFitPSF_1_1SDKSource.xhtml#a0d911d3af7809b91608162fdaf7cb62f">__psf_pixels</a>.begin();</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        }; <span class="comment">//End SDKSource class.</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keyword">typedef</span> std::list&lt; SDKSource&lt;GSLSubPixType&gt; &gt;::iterator </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        GSLSourceIteratorType;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> SUBPIX_TYPE&gt;</div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="classFitPSF_1_1SDKSource.xhtml#a5f6f8dcce0130857401c1739ea06f475">  145</a></span>&#160;        std::valarray&lt;double&gt; <a class="code" href="classFitPSF_1_1SDKSource.xhtml#a5f6f8dcce0130857401c1739ea06f475">SDKSource&lt;SUBPIX_TYPE&gt;::psf_integral</a>(</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            <span class="keywordtype">double</span> <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>,</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <span class="keywordtype">double</span> <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7">y</a>,</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keyword">const</span> <a class="code" href="classPSF_1_1EllipticalGaussian.xhtml">PSF::EllipticalGaussian</a> &amp;psf,</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="keyword">const</span> SUBPIX_TYPE &amp;subpix_map,</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keywordtype">double</span> precision</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        )</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    {</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        std::valarray&lt;double&gt; result(0.0, PSF::KK_DERIV + 1);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordflow">if</span>(subpix_map.x_resolution()==0) {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            assert(subpix_map.y_resolution()==0);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            psf.<a class="code" href="classPSF_1_1EllipticalGaussian.xhtml#a90d2b8107c6024685f8c7a8c1232310c">evaluate</a>(<a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>+0.5, <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7">y</a>+0.5,</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                         result,</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                         calculate_first_deriv(),</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                         calculate_second_deriv());</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="keywordtype">double</span> dx=1.0/subpix_map.x_resolution(), </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                   dy=1.0/subpix_map.y_resolution(); </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>+=0.5*dx; <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7">y</a>+=0.5*dy;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            <span class="keywordtype">unsigned</span> subpix_x_res=subpix_map.x_resolution();</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> y_i=0; y_i&lt;subpix_map.y_resolution(); y_i++)</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> x_i=0; x_i&lt;subpix_x_res; x_i++) {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                    psf.<a class="code" href="classPSF_1_1EllipticalGaussian.xhtml#a1b275b97fc545d193081514464f14453">set_precision</a>(precision, 0.0);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                    psf.<a class="code" href="classPSF_1_1EllipticalGaussian.xhtml#a0e57ad0f998c0eacd7eeb8e98cde2f10">integrate</a>(</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                            <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>+dx*x_i, <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7">y</a>+dy*y_i,</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                            dx, dy, </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                            0,</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                            calculate_first_deriv(), calculate_second_deriv()</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;#ifdef DEBUG    </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;#ifdef SHOW_PSF_PIECES</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                            , <span class="keyword">false</span>, <span class="keyword">true</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;#endif</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;#endif</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                    );</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                    result[PSF::NO_DERIV] += (</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                        psf.last_integrated(PSF::NO_DERIV)</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                        *</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                        subpix_map(x_i, y_i)</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                    );</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                    <span class="keywordflow">for</span>(</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                        <span class="keywordtype">int</span> d = (calculate_first_deriv()</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                                 ? PSF::S_DERIV</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                                 : PSF::SS_DERIV);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                        d &lt;= (calculate_second_deriv()</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                              ? PSF::KK_DERIV</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                              : PSF::K_DERIV);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                        ++d</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                    ) {</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                        result[d] += (</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                            psf.last_integrated(</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                                <span class="keyword">static_cast&lt;</span><a class="code" href="EllipticalGaussianIntegralByOrder_8h.xhtml#a9779b56088bafa3895c2f587f5e39a7f">PSF::SDKDerivative</a><span class="keyword">&gt;</span>(d)</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                            )</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                            *</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                            subpix_map(x_i, y_i)</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                        );</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="preprocessor">#ifdef DEBUG</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                        assert(!std::isnan(result[d]));</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                    }</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                }</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        }</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    }</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> SUBPIX_TYPE&gt;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> EIGEN_MATRIX&gt;</div>
<div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="classFitPSF_1_1SDKSource.xhtml#a5980b6132dd8e9327e1d0a80f7152c75">  212</a></span>&#160;        <a class="code" href="classFitPSF_1_1SDKSource.xhtml#a5980b6132dd8e9327e1d0a80f7152c75">SDKSource&lt;SUBPIX_TYPE&gt;::SDKSource</a>(</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <span class="keyword">const</span> <a class="code" href="classCore_1_1SourceID.xhtml">Core::SourceID</a> &amp;<span class="keywordtype">id</span>, <span class="keywordtype">double</span> <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>, <span class="keywordtype">double</span> <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7">y</a>,</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keyword">const</span> <a class="code" href="classBackground_1_1Source.xhtml">Background::Source</a> &amp;background,</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="keyword">const</span> <a class="code" href="classCore_1_1Image.xhtml">Core::Image&lt;double&gt;</a> &amp;observed_image,</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            <span class="keyword">const</span> std::string &amp;output_fname,</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            EIGEN_MATRIX &amp;source_assignment,</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="keywordtype">double</span> gain,</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="keywordtype">double</span> alpha,</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            <span class="keywordtype">int</span> source_id,</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            <span class="keywordtype">double</span> max_circular_aperture,</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160; </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            <span class="keywordtype">bool</span> calculate_first_deriv,</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160; </div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            <span class="keywordtype">bool</span> calculate_second_deriv</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        ) :</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            <a class="code" href="classFitPSF_1_1SDKSourceBase.xhtml">SDKSourceBase</a>(<a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5af935a4f1fe4b660e5cecaf76689212b7">id</a>,</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                          <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>,</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                          <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7">y</a>,</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                          background,</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                          observed_image,</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                          source_assignment,</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                          gain,</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                          alpha,</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                          source_id,</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                          output_fname,</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                          calculate_first_deriv,</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                          calculate_second_deriv,</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                          max_circular_aperture)</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    {}</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> SUBPIX_TYPE&gt;</div>
<div class="line"><a name="l00274"></a><span class="lineno"><a class="line" href="classFitPSF_1_1SDKSource.xhtml#a7887ddefe473c506458ee74394fb3c8d">  274</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classFitPSF_1_1SDKSource.xhtml#a7887ddefe473c506458ee74394fb3c8d">SDKSource&lt;SUBPIX_TYPE&gt;::set_PSF</a>(</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            <span class="keyword">const</span> <a class="code" href="classPSF_1_1EllipticalGaussian.xhtml">PSF::EllipticalGaussian</a> &amp;psf,</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            <span class="keyword">const</span> SUBPIX_TYPE &amp;subpix_map</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        )</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        {</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            <a class="code" href="classFitPSF_1_1Source.xhtml">Source&lt;PSF::EllipticalGaussian&gt;::restart_pixel_iteration</a>();</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            __psf_pixels.clear();</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            <span class="keywordflow">do</span> {</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                __psf_pixels.push_back(pixel_psf(psf));</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            } <span class="keywordflow">while</span>(<a class="code" href="classFitPSF_1_1Source.xhtml">Source&lt;PSF::EllipticalGaussian&gt;::next_pixel</a>());</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            fit_flux();</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        }</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160; </div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;} <span class="comment">//End FitPSF namespace.</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160; </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespacePhot_xhtml_afd335f0316f5f0113818bf99d5f6d6b5af935a4f1fe4b660e5cecaf76689212b7"><div class="ttname"><a href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5af935a4f1fe4b660e5cecaf76689212b7">Phot::id</a></div><div class="ttdeci">@ id</div><div class="ttdoc">The HAT-id.</div><div class="ttdef"><b>Definition:</b> PhotColumns.h:27</div></div>
<div class="ttc" id="aSDKSourceBase_8h_xhtml"><div class="ttname"><a href="SDKSourceBase_8h.xhtml">SDKSourceBase.h</a></div><div class="ttdoc">Declares a base class for sources participating in SDK fitting.</div></div>
<div class="ttc" id="aclassPSF_1_1EllipticalGaussian_xhtml_a1b275b97fc545d193081514464f14453"><div class="ttname"><a href="classPSF_1_1EllipticalGaussian.xhtml#a1b275b97fc545d193081514464f14453">PSF::EllipticalGaussian::set_precision</a></div><div class="ttdeci">void set_precision(double relative, double absolute) const</div><div class="ttdoc">Change the precision requirements from what was set at construction.</div><div class="ttdef"><b>Definition:</b> EllipticalGaussian.h:181</div></div>
<div class="ttc" id="anamespacePhot_xhtml_afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff"><div class="ttname"><a href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">Phot::x</a></div><div class="ttdeci">@ x</div><div class="ttdoc">The x coordinate in the input fits image.</div><div class="ttdef"><b>Definition:</b> PhotColumns.h:28</div></div>
<div class="ttc" id="aclassBackground_1_1Source_xhtml"><div class="ttname"><a href="classBackground_1_1Source.xhtml">Background::Source</a></div><div class="ttdoc">The base class for the backgnound under a source.</div><div class="ttdef"><b>Definition:</b> Source.h:25</div></div>
<div class="ttc" id="aclassCore_1_1SourceID_xhtml"><div class="ttname"><a href="classCore_1_1SourceID.xhtml">Core::SourceID</a></div><div class="ttdoc">The two components of the HAT i.d. (primary filed and source number)</div><div class="ttdef"><b>Definition:</b> SourceID.h:20</div></div>
<div class="ttc" id="aclassFitPSF_1_1SDKSource_xhtml"><div class="ttname"><a href="classFitPSF_1_1SDKSource.xhtml">FitPSF::SDKSource</a></div><div class="ttdoc">A PSF fitting source class based on a LocalPolynomialPSF.</div><div class="ttdef"><b>Definition:</b> SDKSource.h:20</div></div>
<div class="ttc" id="aclassFitPSF_1_1SDKSource_xhtml_a2da305338d78f0bda253d259f4aa210a"><div class="ttname"><a href="classFitPSF_1_1SDKSource.xhtml#a2da305338d78f0bda253d259f4aa210a">FitPSF::SDKSource::pixel_psf</a></div><div class="ttdeci">double pixel_psf(PSF::SDKDerivative deriv=PSF::NO_DERIV) const</div><div class="ttdoc">The integral of the normalized PSF over the current pixel and its derivatives.</div><div class="ttdef"><b>Definition:</b> SDKSource.h:113</div></div>
<div class="ttc" id="aclassPSF_1_1EllipticalGaussian_xhtml_a90d2b8107c6024685f8c7a8c1232310c"><div class="ttname"><a href="classPSF_1_1EllipticalGaussian.xhtml#a90d2b8107c6024685f8c7a8c1232310c">PSF::EllipticalGaussian::evaluate</a></div><div class="ttdeci">void evaluate(double x, double y, ITERABLE result, bool calculate_first_deriv=false, bool calculate_second_deriv=false) const</div><div class="ttdoc">Calculates the PSF and its derivatives at the given position.</div><div class="ttdef"><b>Definition:</b> EllipticalGaussian.h:313</div></div>
<div class="ttc" id="aclassFitPSF_1_1SDKSourceBase_xhtml_a9f44fb5f8ba88435615dca7d4cc0794e"><div class="ttname"><a href="classFitPSF_1_1SDKSourceBase.xhtml#a9f44fb5f8ba88435615dca7d4cc0794e">FitPSF::SDKSourceBase::calculate_second_deriv</a></div><div class="ttdeci">bool calculate_second_deriv() const</div><div class="ttdoc">Should second order derivatives of the amplited and  be calculated.</div><div class="ttdef"><b>Definition:</b> SDKSourceBase.h:163</div></div>
<div class="ttc" id="aclassFitPSF_1_1SDKSource_xhtml_a2d30dbd04bd3615cb6cda835fa5c00d8"><div class="ttname"><a href="classFitPSF_1_1SDKSource.xhtml#a2d30dbd04bd3615cb6cda835fa5c00d8">FitPSF::SDKSource::__psf_int_iter</a></div><div class="ttdeci">std::list&lt; std::valarray&lt; double &gt; &gt;::const_iterator __psf_int_iter</div><div class="ttdoc">An iterator over the PSF integrals and their derivatives over pixels.</div><div class="ttdef"><b>Definition:</b> SDKSource.h:28</div></div>
<div class="ttc" id="aclassFitPSF_1_1SDKSource_xhtml_af017d030364929ad145fcd855e4b6371"><div class="ttname"><a href="classFitPSF_1_1SDKSource.xhtml#af017d030364929ad145fcd855e4b6371">FitPSF::SDKSource::restart_pixel_iteration</a></div><div class="ttdeci">virtual void restart_pixel_iteration()</div><div class="ttdoc">Restarts the iteration over pixels from the beginning.</div><div class="ttdef"><b>Definition:</b> SDKSource.h:131</div></div>
<div class="ttc" id="aclassPSF_1_1EllipticalGaussian_xhtml_a0e57ad0f998c0eacd7eeb8e98cde2f10"><div class="ttname"><a href="classPSF_1_1EllipticalGaussian.xhtml#a0e57ad0f998c0eacd7eeb8e98cde2f10">PSF::EllipticalGaussian::integrate</a></div><div class="ttdeci">double integrate(double center_x, double center_y, double dx, double dy, double circle_radius=0) const</div><div class="ttdoc">Calculates the integral of the PSF over a rectangle (or its overlap with a circle).</div><div class="ttdef"><b>Definition:</b> EllipticalGaussian.h:237</div></div>
<div class="ttc" id="aFitPSF_2Source_8h_xhtml"><div class="ttname"><a href="FitPSF_2Source_8h.xhtml">Source.h</a></div><div class="ttdoc">Defines the base class for sources participating in PSF fitting.</div></div>
<div class="ttc" id="anamespacePhot_xhtml_afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7"><div class="ttname"><a href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7">Phot::y</a></div><div class="ttdeci">@ y</div><div class="ttdoc">The y coordinate in the input fits image.</div><div class="ttdef"><b>Definition:</b> PhotColumns.h:29</div></div>
<div class="ttc" id="aclassFitPSF_1_1SDKSource_xhtml_ac7500f60802b90cca347f2b782391915"><div class="ttname"><a href="classFitPSF_1_1SDKSource.xhtml#ac7500f60802b90cca347f2b782391915">FitPSF::SDKSource::next_pixel</a></div><div class="ttdeci">virtual bool next_pixel()</div><div class="ttdoc">Advance to the next pixel of the source returning true if it is not past the last pixel.</div><div class="ttdef"><b>Definition:</b> SDKSource.h:123</div></div>
<div class="ttc" id="aclassFitPSF_1_1SDKSource_xhtml_a5f6f8dcce0130857401c1739ea06f475"><div class="ttname"><a href="classFitPSF_1_1SDKSource.xhtml#a5f6f8dcce0130857401c1739ea06f475">FitPSF::SDKSource::psf_integral</a></div><div class="ttdeci">std::valarray&lt; double &gt; psf_integral(double x, double y, const PSF::EllipticalGaussian &amp;psf, const SUBPIX_TYPE &amp;subpix_map, double precision)</div><div class="ttdoc">Calculates the sub-pixel weighted integral of the given PSF over a pixel.</div><div class="ttdef"><b>Definition:</b> SDKSource.h:145</div></div>
<div class="ttc" id="aclassPSF_1_1EllipticalGaussian_xhtml"><div class="ttname"><a href="classPSF_1_1EllipticalGaussian.xhtml">PSF::EllipticalGaussian</a></div><div class="ttdoc">An ellptical Gaussian PSF with peak flux above the background normalized to 1.</div><div class="ttdef"><b>Definition:</b> EllipticalGaussian.h:41</div></div>
<div class="ttc" id="aEllipticalGaussianIntegralByOrder_8h_xhtml_a9779b56088bafa3895c2f587f5e39a7f"><div class="ttname"><a href="EllipticalGaussianIntegralByOrder_8h.xhtml#a9779b56088bafa3895c2f587f5e39a7f">PSF::SDKDerivative</a></div><div class="ttdeci">SDKDerivative</div><div class="ttdoc">Tags for derivatives of integrals of EllipticalGaussianPSF with respect to the shape parameters.</div><div class="ttdef"><b>Definition:</b> EllipticalGaussianIntegralByOrder.h:20</div></div>
<div class="ttc" id="aclassFitPSF_1_1Source_xhtml_a0661658d593824f0bcd4d19cf3eccb80"><div class="ttname"><a href="classFitPSF_1_1Source.xhtml#a0661658d593824f0bcd4d19cf3eccb80">FitPSF::Source&lt; PSF::EllipticalGaussian &gt;::subpix_map</a></div><div class="ttdeci">const Core::SubPixelMap &amp; subpix_map() const</div><div class="ttdoc">Teh sub-pixel map supplied on input.</div><div class="ttdef"><b>Definition:</b> Source.h:226</div></div>
<div class="ttc" id="aclassFitPSF_1_1SDKSourceBase_xhtml_a10652f38c0ec83e70ece2d369d06864a"><div class="ttname"><a href="classFitPSF_1_1SDKSourceBase.xhtml#a10652f38c0ec83e70ece2d369d06864a">FitPSF::SDKSourceBase::calculate_first_deriv</a></div><div class="ttdeci">bool calculate_first_deriv() const</div><div class="ttdoc">Should first order derivatives of the amplited and  be calculated.</div><div class="ttdef"><b>Definition:</b> SDKSourceBase.h:159</div></div>
<div class="ttc" id="aclassFitPSF_1_1SDKSourceBase_xhtml"><div class="ttname"><a href="classFitPSF_1_1SDKSourceBase.xhtml">FitPSF::SDKSourceBase</a></div><div class="ttdoc">An abstract class that defines the minimum requirements of a source to participate in the fitting for...</div><div class="ttdef"><b>Definition:</b> SDKSourceBase.h:29</div></div>
<div class="ttc" id="aclassFitPSF_1_1SDKSource_xhtml_a5980b6132dd8e9327e1d0a80f7152c75"><div class="ttname"><a href="classFitPSF_1_1SDKSource.xhtml#a5980b6132dd8e9327e1d0a80f7152c75">FitPSF::SDKSource::SDKSource</a></div><div class="ttdeci">SDKSource(const Core::SourceID &amp;id, double x, double y, const Background::Source &amp;background, const Core::Image&lt; double &gt; &amp;observed_image, const std::string &amp;output_fname, EIGEN_MATRIX &amp;source_assignment, double gain, double alpha, int source_id, double max_circular_aperture=0, bool calculate_first_deriv=false, bool calculate_second_deriv=false)</div><div class="ttdoc">Identify the pixels which belong to a source.</div><div class="ttdef"><b>Definition:</b> SDKSource.h:212</div></div>
<div class="ttc" id="aclassFitPSF_1_1Source_xhtml"><div class="ttname"><a href="classFitPSF_1_1Source.xhtml">FitPSF::Source</a></div><div class="ttdoc">An abstract base class for sources which participate in PSF fitting.</div><div class="ttdef"><b>Definition:</b> Source.h:41</div></div>
<div class="ttc" id="aSubPixPhot_2Common_8h_xhtml"><div class="ttname"><a href="SubPixPhot_2Common_8h.xhtml">Common.h</a></div><div class="ttdoc">Declare functions used by both the C-interface and the command line interface.</div></div>
<div class="ttc" id="aclassCore_1_1Image_xhtml"><div class="ttname"><a href="classCore_1_1Image.xhtml">Core::Image&lt; double &gt;</a></div></div>
<div class="ttc" id="aclassFitPSF_1_1SDKSource_xhtml_a7887ddefe473c506458ee74394fb3c8d"><div class="ttname"><a href="classFitPSF_1_1SDKSource.xhtml#a7887ddefe473c506458ee74394fb3c8d">FitPSF::SDKSource::set_PSF</a></div><div class="ttdeci">void set_PSF(const PSF::EllipticalGaussian &amp;psf, const SUBPIX_TYPE &amp;subpix_map)</div><div class="ttdoc">Recalculates the integrals of the PSF over the source pixels using the given PSF and sub-pixel map.</div><div class="ttdef"><b>Definition:</b> SDKSource.h:274</div></div>
<div class="ttc" id="aclassFitPSF_1_1SDKSource_xhtml_a0d911d3af7809b91608162fdaf7cb62f"><div class="ttname"><a href="classFitPSF_1_1SDKSource.xhtml#a0d911d3af7809b91608162fdaf7cb62f">FitPSF::SDKSource::__psf_pixels</a></div><div class="ttdeci">std::list&lt; std::valarray&lt; double &gt; &gt; __psf_pixels</div><div class="ttdoc">The integral of the normalized PSF over all pixels belonging to the source.</div><div class="ttdef"><b>Definition:</b> SDKSource.h:24</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_65a8df4c49f610a40e9230d0067dc79d.xhtml">doc_src</a></li><li class="navelem"><a class="el" href="dir_da0161f9aa898feee64ca6d468d5d6fb.xhtml">FitPSF</a></li><li class="navelem"><b>SDKSource.h</b></li>
    <li class="footer">Generated on Mon May 20 2024 13:33:56 for Sub-Pixel Photometry by <a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.8.20 </li>
  </ul>
</div>
</body>
</html>
