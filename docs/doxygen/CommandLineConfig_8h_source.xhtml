<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.20"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Sub-Pixel Photometry: /Users/kpenev/projects/git/AstroWISP/doc_src/IO/CommandLineConfig.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Sub-Pixel Photometry
   </div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.svg"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.20 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('CommandLineConfig_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CommandLineConfig.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="CommandLineConfig_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#ifndef __COMMAND_LINE_CONFIG_H</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#define __COMMAND_LINE_CONFIG_H</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;../Core/SharedLibraryExportMacros.h&quot;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="PSF_2CommandLineUtil_8h.xhtml">CommandLineUtil.h</a>&quot;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;boost/program_options.hpp&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &quot;../PSF/EllipticalGaussian.h&quot;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">namespace </span>opt = boost::program_options;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">namespace </span>IO {</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="classIO_1_1CommandLineConfig.xhtml">   22</a></span>&#160;    <span class="keyword">class  </span><a class="code" href="classIO_1_1CommandLineConfig.xhtml">CommandLineConfig</a> : <span class="keyword">public</span> opt::variables_map {</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classIO_1_1CommandLineConfig.xhtml#a7b6494144edb16028f3cd1b34b155612">   25</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classIO_1_1CommandLineConfig.xhtml#a7b6494144edb16028f3cd1b34b155612">__parsed_ok</a>;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classIO_1_1CommandLineConfig.xhtml#a4f58bc0d1b077ee6fe75b2fea07cd39d">   28</a></span>&#160;        std::string <a class="code" href="classIO_1_1CommandLineConfig.xhtml#a4f58bc0d1b077ee6fe75b2fea07cd39d">__executable</a>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="classIO_1_1CommandLineConfig.xhtml#a48deecc8d57d2b094e64ed9c9a68d609">   31</a></span>&#160;        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classIO_1_1CommandLineConfig.xhtml#a48deecc8d57d2b094e64ed9c9a68d609">describe_options</a>() =0;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classIO_1_1CommandLineConfig.xhtml#a5ad926e7afb6e46fdd588b66a15fe488">   35</a></span>&#160;        <span class="keyword">virtual</span> std::string <a class="code" href="classIO_1_1CommandLineConfig.xhtml#a5ad926e7afb6e46fdd588b66a15fe488">usage_help</a>(</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            <span class="keyword">const</span> std::string &amp;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        )<span class="keyword"> const</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">        </span>{<span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;};</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        opt::options_description</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classIO_1_1CommandLineConfig.xhtml#a412212d4c5afe7db9f41e259c137e4d6">   47</a></span>&#160;            <a class="code" href="classIO_1_1CommandLineConfig.xhtml#a412212d4c5afe7db9f41e259c137e4d6">_hidden</a>,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classIO_1_1CommandLineConfig.xhtml#abb2f9358885ac2bf71a4247a89985a10">   50</a></span>&#160;            <a class="code" href="classIO_1_1CommandLineConfig.xhtml#abb2f9358885ac2bf71a4247a89985a10">_cmdline_only</a>,</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classIO_1_1CommandLineConfig.xhtml#a8e3abce6cccedcab50facc9bf1dd3390">   53</a></span>&#160;            <a class="code" href="classIO_1_1CommandLineConfig.xhtml#a8e3abce6cccedcab50facc9bf1dd3390">_cmdline_config</a>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classIO_1_1CommandLineConfig.xhtml#a8d11b8e10a4ac310587a1f226e57e518">   56</a></span>&#160;        opt::positional_options_description <a class="code" href="classIO_1_1CommandLineConfig.xhtml#a8d11b8e10a4ac310587a1f226e57e518">_positional</a>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classIO_1_1CommandLineConfig.xhtml#aadea4187f4790efcd9f509908b7de48a">   60</a></span>&#160;        <a class="code" href="classIO_1_1CommandLineConfig.xhtml#aadea4187f4790efcd9f509908b7de48a">CommandLineConfig</a>(</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keywordtype">int</span> argc = 0,</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keywordtype">char</span> **argv = NULL</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        )</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            : <a class="code" href="classIO_1_1CommandLineConfig.xhtml#a7b6494144edb16028f3cd1b34b155612">__parsed_ok</a>(false)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        {<span class="keywordflow">if</span>(argc &gt; 0) <a class="code" href="classIO_1_1CommandLineConfig.xhtml#a60457cc39bec668563bfe9557a8b4ac6">parse</a>(argc, argv);}</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classIO_1_1CommandLineConfig.xhtml#a60457cc39bec668563bfe9557a8b4ac6">parse</a>(</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <span class="keywordtype">int</span> argc,</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            <span class="keywordtype">char</span> **argv</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        );</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classIO_1_1CommandLineConfig.xhtml#ad6fc8f480ec93e305085ec77f26e3cf4">   81</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classIO_1_1CommandLineConfig.xhtml#ad6fc8f480ec93e305085ec77f26e3cf4">proceed</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> <a class="code" href="classIO_1_1CommandLineConfig.xhtml#a7b6494144edb16028f3cd1b34b155612">__parsed_ok</a>;}</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classIO_1_1CommandLineConfig.xhtml#adc6d39d1dc133dc54a9cacfcfc7f5861">   84</a></span>&#160;        <span class="keyword">const</span> std::string &amp;<a class="code" href="classIO_1_1CommandLineConfig.xhtml#adc6d39d1dc133dc54a9cacfcfc7f5861">executable</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> <a class="code" href="classIO_1_1CommandLineConfig.xhtml#a4f58bc0d1b077ee6fe75b2fea07cd39d">__executable</a>;}</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classIO_1_1CommandLineConfig.xhtml#ac8b2ba9595113335c9b7938e09ee5086">   87</a></span>&#160;        <span class="keyword">const</span> opt::options_description &amp;<a class="code" href="classIO_1_1CommandLineConfig.xhtml#ac8b2ba9595113335c9b7938e09ee5086">hidden_options</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword">        </span>{<span class="keywordflow">return</span> <a class="code" href="classIO_1_1CommandLineConfig.xhtml#a412212d4c5afe7db9f41e259c137e4d6">_hidden</a>;}</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="classIO_1_1CommandLineConfig.xhtml#aac28b67b6e53ec381340372e4182d02c">   91</a></span>&#160;        <span class="keyword">const</span> opt::options_description &amp;<a class="code" href="classIO_1_1CommandLineConfig.xhtml#aac28b67b6e53ec381340372e4182d02c">cmdline_only_options</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keyword">        </span>{<span class="keywordflow">return</span> <a class="code" href="classIO_1_1CommandLineConfig.xhtml#abb2f9358885ac2bf71a4247a89985a10">_cmdline_only</a>;}</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classIO_1_1CommandLineConfig.xhtml#abf99d77123b5d9943a1ed2bc54a11796">   95</a></span>&#160;        <span class="keyword">const</span> opt::options_description &amp;<a class="code" href="classIO_1_1CommandLineConfig.xhtml#abf99d77123b5d9943a1ed2bc54a11796">cmdline_config_options</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keyword">        </span>{<span class="keywordflow">return</span> <a class="code" href="classIO_1_1CommandLineConfig.xhtml#a8e3abce6cccedcab50facc9bf1dd3390">_cmdline_config</a>;}</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }; <span class="comment">//End CommandLineConfig class.</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;     <span class="keywordtype">void</span> update_configuration(</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <a class="code" href="classIO_1_1CommandLineConfig.xhtml">IO::CommandLineConfig</a> &amp;configuration,</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keyword">const</span> std::string &amp;mock_executable,</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="comment">//alternating /&lt;parameter name&gt;, &lt;parameter value&gt; pairs, with both</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment"></span>        va_list options</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    );</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;} <span class="comment">//End IO namespace.</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassIO_1_1CommandLineConfig_xhtml"><div class="ttname"><a href="classIO_1_1CommandLineConfig.xhtml">IO::CommandLineConfig</a></div><div class="ttdoc">A base class for configuration of tools using the command line.</div><div class="ttdef"><b>Definition:</b> CommandLineConfig.h:22</div></div>
<div class="ttc" id="aclassIO_1_1CommandLineConfig_xhtml_ac8b2ba9595113335c9b7938e09ee5086"><div class="ttname"><a href="classIO_1_1CommandLineConfig.xhtml#ac8b2ba9595113335c9b7938e09ee5086">IO::CommandLineConfig::hidden_options</a></div><div class="ttdeci">const opt::options_description &amp; hidden_options() const</div><div class="ttdoc">See opt::variables_map::_hidden.</div><div class="ttdef"><b>Definition:</b> CommandLineConfig.h:87</div></div>
<div class="ttc" id="aPSF_2CommandLineUtil_8h_xhtml"><div class="ttname"><a href="PSF_2CommandLineUtil_8h.xhtml">CommandLineUtil.h</a></div><div class="ttdoc">Declarations of utilities for command line parsing of PSF information.</div></div>
<div class="ttc" id="aclassIO_1_1CommandLineConfig_xhtml_a8d11b8e10a4ac310587a1f226e57e518"><div class="ttname"><a href="classIO_1_1CommandLineConfig.xhtml#a8d11b8e10a4ac310587a1f226e57e518">IO::CommandLineConfig::_positional</a></div><div class="ttdeci">opt::positional_options_description _positional</div><div class="ttdoc">Description of the positional command line arguments.</div><div class="ttdef"><b>Definition:</b> CommandLineConfig.h:56</div></div>
<div class="ttc" id="aclassIO_1_1CommandLineConfig_xhtml_a48deecc8d57d2b094e64ed9c9a68d609"><div class="ttname"><a href="classIO_1_1CommandLineConfig.xhtml#a48deecc8d57d2b094e64ed9c9a68d609">IO::CommandLineConfig::describe_options</a></div><div class="ttdeci">virtual void describe_options()=0</div><div class="ttdoc">Describes the available command line options.</div></div>
<div class="ttc" id="aclassIO_1_1CommandLineConfig_xhtml_a412212d4c5afe7db9f41e259c137e4d6"><div class="ttname"><a href="classIO_1_1CommandLineConfig.xhtml#a412212d4c5afe7db9f41e259c137e4d6">IO::CommandLineConfig::_hidden</a></div><div class="ttdeci">opt::options_description _hidden</div><div class="ttdoc">The descriptions of options not included in the help message.</div><div class="ttdef"><b>Definition:</b> CommandLineConfig.h:39</div></div>
<div class="ttc" id="aclassIO_1_1CommandLineConfig_xhtml_ad6fc8f480ec93e305085ec77f26e3cf4"><div class="ttname"><a href="classIO_1_1CommandLineConfig.xhtml#ad6fc8f480ec93e305085ec77f26e3cf4">IO::CommandLineConfig::proceed</a></div><div class="ttdeci">bool proceed() const</div><div class="ttdoc">Did parsing succeed?</div><div class="ttdef"><b>Definition:</b> CommandLineConfig.h:81</div></div>
<div class="ttc" id="aclassIO_1_1CommandLineConfig_xhtml_a7b6494144edb16028f3cd1b34b155612"><div class="ttname"><a href="classIO_1_1CommandLineConfig.xhtml#a7b6494144edb16028f3cd1b34b155612">IO::CommandLineConfig::__parsed_ok</a></div><div class="ttdeci">bool __parsed_ok</div><div class="ttdoc">Whether the parsing was successful.</div><div class="ttdef"><b>Definition:</b> CommandLineConfig.h:25</div></div>
<div class="ttc" id="aclassIO_1_1CommandLineConfig_xhtml_aadea4187f4790efcd9f509908b7de48a"><div class="ttname"><a href="classIO_1_1CommandLineConfig.xhtml#aadea4187f4790efcd9f509908b7de48a">IO::CommandLineConfig::CommandLineConfig</a></div><div class="ttdeci">CommandLineConfig(int argc=0, char **argv=NULL)</div><div class="ttdoc">Parse the command line (if any arguments are given as arguments).</div><div class="ttdef"><b>Definition:</b> CommandLineConfig.h:60</div></div>
<div class="ttc" id="aclassIO_1_1CommandLineConfig_xhtml_a4f58bc0d1b077ee6fe75b2fea07cd39d"><div class="ttname"><a href="classIO_1_1CommandLineConfig.xhtml#a4f58bc0d1b077ee6fe75b2fea07cd39d">IO::CommandLineConfig::__executable</a></div><div class="ttdeci">std::string __executable</div><div class="ttdoc">The name of the executable invoked (without any path information).</div><div class="ttdef"><b>Definition:</b> CommandLineConfig.h:28</div></div>
<div class="ttc" id="aclassIO_1_1CommandLineConfig_xhtml_a60457cc39bec668563bfe9557a8b4ac6"><div class="ttname"><a href="classIO_1_1CommandLineConfig.xhtml#a60457cc39bec668563bfe9557a8b4ac6">IO::CommandLineConfig::parse</a></div><div class="ttdeci">void parse(int argc, char **argv)</div><div class="ttdoc">Parse the command line.</div><div class="ttdef"><b>Definition:</b> CommandLineConfig.cpp:13</div></div>
<div class="ttc" id="aclassIO_1_1CommandLineConfig_xhtml_aac28b67b6e53ec381340372e4182d02c"><div class="ttname"><a href="classIO_1_1CommandLineConfig.xhtml#aac28b67b6e53ec381340372e4182d02c">IO::CommandLineConfig::cmdline_only_options</a></div><div class="ttdeci">const opt::options_description &amp; cmdline_only_options() const</div><div class="ttdoc">See opt::variables_map::_cmdline_only.</div><div class="ttdef"><b>Definition:</b> CommandLineConfig.h:91</div></div>
<div class="ttc" id="aclassIO_1_1CommandLineConfig_xhtml_adc6d39d1dc133dc54a9cacfcfc7f5861"><div class="ttname"><a href="classIO_1_1CommandLineConfig.xhtml#adc6d39d1dc133dc54a9cacfcfc7f5861">IO::CommandLineConfig::executable</a></div><div class="ttdeci">const std::string &amp; executable() const</div><div class="ttdoc">The executable whose command line is being processed (no path).</div><div class="ttdef"><b>Definition:</b> CommandLineConfig.h:84</div></div>
<div class="ttc" id="aclassIO_1_1CommandLineConfig_xhtml_abb2f9358885ac2bf71a4247a89985a10"><div class="ttname"><a href="classIO_1_1CommandLineConfig.xhtml#abb2f9358885ac2bf71a4247a89985a10">IO::CommandLineConfig::_cmdline_only</a></div><div class="ttdeci">opt::options_description _cmdline_only</div><div class="ttdoc">Options accessible only on the command line.</div><div class="ttdef"><b>Definition:</b> CommandLineConfig.h:50</div></div>
<div class="ttc" id="aclassIO_1_1CommandLineConfig_xhtml_abf99d77123b5d9943a1ed2bc54a11796"><div class="ttname"><a href="classIO_1_1CommandLineConfig.xhtml#abf99d77123b5d9943a1ed2bc54a11796">IO::CommandLineConfig::cmdline_config_options</a></div><div class="ttdeci">const opt::options_description &amp; cmdline_config_options() const</div><div class="ttdoc">See opt::variables_map::_cmdline_config.</div><div class="ttdef"><b>Definition:</b> CommandLineConfig.h:95</div></div>
<div class="ttc" id="aclassIO_1_1CommandLineConfig_xhtml_a8e3abce6cccedcab50facc9bf1dd3390"><div class="ttname"><a href="classIO_1_1CommandLineConfig.xhtml#a8e3abce6cccedcab50facc9bf1dd3390">IO::CommandLineConfig::_cmdline_config</a></div><div class="ttdeci">opt::options_description _cmdline_config</div><div class="ttdoc">Options accessible from both command line and config file.</div><div class="ttdef"><b>Definition:</b> CommandLineConfig.h:53</div></div>
<div class="ttc" id="aclassIO_1_1CommandLineConfig_xhtml_a5ad926e7afb6e46fdd588b66a15fe488"><div class="ttname"><a href="classIO_1_1CommandLineConfig.xhtml#a5ad926e7afb6e46fdd588b66a15fe488">IO::CommandLineConfig::usage_help</a></div><div class="ttdeci">virtual std::string usage_help(const std::string &amp;) const</div><div class="ttdoc">The part of the help describing the usage and purpose (no options).</div><div class="ttdef"><b>Definition:</b> CommandLineConfig.h:35</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_65a8df4c49f610a40e9230d0067dc79d.xhtml">doc_src</a></li><li class="navelem"><a class="el" href="dir_8302b1090f3908a9d2b3114f60c0dba1.xhtml">IO</a></li><li class="navelem"><a class="el" href="CommandLineConfig_8h.xhtml">CommandLineConfig.h</a></li>
    <li class="footer">Generated on Tue Nov 26 2024 10:27:37 for Sub-Pixel Photometry by <a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.8.20 </li>
  </ul>
</div>
</body>
</html>
