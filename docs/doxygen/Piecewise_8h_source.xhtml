<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.20"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Sub-Pixel Photometry: /Users/kpenev/projects/git/AstroWISP/doc_src/PSF/Piecewise.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Sub-Pixel Photometry
   </div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.svg"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.20 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('Piecewise_8h_source.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Piecewise.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="Piecewise_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#ifndef __PIECEWISE_PSF_H</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#define __PIECEWISE_PSF_H</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;../Core/SharedLibraryExportMacros.h&quot;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="PiecewiseCell_8h.xhtml">PiecewiseCell.h</a>&quot;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="PSF_8h.xhtml">PSF.h</a>&quot;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;../Core/Typedefs.h&quot;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;cassert&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;valarray&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">namespace </span>PSF {</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml">   22</a></span>&#160;    <span class="keyword">class  </span><a class="code" href="classPSF_1_1Piecewise.xhtml">Piecewise</a> : <span class="keyword">public</span> <a class="code" href="classPSF_1_1PSF.xhtml">PSF</a> {</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keyword">private</span>:</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        std::vector&lt;double&gt;</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#a05cb6957a4238f6e9d1ea3e442d150a8">   26</a></span>&#160;            <a class="code" href="classPSF_1_1Piecewise.xhtml#a05cb6957a4238f6e9d1ea3e442d150a8">__grid_x</a>,</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#a356a0c2bba3fa366da1909eab18b90b4">   29</a></span>&#160;            <a class="code" href="classPSF_1_1Piecewise.xhtml#a356a0c2bba3fa366da1909eab18b90b4">__grid_y</a>;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#a52c903196fd6261075785faf223a9ab1">   32</a></span>&#160;        std::vector&lt;const PiecewiseCell*&gt; <a class="code" href="classPSF_1_1Piecewise.xhtml#a52c903196fd6261075785faf223a9ab1">__cells</a>;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#a5291b7ceaddc2d8834b9fcf4af242d47">   35</a></span>&#160;        std::vector&lt;bool&gt; <a class="code" href="classPSF_1_1Piecewise.xhtml#a5291b7ceaddc2d8834b9fcf4af242d47">__cloned_cell</a>;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#aa86ecc1985be6ee2e9943cfd302c5196">   38</a></span>&#160;        <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> <a class="code" href="classPSF_1_1Piecewise.xhtml#aa86ecc1985be6ee2e9943cfd302c5196">cell_index</a>(</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> x_ind,</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> y_ind</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        )<span class="keyword"> const</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">        </span>{<span class="keywordflow">return</span> x_ind + y_ind * (<a class="code" href="classPSF_1_1Piecewise.xhtml#a05cb6957a4238f6e9d1ea3e442d150a8">__grid_x</a>.size() - 1);}</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> <a class="code" href="classPSF_1_1Piecewise.xhtml#aa86ecc1985be6ee2e9943cfd302c5196">cell_index</a>(</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keyword">const</span> std::vector&lt;double&gt; &amp;grid,</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">double</span> &amp;<a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>,</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> hint_lower,</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> hint_upper</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#a3ac0dc82ebf1b570728a786a1b152376">   70</a></span>&#160;        <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> <a class="code" href="classPSF_1_1Piecewise.xhtml#a3ac0dc82ebf1b570728a786a1b152376">cell_index</a>(</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keyword">const</span> std::vector&lt;double&gt; &amp;grid,</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">double</span> &amp;<a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        )<span class="keyword"> const</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keyword">        </span>{<span class="keywordflow">return</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#aa86ecc1985be6ee2e9943cfd302c5196">cell_index</a>(grid, <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>, 0, grid.size() - 1);}</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#a59c413cdd553a8fd5c019f0482d601be">   80</a></span>&#160;        <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> <a class="code" href="classPSF_1_1Piecewise.xhtml#a59c413cdd553a8fd5c019f0482d601be">cell_index</a>(</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <span class="keyword">const</span> std::vector&lt;double&gt; &amp;grid,</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">double</span> &amp;<a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>,</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> hint_lower</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        )<span class="keyword"> const</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword">        </span>{<span class="keywordflow">return</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#aa86ecc1985be6ee2e9943cfd302c5196">cell_index</a>(grid, <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>, hint_lower, grid.size());}</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#aab5adf6cacec194d4a9858a04ffc6992">impose_boundaries</a>(</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> &amp;index,</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> boundary1,</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> buondary2</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a8cabc54488e9ae25a49d7a0ff052fd25">cell_span</a>(</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keyword">const</span> std::vector&lt;double&gt; &amp;grid,</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a54be175389cc03de82c2f97116688294">min_x</a>,</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a8642e89d2b0e5a64497c8d834dc3e6e7">max_x</a>,</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> &amp;low,</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> &amp;high</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a66a77a431abc17d51022ff8274f7a3cd">check_inside_grid</a>(</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="keywordtype">double</span> <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>,</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="keywordtype">double</span> <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7">y</a></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        std::valarray&lt;double&gt; <a class="code" href="classPSF_1_1Piecewise.xhtml#a3dba42755f8fefefb70a99d9a5cf9f71">integrate_single_column_rectangle</a>(</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> x_index,</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> first_y_index,</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> last_y_index,</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="keywordtype">double</span> xmin_cell,</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="keywordtype">double</span> xmax_cell,</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordtype">double</span> ymin_cell,</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <span class="keywordtype">double</span> ymax_cell,</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keyword">const</span> std::vector&lt; std::valarray&lt;double&gt; &gt;&amp;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            parameter_sets=std::vector&lt; std::valarray&lt;double&gt; &gt;()</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        std::valarray&lt;double&gt; <a class="code" href="classPSF_1_1Piecewise.xhtml#a902321800cde9a611daf122eafc37656">integrate_single_row_rectangle</a>(</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> first_x_index,</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> last_x_index,</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> y_index,</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <span class="keywordtype">double</span> xmin_cell,</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <span class="keywordtype">double</span> xmax_cell,</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordtype">double</span> ymin_cell,</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            <span class="keywordtype">double</span> ymax_cell,</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="keyword">const</span> std::vector&lt; std::valarray&lt;double&gt; &gt;&amp;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            parameter_sets=std::vector&lt; std::valarray&lt;double&gt; &gt;()</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        std::valarray&lt;double&gt; <a class="code" href="classPSF_1_1Piecewise.xhtml#aa553679859a41b06f5bc75a6cbfcb42a">integrate_multi_row_column_rectangle</a>(</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> first_x_index,</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> last_x_index,</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> first_y_index,</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> last_y_index,</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <span class="keywordtype">double</span> xmin_cell,</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            <span class="keywordtype">double</span> xmax_cell,</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="keywordtype">double</span> ymin_cell,</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            <span class="keywordtype">double</span> ymax_cell,</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            <span class="keyword">const</span> std::vector&lt; std::valarray&lt;double&gt; &gt;&amp;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            parameter_sets=std::vector&lt; std::valarray&lt;double&gt; &gt;()</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a01a257e1e1934bc7d1eaf0d0caba5564">integrate_single_column_wedge</a>(</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> x_index,</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160; </div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> tip_y_index,</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> corner_y_index,</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160; </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            <span class="keywordtype">double</span> cell_corner_x,</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160; </div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <span class="keywordtype">double</span> cell_corner_y,</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            <span class="keywordtype">double</span> cell_tip_y,</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            <span class="keywordtype">double</span> radius</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160; </div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#af36180df138b4f674e644d71bde47bd7">integrate_single_row_wedge</a>(</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> tip_x_index,</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160; </div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> corner_x_index,</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160; </div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> y_index,</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            <span class="keywordtype">double</span> cell_corner_x,</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            <span class="keywordtype">double</span> cell_corner_y,</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160; </div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            <span class="keywordtype">double</span> cell_tip_x,</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160; </div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            <span class="keywordtype">double</span> radius</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160; </div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#acac663428631499993a740953075feed">integrate_inside_arc</a>(</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> start_col,</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160; </div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> end_col,</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160; </div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> row,</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160; </div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            <span class="keywordtype">double</span> radius</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160; </div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#ab4ff9fa6de52c7287e0796bf5506b0ef">integrate_bottom_row</a>(</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> corner_col,</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160; </div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> corner_row,</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> crossing_col,</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160; </div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> tip_col,</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160; </div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            <span class="keywordtype">double</span> cell_crossing_x,</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160; </div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            <span class="keywordtype">double</span> cell_tip_x,</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; </div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            <span class="keywordtype">double</span> cell_corner_x,</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160; </div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            <span class="keywordtype">double</span> cell_corner_y,</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160; </div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keywordtype">double</span> radius,</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160; </div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            <span class="keywordtype">bool</span> up</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160; </div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#aad6bfcbd54346936739018138617972f">integrate_middle_row</a>(</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> row,</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160; </div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> corner_col,</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160; </div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> inner_crossing_col,</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160; </div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> last_col,</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160; </div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="keywordtype">double</span> cell_corner_x,</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160; </div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            <span class="keywordtype">double</span> inner_cell_crossing_x,</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160; </div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            <span class="keywordtype">double</span> radius,</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160; </div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            <span class="keywordtype">int</span> right</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160; </div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a400d0a7d17fee9861cfc32f875d65f4d">integrate_tip_row</a>(</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> tip_row,</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160; </div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> corner_col,</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160; </div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> crossing_col,</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160; </div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            <span class="keywordtype">double</span> cell_corner_x,</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160; </div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            <span class="keywordtype">double</span> cell_tip_y,</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160; </div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            <span class="keywordtype">double</span> radius,</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160; </div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;            <span class="keywordtype">bool</span> up,</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160; </div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            <span class="keywordtype">bool</span> right</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160; </div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a548ab29271a08ad84142ac96e320860f">integrate_multi_row_column_wedge</a>(</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> tip_col,</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160; </div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> corner_col,</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160; </div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> tip_row,</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160; </div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> corner_row,</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160; </div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            <span class="keywordtype">double</span> cell_corner_x,</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160; </div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            <span class="keywordtype">double</span> cell_corner_y,</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160; </div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            <span class="keywordtype">double</span> cell_tip_x,</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160; </div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            <span class="keywordtype">double</span> cell_tip_y,</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160; </div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;            <span class="keywordtype">double</span> radius</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00470"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#ac27d368bd7b965c2580740c65fce8521">  470</a></span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#ac27d368bd7b965c2580740c65fce8521">integrate_rectangle</a>(</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;            <span class="keywordtype">double</span> center_x,</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160; </div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;            <span class="keywordtype">double</span> center_y,</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160; </div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            <span class="keywordtype">double</span> dx,</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160; </div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;            <span class="keywordtype">double</span> dy</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        )<span class="keyword"> const</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a7de82768cf51ca1d373cbe3090a05ce6">integrate_rectangle_parameters</a>(center_x,</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;                                                  center_y,</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;                                                  dx,</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;                                                  dy)[0];</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        }</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160; </div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        <span class="comment">//following boundaries:</span></div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="comment"></span>        <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a319879152282127f9b45eedf00ea9024">integrate_wedge</a>(</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;            <span class="keywordtype">double</span> <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>,</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160; </div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            <span class="keywordtype">double</span> <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7">y</a>,</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160; </div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            <span class="keywordtype">double</span> radius,</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160; </div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            <span class="comment">//assumed to be on the left (true) or the right(fals) side of x=0.</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            <span class="keywordtype">bool</span> left = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160; </div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;            <span class="comment">//assumed to be on the bottom (true) or the top(fals) side of y=0.</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            <span class="keywordtype">bool</span> bottom = <span class="keyword">false</span></div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> RandomAccessIterator&gt;</div>
<div class="line"><a name="l00520"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#aa3be68d72c6a1882248201c4cd1fb0e3">  520</a></span>&#160;        <a class="code" href="classPSF_1_1Piecewise.xhtml#aa3be68d72c6a1882248201c4cd1fb0e3">Piecewise</a>(</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            RandomAccessIterator first_x,</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160; </div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            RandomAccessIterator last_x,</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160; </div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;            RandomAccessIterator first_y,</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160; </div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;            RandomAccessIterator last_y</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;        ) :</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;            <a class="code" href="classPSF_1_1Piecewise.xhtml#a05cb6957a4238f6e9d1ea3e442d150a8">__grid_x</a>(first_x, last_x),</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;            <a class="code" href="classPSF_1_1Piecewise.xhtml#a356a0c2bba3fa366da1909eab18b90b4">__grid_y</a>(first_y, last_y),</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;            <a class="code" href="classPSF_1_1Piecewise.xhtml#a52c903196fd6261075785faf223a9ab1">__cells</a>((<a class="code" href="classPSF_1_1Piecewise.xhtml#a05cb6957a4238f6e9d1ea3e442d150a8">__grid_x</a>.size() - 1) * (<a class="code" href="classPSF_1_1Piecewise.xhtml#a356a0c2bba3fa366da1909eab18b90b4">__grid_y</a>.size() - 1)),</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            <a class="code" href="classPSF_1_1Piecewise.xhtml#a5291b7ceaddc2d8834b9fcf4af242d47">__cloned_cell</a>(<a class="code" href="classPSF_1_1Piecewise.xhtml#a52c903196fd6261075785faf223a9ab1">__cells</a>.size(), false)</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;        {}</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160; </div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#acb6bb0761038b369ba32bb4f2f46431f">set_cell</a>(</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                <span class="keyword">const</span> <a class="code" href="classPSF_1_1PiecewiseCell.xhtml">PiecewiseCell</a>* cell,</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160; </div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                <span class="keyword">const</span> <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> &amp;x_index,</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160; </div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                <span class="keyword">const</span> <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> &amp;y_index,</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160; </div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                <span class="keywordtype">bool</span> clone=<span class="keyword">false</span>);</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160; </div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">class</span> ConstCellIterator&gt;</div>
<div class="line"><a name="l00559"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#a08362ad7e5bb978c4a68dcf30ed6b17c">  559</a></span>&#160;            <span class="keywordtype">void</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a08362ad7e5bb978c4a68dcf30ed6b17c">set_all_cells</a>(</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                ConstCellIterator first_cell,</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160; </div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                <span class="comment">//directly. Clones are deallocated by the destructor.</span></div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                <span class="keywordtype">bool</span> clone=<span class="keyword">false</span>)</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;            {</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                <span class="keywordflow">if</span>(clone) {</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                    <span class="keywordflow">for</span>(<a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> i=0; i&lt;<a class="code" href="classPSF_1_1Piecewise.xhtml#a52c903196fd6261075785faf223a9ab1">__cells</a>.size(); ++i) {</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                        <a class="code" href="classPSF_1_1Piecewise.xhtml#a52c903196fd6261075785faf223a9ab1">__cells</a>[i]=(*first_cell)-&gt;clone();</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                        ++first_cell;</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                    }</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                } <span class="keywordflow">else</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a52c903196fd6261075785faf223a9ab1">__cells</a>.assign(first_cell, first_cell+<a class="code" href="classPSF_1_1Piecewise.xhtml#a52c903196fd6261075785faf223a9ab1">__cells</a>.size());</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;            }</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160; </div>
<div class="line"><a name="l00577"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#a7c3eeda5563fde4e69caf287ab218ea2">  577</a></span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a7c3eeda5563fde4e69caf287ab218ea2">operator()</a>(</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;            <span class="keywordtype">double</span> <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>,</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160; </div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;            <span class="keywordtype">double</span> <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7">y</a></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        )<span class="keyword"> const</span></div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="keyword">        </span>{<span class="keywordflow">return</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a7c3eeda5563fde4e69caf287ab218ea2">operator()</a>(<a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>, <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7">y</a>, std::vector&lt; std::valarray&lt;double&gt; &gt;())[0];}</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160; </div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        std::valarray&lt;double&gt; <a class="code" href="classPSF_1_1Piecewise.xhtml#a7c3eeda5563fde4e69caf287ab218ea2">operator()</a>(</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                <span class="keywordtype">double</span> <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">x</a>,</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160; </div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                <span class="keywordtype">double</span> <a class="code" href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7">y</a>,</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160; </div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;                <span class="keyword">const</span> std::vector&lt; std::valarray&lt;double&gt; &gt;&amp; parameter_sets</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160; </div>
<div class="line"><a name="l00604"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#a261c010858d5ab52c07d25f1608c638e">  604</a></span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a261c010858d5ab52c07d25f1608c638e">grid_column_width</a>(</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> column</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;        )<span class="keyword"> const</span></div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="keyword">        </span>{<span class="keywordflow">return</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a05cb6957a4238f6e9d1ea3e442d150a8">__grid_x</a>[column + 1] - <a class="code" href="classPSF_1_1Piecewise.xhtml#a05cb6957a4238f6e9d1ea3e442d150a8">__grid_x</a>[column];}</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160; </div>
<div class="line"><a name="l00611"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#a75dcd2c57538578ef01e4bb1de7dad2b">  611</a></span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a75dcd2c57538578ef01e4bb1de7dad2b">grid_row_height</a>(</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;            <a class="code" href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a> row</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        )<span class="keyword"> const</span></div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;<span class="keyword">        </span>{<span class="keywordflow">return</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a356a0c2bba3fa366da1909eab18b90b4">__grid_y</a>[row + 1] - <a class="code" href="classPSF_1_1Piecewise.xhtml#a356a0c2bba3fa366da1909eab18b90b4">__grid_y</a>[row];}</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160; </div>
<div class="line"><a name="l00618"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#a54be175389cc03de82c2f97116688294">  618</a></span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a54be175389cc03de82c2f97116688294">min_x</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a05cb6957a4238f6e9d1ea3e442d150a8">__grid_x</a>.front();}</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160; </div>
<div class="line"><a name="l00621"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#a8642e89d2b0e5a64497c8d834dc3e6e7">  621</a></span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a8642e89d2b0e5a64497c8d834dc3e6e7">max_x</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a05cb6957a4238f6e9d1ea3e442d150a8">__grid_x</a>.back();}</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160; </div>
<div class="line"><a name="l00624"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#a44946e9fff052ef85e5bf7f245c22d32">  624</a></span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a44946e9fff052ef85e5bf7f245c22d32">min_y</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a356a0c2bba3fa366da1909eab18b90b4">__grid_y</a>.front();}</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160; </div>
<div class="line"><a name="l00627"></a><span class="lineno"><a class="line" href="classPSF_1_1Piecewise.xhtml#a6c013d56b5484eef51ea4137bfdd71d5">  627</a></span>&#160;        <span class="keywordtype">double</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a6c013d56b5484eef51ea4137bfdd71d5">max_y</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> <a class="code" href="classPSF_1_1Piecewise.xhtml#a356a0c2bba3fa366da1909eab18b90b4">__grid_y</a>.back();}</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160; </div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        std::valarray&lt;double&gt; <a class="code" href="classPSF_1_1Piecewise.xhtml#a7de82768cf51ca1d373cbe3090a05ce6">integrate_rectangle_parameters</a>(</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;            <span class="keywordtype">double</span> center_x,</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160; </div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;            <span class="keywordtype">double</span> center_y,</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160; </div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;            <span class="keywordtype">double</span> dx,</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160; </div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;            <span class="keywordtype">double</span> dy,</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160; </div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;            <span class="keyword">const</span> std::vector&lt; std::valarray&lt;double&gt; &gt;&amp;</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;            parameter_sets=std::vector&lt; std::valarray&lt;double&gt; &gt;()</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;        ) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    };</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160; </div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;} <span class="comment">//End PSF namespace.</span></div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160; </div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a7de82768cf51ca1d373cbe3090a05ce6"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a7de82768cf51ca1d373cbe3090a05ce6">PSF::Piecewise::integrate_rectangle_parameters</a></div><div class="ttdeci">std::valarray&lt; double &gt; integrate_rectangle_parameters(double center_x, double center_y, double dx, double dy, const std::vector&lt; std::valarray&lt; double &gt; &gt; &amp;parameter_sets=std::vector&lt; std::valarray&lt; double &gt; &gt;()) const</div><div class="ttdoc">Calculates the integral of the PSF over a rectangle.</div><div class="ttdef"><b>Definition:</b> Piecewise.cpp:312</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_ac27d368bd7b965c2580740c65fce8521"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#ac27d368bd7b965c2580740c65fce8521">PSF::Piecewise::integrate_rectangle</a></div><div class="ttdeci">double integrate_rectangle(double center_x, double center_y, double dx, double dy) const</div><div class="ttdoc">Equivalent to integrate_rectangle_parameters() but for the current PSF setup.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:470</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a8cabc54488e9ae25a49d7a0ff052fd25"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a8cabc54488e9ae25a49d7a0ff052fd25">PSF::Piecewise::cell_span</a></div><div class="ttdeci">void cell_span(const std::vector&lt; double &gt; &amp;grid, double min_x, double max_x, Core::vector_size_type &amp;low, Core::vector_size_type &amp;high) const</div><div class="ttdoc">Finds the range of cells that tightly cover a range of positions.</div><div class="ttdef"><b>Definition:</b> Piecewise.cpp:33</div></div>
<div class="ttc" id="anamespacePhot_xhtml_afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff"><div class="ttname"><a href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5a4ef066f5f0262b09d376406005fee8ff">Phot::x</a></div><div class="ttdeci">@ x</div><div class="ttdoc">The x coordinate in the input fits image.</div><div class="ttdef"><b>Definition:</b> PhotColumns.h:28</div></div>
<div class="ttc" id="aclassPSF_1_1PiecewiseCell_xhtml"><div class="ttname"><a href="classPSF_1_1PiecewiseCell.xhtml">PSF::PiecewiseCell</a></div><div class="ttdoc">An abstract base class for all cell of a Piecesiwe.</div><div class="ttdef"><b>Definition:</b> PiecewiseCell.h:15</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a66a77a431abc17d51022ff8274f7a3cd"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a66a77a431abc17d51022ff8274f7a3cd">PSF::Piecewise::check_inside_grid</a></div><div class="ttdeci">void check_inside_grid(double x, double y) const</div><div class="ttdoc">Throws an exception if the specified location is not not inside the grid range.</div><div class="ttdef"><b>Definition:</b> Piecewise.cpp:905</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a44946e9fff052ef85e5bf7f245c22d32"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a44946e9fff052ef85e5bf7f245c22d32">PSF::Piecewise::min_y</a></div><div class="ttdeci">double min_y() const</div><div class="ttdoc">The bottom boundary of the PSF grid.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:624</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a261c010858d5ab52c07d25f1608c638e"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a261c010858d5ab52c07d25f1608c638e">PSF::Piecewise::grid_column_width</a></div><div class="ttdeci">double grid_column_width(Core::vector_size_type column) const</div><div class="ttdoc">Returns the width of a cell column.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:604</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a5291b7ceaddc2d8834b9fcf4af242d47"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a5291b7ceaddc2d8834b9fcf4af242d47">PSF::Piecewise::__cloned_cell</a></div><div class="ttdeci">std::vector&lt; bool &gt; __cloned_cell</div><div class="ttdoc">Flags for whether the corresponding cell was cloned.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:35</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_aa3be68d72c6a1882248201c4cd1fb0e3"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#aa3be68d72c6a1882248201c4cd1fb0e3">PSF::Piecewise::Piecewise</a></div><div class="ttdeci">Piecewise(RandomAccessIterator first_x, RandomAccessIterator last_x, RandomAccessIterator first_y, RandomAccessIterator last_y)</div><div class="ttdoc">Create a PSF model on a specified grid with invalid cells.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:520</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_aa86ecc1985be6ee2e9943cfd302c5196"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#aa86ecc1985be6ee2e9943cfd302c5196">PSF::Piecewise::cell_index</a></div><div class="ttdeci">Core::vector_size_type cell_index(Core::vector_size_type x_ind, Core::vector_size_type y_ind) const</div><div class="ttdoc">The index of the cell with the given x and y indices.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:38</div></div>
<div class="ttc" id="aCore_2Typedefs_8h_xhtml_a285a47e008b3a371dddad36b58c18810"><div class="ttname"><a href="Core_2Typedefs_8h.xhtml#a285a47e008b3a371dddad36b58c18810">Core::vector_size_type</a></div><div class="ttdeci">std::vector&lt; double &gt;::size_type vector_size_type</div><div class="ttdoc">Alias for the type to use for size/index of double vectors.</div><div class="ttdef"><b>Definition:</b> Typedefs.h:23</div></div>
<div class="ttc" id="aPSF_8h_xhtml"><div class="ttname"><a href="PSF_8h.xhtml">PSF.h</a></div><div class="ttdoc">Defines the base class of all PSF models.</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a902321800cde9a611daf122eafc37656"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a902321800cde9a611daf122eafc37656">PSF::Piecewise::integrate_single_row_rectangle</a></div><div class="ttdeci">std::valarray&lt; double &gt; integrate_single_row_rectangle(Core::vector_size_type first_x_index, Core::vector_size_type last_x_index, Core::vector_size_type y_index, double xmin_cell, double xmax_cell, double ymin_cell, double ymax_cell, const std::vector&lt; std::valarray&lt; double &gt; &gt; &amp;parameter_sets=std::vector&lt; std::valarray&lt; double &gt; &gt;()) const</div><div class="ttdoc">Calculates the integral over a rectangle that fits in a single row of cells.</div><div class="ttdef"><b>Definition:</b> Piecewise.cpp:114</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a01a257e1e1934bc7d1eaf0d0caba5564"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a01a257e1e1934bc7d1eaf0d0caba5564">PSF::Piecewise::integrate_single_column_wedge</a></div><div class="ttdeci">double integrate_single_column_wedge(Core::vector_size_type x_index, Core::vector_size_type tip_y_index, Core::vector_size_type corner_y_index, double cell_corner_x, double cell_corner_y, double cell_tip_y, double radius) const</div><div class="ttdoc">Calculates the integral over a wedge that fits in a single column of cells.</div><div class="ttdef"><b>Definition:</b> Piecewise.cpp:404</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a75dcd2c57538578ef01e4bb1de7dad2b"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a75dcd2c57538578ef01e4bb1de7dad2b">PSF::Piecewise::grid_row_height</a></div><div class="ttdeci">double grid_row_height(Core::vector_size_type row) const</div><div class="ttdoc">Returns the height of a cell row.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:611</div></div>
<div class="ttc" id="anamespacePhot_xhtml_afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7"><div class="ttname"><a href="namespacePhot.xhtml#afd335f0316f5f0113818bf99d5f6d6b5ab6b09e0eeba818d3c00951c9de879af7">Phot::y</a></div><div class="ttdeci">@ y</div><div class="ttdoc">The y coordinate in the input fits image.</div><div class="ttdef"><b>Definition:</b> PhotColumns.h:29</div></div>
<div class="ttc" id="aclassPSF_1_1PSF_xhtml"><div class="ttname"><a href="classPSF_1_1PSF.xhtml">PSF::PSF</a></div><div class="ttdoc">An abstract parent class for all PSF models.</div><div class="ttdef"><b>Definition:</b> PSF.h:19</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_acb6bb0761038b369ba32bb4f2f46431f"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#acb6bb0761038b369ba32bb4f2f46431f">PSF::Piecewise::set_cell</a></div><div class="ttdeci">void set_cell(const PiecewiseCell *cell, const Core::vector_size_type &amp;x_index, const Core::vector_size_type &amp;y_index, bool clone=false)</div><div class="ttdoc">Set one of the cells comprising the PSF.</div><div class="ttdef"><b>Definition:</b> Piecewise.cpp:925</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a6c013d56b5484eef51ea4137bfdd71d5"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a6c013d56b5484eef51ea4137bfdd71d5">PSF::Piecewise::max_y</a></div><div class="ttdeci">double max_y() const</div><div class="ttdoc">The top boundary of the PSF grid.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:627</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a05cb6957a4238f6e9d1ea3e442d150a8"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a05cb6957a4238f6e9d1ea3e442d150a8">PSF::Piecewise::__grid_x</a></div><div class="ttdeci">std::vector&lt; double &gt; __grid_x</div><div class="ttdoc">The horizontal boundaries of the PSF grid cells.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:26</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a54be175389cc03de82c2f97116688294"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a54be175389cc03de82c2f97116688294">PSF::Piecewise::min_x</a></div><div class="ttdeci">double min_x() const</div><div class="ttdoc">The left boundary of the PSF grid.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:618</div></div>
<div class="ttc" id="aPiecewiseCell_8h_xhtml"><div class="ttname"><a href="PiecewiseCell_8h.xhtml">PiecewiseCell.h</a></div><div class="ttdoc">Defines a base class for the cells comprising a Piecewise.</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a52c903196fd6261075785faf223a9ab1"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a52c903196fd6261075785faf223a9ab1">PSF::Piecewise::__cells</a></div><div class="ttdeci">std::vector&lt; const PiecewiseCell * &gt; __cells</div><div class="ttdoc">The cells indexed as x_ind + y_ind*Nx.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:32</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a08362ad7e5bb978c4a68dcf30ed6b17c"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a08362ad7e5bb978c4a68dcf30ed6b17c">PSF::Piecewise::set_all_cells</a></div><div class="ttdeci">void set_all_cells(ConstCellIterator first_cell, bool clone=false)</div><div class="ttdoc">Set all cells.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:559</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a356a0c2bba3fa366da1909eab18b90b4"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a356a0c2bba3fa366da1909eab18b90b4">PSF::Piecewise::__grid_y</a></div><div class="ttdeci">std::vector&lt; double &gt; __grid_y</div><div class="ttdoc">The vertical boundaries of the PSF grid cells.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:29</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a59c413cdd553a8fd5c019f0482d601be"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a59c413cdd553a8fd5c019f0482d601be">PSF::Piecewise::cell_index</a></div><div class="ttdeci">Core::vector_size_type cell_index(const std::vector&lt; double &gt; &amp;grid, const double &amp;x, Core::vector_size_type hint_lower) const</div><div class="ttdoc">The index of the cell to which the given coordinate belongs.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:80</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a319879152282127f9b45eedf00ea9024"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a319879152282127f9b45eedf00ea9024">PSF::Piecewise::integrate_wedge</a></div><div class="ttdeci">double integrate_wedge(double x, double y, double radius, bool left=false, bool bottom=false) const</div><div class="ttdoc">Integrates the PSF over the smallest of the four wedges with the.</div><div class="ttdef"><b>Definition:</b> Piecewise.cpp:795</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_aab5adf6cacec194d4a9858a04ffc6992"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#aab5adf6cacec194d4a9858a04ffc6992">PSF::Piecewise::impose_boundaries</a></div><div class="ttdeci">void impose_boundaries(Core::vector_size_type &amp;index, Core::vector_size_type boundary1, Core::vector_size_type buondary2) const</div><div class="ttdoc">If an index is outside a range it is overwritten by the closest boundary.</div><div class="ttdef"><b>Definition:</b> Piecewise.cpp:696</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_aad6bfcbd54346936739018138617972f"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#aad6bfcbd54346936739018138617972f">PSF::Piecewise::integrate_middle_row</a></div><div class="ttdeci">double integrate_middle_row(Core::vector_size_type row, Core::vector_size_type corner_col, Core::vector_size_type inner_crossing_col, Core::vector_size_type last_col, double cell_corner_x, double inner_cell_crossing_x, double radius, int right) const</div><div class="ttdoc">Integrates a row betweent the corner and the tip of a multi row and column wedge.</div><div class="ttdef"><b>Definition:</b> Piecewise.cpp:600</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_acac663428631499993a740953075feed"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#acac663428631499993a740953075feed">PSF::Piecewise::integrate_inside_arc</a></div><div class="ttdeci">double integrate_inside_arc(Core::vector_size_type start_col, Core::vector_size_type end_col, Core::vector_size_type row, double radius) const</div><div class="ttdoc">Integrates over the area interior to a circle that overlaps with a row of cells.</div><div class="ttdef"><b>Definition:</b> Piecewise.cpp:493</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a400d0a7d17fee9861cfc32f875d65f4d"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a400d0a7d17fee9861cfc32f875d65f4d">PSF::Piecewise::integrate_tip_row</a></div><div class="ttdeci">double integrate_tip_row(Core::vector_size_type tip_row, Core::vector_size_type corner_col, Core::vector_size_type crossing_col, double cell_corner_x, double cell_tip_y, double radius, bool up, bool right) const</div><div class="ttdoc">Integrates the row of cells containing the tip of a wedge.</div><div class="ttdef"><b>Definition:</b> Piecewise.cpp:660</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_aa553679859a41b06f5bc75a6cbfcb42a"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#aa553679859a41b06f5bc75a6cbfcb42a">PSF::Piecewise::integrate_multi_row_column_rectangle</a></div><div class="ttdeci">std::valarray&lt; double &gt; integrate_multi_row_column_rectangle(Core::vector_size_type first_x_index, Core::vector_size_type last_x_index, Core::vector_size_type first_y_index, Core::vector_size_type last_y_index, double xmin_cell, double xmax_cell, double ymin_cell, double ymax_cell, const std::vector&lt; std::valarray&lt; double &gt; &gt; &amp;parameter_sets=std::vector&lt; std::valarray&lt; double &gt; &gt;()) const</div><div class="ttdoc">Calculates the integral over a rectangle spanning multiple rows and columns.</div><div class="ttdef"><b>Definition:</b> Piecewise.cpp:156</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a3dba42755f8fefefb70a99d9a5cf9f71"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a3dba42755f8fefefb70a99d9a5cf9f71">PSF::Piecewise::integrate_single_column_rectangle</a></div><div class="ttdeci">std::valarray&lt; double &gt; integrate_single_column_rectangle(Core::vector_size_type x_index, Core::vector_size_type first_y_index, Core::vector_size_type last_y_index, double xmin_cell, double xmax_cell, double ymin_cell, double ymax_cell, const std::vector&lt; std::valarray&lt; double &gt; &gt; &amp;parameter_sets=std::vector&lt; std::valarray&lt; double &gt; &gt;()) const</div><div class="ttdoc">Calculates the integral over a rectangle that fits in a single column of cells.</div><div class="ttdef"><b>Definition:</b> Piecewise.cpp:48</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_af36180df138b4f674e644d71bde47bd7"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#af36180df138b4f674e644d71bde47bd7">PSF::Piecewise::integrate_single_row_wedge</a></div><div class="ttdeci">double integrate_single_row_wedge(Core::vector_size_type tip_x_index, Core::vector_size_type corner_x_index, Core::vector_size_type y_index, double cell_corner_x, double cell_corner_y, double cell_tip_x, double radius) const</div><div class="ttdoc">Calculates the integral over a wedge that fits in a single row of cells.</div><div class="ttdef"><b>Definition:</b> Piecewise.cpp:456</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a7c3eeda5563fde4e69caf287ab218ea2"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a7c3eeda5563fde4e69caf287ab218ea2">PSF::Piecewise::operator()</a></div><div class="ttdeci">double operator()(double x, double y) const</div><div class="ttdoc">Evaluates the PSF at the given position.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:577</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a8642e89d2b0e5a64497c8d834dc3e6e7"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a8642e89d2b0e5a64497c8d834dc3e6e7">PSF::Piecewise::max_x</a></div><div class="ttdeci">double max_x() const</div><div class="ttdoc">The right boundary of the PSF grid.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:621</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml">PSF::Piecewise</a></div><div class="ttdoc">A PSF model consisting of a grid of rectangles each with a separate intensity function.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:22</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a548ab29271a08ad84142ac96e320860f"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a548ab29271a08ad84142ac96e320860f">PSF::Piecewise::integrate_multi_row_column_wedge</a></div><div class="ttdeci">double integrate_multi_row_column_wedge(Core::vector_size_type tip_col, Core::vector_size_type corner_col, Core::vector_size_type tip_row, Core::vector_size_type corner_row, double cell_corner_x, double cell_corner_y, double cell_tip_x, double cell_tip_y, double radius) const</div><div class="ttdoc">Calculates the integral over a wedge that spans multiple rows and colunms of cells.</div><div class="ttdef"><b>Definition:</b> Piecewise.cpp:708</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_a3ac0dc82ebf1b570728a786a1b152376"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#a3ac0dc82ebf1b570728a786a1b152376">PSF::Piecewise::cell_index</a></div><div class="ttdeci">Core::vector_size_type cell_index(const std::vector&lt; double &gt; &amp;grid, const double &amp;x) const</div><div class="ttdoc">The index of the cell to which the given coordinate belongs.</div><div class="ttdef"><b>Definition:</b> Piecewise.h:70</div></div>
<div class="ttc" id="aclassPSF_1_1Piecewise_xhtml_ab4ff9fa6de52c7287e0796bf5506b0ef"><div class="ttname"><a href="classPSF_1_1Piecewise.xhtml#ab4ff9fa6de52c7287e0796bf5506b0ef">PSF::Piecewise::integrate_bottom_row</a></div><div class="ttdeci">double integrate_bottom_row(Core::vector_size_type corner_col, Core::vector_size_type corner_row, Core::vector_size_type crossing_col, Core::vector_size_type tip_col, double cell_crossing_x, double cell_tip_x, double cell_corner_x, double cell_corner_y, double radius, bool up) const</div><div class="ttdoc">Integrates the row containing the corner of a multi row and column wedge.</div><div class="ttdef"><b>Definition:</b> Piecewise.cpp:517</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_65a8df4c49f610a40e9230d0067dc79d.xhtml">doc_src</a></li><li class="navelem"><a class="el" href="dir_4a47a2e23d7f4b09837bdcc68caeb318.xhtml">PSF</a></li><li class="navelem"><a class="el" href="Piecewise_8h.xhtml">Piecewise.h</a></li>
    <li class="footer">Generated on Tue Nov 26 2024 10:27:37 for Sub-Pixel Photometry by <a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.8.20 </li>
  </ul>
</div>
</body>
</html>
