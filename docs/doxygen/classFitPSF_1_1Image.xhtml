<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.20"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Sub-Pixel Photometry: FitPSF::Image&lt; SOURCE_TYPE &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script>
<script type="text/javascript" async="async" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Sub-Pixel Photometry
   </div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.svg"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.20 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classFitPSF_1_1Image.xhtml',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-types">Private Types</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classFitPSF_1_1Image-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">FitPSF::Image&lt; SOURCE_TYPE &gt; Class Template Reference<div class="ingroups"><a class="el" href="group__FitPSF.xhtml">FitPSF</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>A class for managing the selection of pixels for PSF/PRF fitting.  
 <a href="classFitPSF_1_1Image.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="FitPSF_2Image_8h_source.xhtml">Image.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for FitPSF::Image&lt; SOURCE_TYPE &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="classFitPSF_1_1Image__coll__graph.png" border="0" usemap="#aFitPSF_1_1Image_3_01SOURCE__TYPE_01_4_coll__map" alt="Collaboration graph"/></div>
<map name="FitPSF_1_1Image_3_01SOURCE__TYPE_01_4_coll__map" id="aFitPSF_1_1Image_3_01SOURCE__TYPE_01_4_coll__map">
<area shape="rect" title="A class for managing the selection of pixels for PSF/PRF fitting." alt="" coords="5,5,215,328"/>
</map>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a21bde15e929b6ba11157ab58f52d3d7a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Image.xhtml#a21bde15e929b6ba11157ab58f52d3d7a">Image</a> (unsigned id=0, double <a class="el" href="classFitPSF_1_1Image.xhtml#a96a7cdf92c232948fa57d025607b9cc8">gain</a>=1.0)</td></tr>
<tr class="memdesc:a21bde15e929b6ba11157ab58f52d3d7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a fit pixel manager for the given image.  <a href="classFitPSF_1_1Image.xhtml#a21bde15e929b6ba11157ab58f52d3d7a">More...</a><br /></td></tr>
<tr class="separator:a21bde15e929b6ba11157ab58f52d3d7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabe6c1e8a597b6504b9d2c10c92421ad"><td class="memItemLeft" align="right" valign="top"><a id="aabe6c1e8a597b6504b9d2c10c92421ad"></a>
unsigned&#160;</td><td class="memItemRight" valign="bottom"><b>id</b> () const</td></tr>
<tr class="separator:aabe6c1e8a597b6504b9d2c10c92421ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7ded3ac273bcda4dabd6b25be85cc6b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classFitPSF_1_1Pixel.xhtml">Pixel</a>&lt; SOURCE_TYPE &gt; *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Image.xhtml#aa7ded3ac273bcda4dabd6b25be85cc6b">assign_to_source</a> (unsigned x, unsigned y, SOURCE_TYPE *source)</td></tr>
<tr class="memdesc:aa7ded3ac273bcda4dabd6b25be85cc6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add the pixel at the given coordinates to the given source and return a pointer to the pixel.  <a href="classFitPSF_1_1Image.xhtml#aa7ded3ac273bcda4dabd6b25be85cc6b">More...</a><br /></td></tr>
<tr class="separator:aa7ded3ac273bcda4dabd6b25be85cc6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac81c11f574acf102d879b9af9d4ae0b4"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classFitPSF_1_1Pixel.xhtml">Pixel</a>&lt; SOURCE_TYPE &gt; *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Image.xhtml#ac81c11f574acf102d879b9af9d4ae0b4">operator()</a> (unsigned x, unsigned y) const</td></tr>
<tr class="memdesc:ac81c11f574acf102d879b9af9d4ae0b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the pixel at the given location.  <a href="classFitPSF_1_1Image.xhtml#ac81c11f574acf102d879b9af9d4ae0b4">More...</a><br /></td></tr>
<tr class="separator:ac81c11f574acf102d879b9af9d4ae0b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac601916e08b01fdcace516f505aa5def"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Image.xhtml#ac601916e08b01fdcace516f505aa5def">background_excess</a> (unsigned x, unsigned y, const <a class="el" href="classBackground_1_1Source.xhtml">Background::Source</a> &amp;background) const</td></tr>
<tr class="memdesc:ac601916e08b01fdcace516f505aa5def"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the signal to noise ratio with which a pixel sticks above a background.  <a href="classFitPSF_1_1Image.xhtml#ac601916e08b01fdcace516f505aa5def">More...</a><br /></td></tr>
<tr class="separator:ac601916e08b01fdcace516f505aa5def"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b54c82b7d9dd1b650fde4e75119a62f"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Image.xhtml#a8b54c82b7d9dd1b650fde4e75119a62f">background_excess</a> (unsigned x, unsigned y, double background_electrons, double background_electrons_variance) const</td></tr>
<tr class="memdesc:a8b54c82b7d9dd1b650fde4e75119a62f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the signal to noise ratio with which a pixel sticks above a background.  <a href="classFitPSF_1_1Image.xhtml#a8b54c82b7d9dd1b650fde4e75119a62f">More...</a><br /></td></tr>
<tr class="separator:a8b54c82b7d9dd1b650fde4e75119a62f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f49c9bd054e7e20c3e89f0fd756ef2f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Image.xhtml#a6f49c9bd054e7e20c3e89f0fd756ef2f">wrap</a> (double *values, char *mask, unsigned long x_resolution, unsigned long y_resolution, double *errors, unsigned id)</td></tr>
<tr class="memdesc:a6f49c9bd054e7e20c3e89f0fd756ef2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wrap the given data in an image.  <a href="classFitPSF_1_1Image.xhtml#a6f49c9bd054e7e20c3e89f0fd756ef2f">More...</a><br /></td></tr>
<tr class="separator:a6f49c9bd054e7e20c3e89f0fd756ef2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ff010016b3752dc8f54dabf181c6a78"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Image.xhtml#a4ff010016b3752dc8f54dabf181c6a78">wrap</a> (<a class="el" href="classCore_1_1Image.xhtml">Core::Image</a>&lt; double &gt; &amp;image)</td></tr>
<tr class="memdesc:a4ff010016b3752dc8f54dabf181c6a78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wrap the given image.  <a href="classFitPSF_1_1Image.xhtml#a4ff010016b3752dc8f54dabf181c6a78">More...</a><br /></td></tr>
<tr class="separator:a4ff010016b3752dc8f54dabf181c6a78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96a7cdf92c232948fa57d025607b9cc8"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Image.xhtml#a96a7cdf92c232948fa57d025607b9cc8">gain</a> () const</td></tr>
<tr class="memdesc:a96a7cdf92c232948fa57d025607b9cc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">The gain of the image set at construction.  <a href="classFitPSF_1_1Image.xhtml#a96a7cdf92c232948fa57d025607b9cc8">More...</a><br /></td></tr>
<tr class="separator:a96a7cdf92c232948fa57d025607b9cc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a347ebc291c6a2b751a909e61b39104c7"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Image.xhtml#a347ebc291c6a2b751a909e61b39104c7">~Image</a> ()</td></tr>
<tr class="memdesc:a347ebc291c6a2b751a909e61b39104c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Delete any pixels allocated through assign_to_source.  <a href="classFitPSF_1_1Image.xhtml#a347ebc291c6a2b751a909e61b39104c7">More...</a><br /></td></tr>
<tr class="separator:a347ebc291c6a2b751a909e61b39104c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-types"></a>
Private Types</h2></td></tr>
<tr class="memitem:ad53d27e91c63ce6453cd8571d8d5361e"><td class="memItemLeft" align="right" valign="top"><a id="ad53d27e91c63ce6453cd8571d8d5361e"></a>
typedef std::vector&lt; <a class="el" href="classFitPSF_1_1Pixel.xhtml">Pixel</a>&lt; SOURCE_TYPE &gt; * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>PixelVector</b></td></tr>
<tr class="separator:ad53d27e91c63ce6453cd8571d8d5361e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a2b1843899b347a0f63c4489ec089b67f"><td class="memItemLeft" align="right" valign="top">std::pair&lt; double, double &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Image.xhtml#a2b1843899b347a0f63c4489ec089b67f">value_variance</a> (unsigned x, unsigned y) const</td></tr>
<tr class="memdesc:a2b1843899b347a0f63c4489ec089b67f"><td class="mdescLeft">&#160;</td><td class="mdescRight">The value and variance in electrons and electrons^2 respectively of a pixel.  <a href="classFitPSF_1_1Image.xhtml#a2b1843899b347a0f63c4489ec089b67f">More...</a><br /></td></tr>
<tr class="separator:a2b1843899b347a0f63c4489ec089b67f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3028ef34e0d84eb57bd5700c81d8975a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Image.xhtml#a3028ef34e0d84eb57bd5700c81d8975a">delete_allocated_pixels</a> ()</td></tr>
<tr class="memdesc:a3028ef34e0d84eb57bd5700c81d8975a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Delete any pixels allocated by <a class="el" href="classFitPSF_1_1Image.xhtml#aa7ded3ac273bcda4dabd6b25be85cc6b" title="Add the pixel at the given coordinates to the given source and return a pointer to the pixel.">assign_to_source()</a>  <a href="classFitPSF_1_1Image.xhtml#a3028ef34e0d84eb57bd5700c81d8975a">More...</a><br /></td></tr>
<tr class="separator:a3028ef34e0d84eb57bd5700c81d8975a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:aa1eb7ae46a4ae0416a5f0ade71e46b12"><td class="memItemLeft" align="right" valign="top">PixelVector&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Image.xhtml#aa1eb7ae46a4ae0416a5f0ade71e46b12">__fit_pixels</a></td></tr>
<tr class="memdesc:aa1eb7ae46a4ae0416a5f0ade71e46b12"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classFitPSF_1_1Image.xhtml" title="A class for managing the selection of pixels for PSF/PRF fitting.">Image</a> of pointers to Pixels for tracking all pixels created for PSF fitting.  <a href="classFitPSF_1_1Image.xhtml#aa1eb7ae46a4ae0416a5f0ade71e46b12">More...</a><br /></td></tr>
<tr class="separator:aa1eb7ae46a4ae0416a5f0ade71e46b12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafbc992aa45bb7cbec9f261b113524e1"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Image.xhtml#aafbc992aa45bb7cbec9f261b113524e1">__gain</a></td></tr>
<tr class="memdesc:aafbc992aa45bb7cbec9f261b113524e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">The gain to assume for the observed image.  <a href="classFitPSF_1_1Image.xhtml#aafbc992aa45bb7cbec9f261b113524e1">More...</a><br /></td></tr>
<tr class="separator:aafbc992aa45bb7cbec9f261b113524e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1a31e0a8883aed059b248ee98bba414"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFitPSF_1_1Image.xhtml#ab1a31e0a8883aed059b248ee98bba414">__id</a></td></tr>
<tr class="memdesc:ab1a31e0a8883aed059b248ee98bba414"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unique identifier of this image.  <a href="classFitPSF_1_1Image.xhtml#ab1a31e0a8883aed059b248ee98bba414">More...</a><br /></td></tr>
<tr class="separator:ab1a31e0a8883aed059b248ee98bba414"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class SOURCE_TYPE&gt;<br />
class FitPSF::Image&lt; SOURCE_TYPE &gt;</h3>

<p>A class for managing the selection of pixels for PSF/PRF fitting. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a21bde15e929b6ba11157ab58f52d3d7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21bde15e929b6ba11157ab58f52d3d7a">&#9670;&nbsp;</a></span>Image()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SOURCE_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classFitPSF_1_1Image.xhtml">FitPSF::Image</a>&lt; SOURCE_TYPE &gt;::<a class="el" href="classFitPSF_1_1Image.xhtml">Image</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>id</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>gain</em> = <code>1.0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a fit pixel manager for the given image. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>Identifier to assign to this image. </td></tr>
    <tr><td class="paramname">gain</td><td>The gain to assume for the image. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a347ebc291c6a2b751a909e61b39104c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a347ebc291c6a2b751a909e61b39104c7">&#9670;&nbsp;</a></span>~Image()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SOURCE_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classFitPSF_1_1Image.xhtml">FitPSF::Image</a>&lt; SOURCE_TYPE &gt;::~<a class="el" href="classFitPSF_1_1Image.xhtml">Image</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Delete any pixels allocated through assign_to_source. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa7ded3ac273bcda4dabd6b25be85cc6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7ded3ac273bcda4dabd6b25be85cc6b">&#9670;&nbsp;</a></span>assign_to_source()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SOURCE_TYPE &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classFitPSF_1_1Pixel.xhtml">Pixel</a>&lt; SOURCE_TYPE &gt; * <a class="el" href="classFitPSF_1_1Image.xhtml">FitPSF::Image</a>&lt; SOURCE_TYPE &gt;::assign_to_source </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SOURCE_TYPE *&#160;</td>
          <td class="paramname"><em>source</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add the pixel at the given coordinates to the given source and return a pointer to the pixel. </p>
<p>This is the only method that creates <a class="el" href="classFitPSF_1_1Pixel.xhtml" title="A class tracking all pixel level informaiton for pixels participating in PSF/PRF fitting.">Pixel</a> instances. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>The x-coordinate of the pixel to assign to the source. </td></tr>
    <tr><td class="paramname">y</td><td>The y-coordinate of the pixel to assign to the source. </td></tr>
    <tr><td class="paramname">source</td><td>The source to assign this pixel to. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac601916e08b01fdcace516f505aa5def"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac601916e08b01fdcace516f505aa5def">&#9670;&nbsp;</a></span>background_excess() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SOURCE_TYPE &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classFitPSF_1_1Image.xhtml">FitPSF::Image</a>&lt; SOURCE_TYPE &gt;::background_excess </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classBackground_1_1Source.xhtml">Background::Source</a> &amp;&#160;</td>
          <td class="paramname"><em>background</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the signal to noise ratio with which a pixel sticks above a background. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>The x-coordinate of the pixel to return the signal to noise of. </td></tr>
    <tr><td class="paramname">y</td><td>The y-coordinate of the pixel to return the signal to noise of. </td></tr>
    <tr><td class="paramname">background</td><td>The background to assume under the pixel (in ADU) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a8b54c82b7d9dd1b650fde4e75119a62f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b54c82b7d9dd1b650fde4e75119a62f">&#9670;&nbsp;</a></span>background_excess() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SOURCE_TYPE &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classFitPSF_1_1Image.xhtml">FitPSF::Image</a>&lt; SOURCE_TYPE &gt;::background_excess </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>background_electrons</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>background_electrons_variance</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the signal to noise ratio with which a pixel sticks above a background. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>The x-coordinate of the pixel to return the signal to noise of. </td></tr>
    <tr><td class="paramname">y</td><td>The y-coordinate of the pixel to return the signal to noise of. </td></tr>
    <tr><td class="paramname">background_electrons</td><td>The background value to assume under the pixel in electrons. </td></tr>
    <tr><td class="paramname">background_electrons_variance</td><td>The background variance to assume untder the source in electrons^2. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a3028ef34e0d84eb57bd5700c81d8975a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3028ef34e0d84eb57bd5700c81d8975a">&#9670;&nbsp;</a></span>delete_allocated_pixels()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SOURCE_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classFitPSF_1_1Image.xhtml">FitPSF::Image</a>&lt; SOURCE_TYPE &gt;::delete_allocated_pixels</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Delete any pixels allocated by <a class="el" href="classFitPSF_1_1Image.xhtml#aa7ded3ac273bcda4dabd6b25be85cc6b" title="Add the pixel at the given coordinates to the given source and return a pointer to the pixel.">assign_to_source()</a> </p>

</div>
</div>
<a id="a96a7cdf92c232948fa57d025607b9cc8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96a7cdf92c232948fa57d025607b9cc8">&#9670;&nbsp;</a></span>gain()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SOURCE_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classFitPSF_1_1Image.xhtml">FitPSF::Image</a>&lt; SOURCE_TYPE &gt;::gain </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The gain of the image set at construction. </p>

</div>
</div>
<a id="ac81c11f574acf102d879b9af9d4ae0b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac81c11f574acf102d879b9af9d4ae0b4">&#9670;&nbsp;</a></span>operator()()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SOURCE_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classFitPSF_1_1Pixel.xhtml">Pixel</a>&lt;SOURCE_TYPE&gt;* <a class="el" href="classFitPSF_1_1Image.xhtml">FitPSF::Image</a>&lt; SOURCE_TYPE &gt;::operator() </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the pixel at the given location. </p>

</div>
</div>
<a id="a2b1843899b347a0f63c4489ec089b67f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b1843899b347a0f63c4489ec089b67f">&#9670;&nbsp;</a></span>value_variance()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SOURCE_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::pair&lt; double, double &gt; <a class="el" href="classFitPSF_1_1Image.xhtml">FitPSF::Image</a>&lt; SOURCE_TYPE &gt;::value_variance </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The value and variance in electrons and electrons^2 respectively of a pixel. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>The x-coordinate of the pixel in the image. </td></tr>
    <tr><td class="paramname">y</td><td>The y-coordinate of the pixel in the image. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4ff010016b3752dc8f54dabf181c6a78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ff010016b3752dc8f54dabf181c6a78">&#9670;&nbsp;</a></span>wrap() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SOURCE_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="classFitPSF_1_1Image.xhtml">FitPSF::Image</a>&lt; SOURCE_TYPE &gt;::wrap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classCore_1_1Image.xhtml">Core::Image</a>&lt; double &gt; &amp;&#160;</td>
          <td class="paramname"><em>image</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Wrap the given image. </p>

</div>
</div>
<a id="a6f49c9bd054e7e20c3e89f0fd756ef2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f49c9bd054e7e20c3e89f0fd756ef2f">&#9670;&nbsp;</a></span>wrap() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SOURCE_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="classFitPSF_1_1Image.xhtml">FitPSF::Image</a>&lt; SOURCE_TYPE &gt;::wrap </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>values</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>mask</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>x_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>y_resolution</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>errors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Wrap the given data in an image. </p>
<p>See <a class="el" href="classCore_1_1Image.xhtml#ab64230c162fcfa9e6aa79e83d78743a3" title="Wrap the given data in an image.">Core::Image::wrap()</a> for description of the arguments. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">values</td><td>The image values of the image to wrap. </td></tr>
    <tr><td class="paramname">mask</td><td>The pixel quality mask of the image to wrap. </td></tr>
    <tr><td class="paramname">x_resolution</td><td>The x resolution of the image. </td></tr>
    <tr><td class="paramname">y_resolution</td><td>The y resolution of the image. </td></tr>
    <tr><td class="paramname">errors</td><td>Estimated errors of the image pixel values. </td></tr>
    <tr><td class="paramname">id</td><td>The ID to assign to the wrapped image. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="aa1eb7ae46a4ae0416a5f0ade71e46b12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1eb7ae46a4ae0416a5f0ade71e46b12">&#9670;&nbsp;</a></span>__fit_pixels</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SOURCE_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">PixelVector <a class="el" href="classFitPSF_1_1Image.xhtml">FitPSF::Image</a>&lt; SOURCE_TYPE &gt;::__fit_pixels</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classFitPSF_1_1Image.xhtml" title="A class for managing the selection of pixels for PSF/PRF fitting.">Image</a> of pointers to Pixels for tracking all pixels created for PSF fitting. </p>

</div>
</div>
<a id="aafbc992aa45bb7cbec9f261b113524e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aafbc992aa45bb7cbec9f261b113524e1">&#9670;&nbsp;</a></span>__gain</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SOURCE_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double <a class="el" href="classFitPSF_1_1Image.xhtml">FitPSF::Image</a>&lt; SOURCE_TYPE &gt;::__gain</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The gain to assume for the observed image. </p>

</div>
</div>
<a id="ab1a31e0a8883aed059b248ee98bba414"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1a31e0a8883aed059b248ee98bba414">&#9670;&nbsp;</a></span>__id</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class SOURCE_TYPE &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="classFitPSF_1_1Image.xhtml">FitPSF::Image</a>&lt; SOURCE_TYPE &gt;::__id</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Unique identifier of this image. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/Users/kpenev/projects/git/AstroWISP/doc_src/FitPSF/<a class="el" href="FitPSF_2Common_8h_source.xhtml">Common.h</a></li>
<li>/Users/kpenev/projects/git/AstroWISP/doc_src/FitPSF/<a class="el" href="FitPSF_2Image_8h_source.xhtml">Image.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>FitPSF</b></li><li class="navelem"><a class="el" href="classFitPSF_1_1Image.xhtml">Image</a></li>
    <li class="footer">Generated on Tue May 21 2024 21:08:47 for Sub-Pixel Photometry by <a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.8.20 </li>
  </ul>
</div>
</body>
</html>
